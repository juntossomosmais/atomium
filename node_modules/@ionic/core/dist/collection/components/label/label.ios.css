:host-context(.item) {
  /**
   * @prop --color: Color of the label. This property is only available when using `ion-label` inside of an `ion-item`.
   */
  --color: initial;
  display: block;
  color: var(--color);
  font-family: var(--ion-font-family, inherit);
  font-size: inherit;
  text-overflow: ellipsis;
  white-space: nowrap;
  overflow: hidden;
  box-sizing: border-box;
}

:host(.ion-color) {
  color: var(--ion-color-base);
}

:host(.ion-text-wrap),
:host([text-wrap]) {
  white-space: normal;
}

:host-context(.item-interactive-disabled:not(.item-multiple-inputs)) {
  cursor: default;
  opacity: 0.3;
  pointer-events: none;
}

:host-context(.item-input) {
  flex: initial;
  max-width: 200px;
  pointer-events: none;
}

:host-context(.item-textarea) {
  align-self: baseline;
}

:host(.label-fixed) {
  flex: 0 0 100px;
  width: 100px;
  min-width: 100px;
  max-width: 200px;
}

:host(.label-stacked),
:host(.label-floating) {
  margin-bottom: 0;
  align-self: stretch;
  width: auto;
  max-width: 100%;
}

:host(.label-no-animate.label-floating) {
  transition: none;
}

::slotted(*) h1,
::slotted(*) h2,
::slotted(*) h3,
::slotted(*) h4,
::slotted(*) h5,
::slotted(*) h6 {
  text-overflow: inherit;
  overflow: inherit;
}

:host(.ion-text-wrap),
:host([text-wrap]) {
  font-size: 14px;
  line-height: 1.5;
}

:host(.label-stacked) {
  margin-bottom: 4px;
  font-size: 14px;
}

:host(.label-floating) {
  margin-bottom: 0;
  transform: translate(0, 29px);
  transform-origin: left top;
  transition: transform 150ms ease-in-out;
}
:host-context([dir=rtl]):host(.label-floating), :host-context([dir=rtl]).label-floating {
  transform-origin: right top;
}

:host-context(.item-textarea).label-floating {
  transform: translate(0, 28px);
}

:host-context(.item-has-focus).label-floating,
:host-context(.item-has-placeholder:not(.item-input)).label-floating,
:host-context(.item-has-value).label-floating {
  transform: scale(0.82);
}

::slotted(*) h1 {
  margin-left: 0;
  margin-right: 0;
  margin-top: 3px;
  margin-bottom: 2px;
  font-size: 22px;
  font-weight: normal;
}

::slotted(*) h2 {
  margin-left: 0;
  margin-right: 0;
  margin-top: 0;
  margin-bottom: 2px;
  font-size: 17px;
  font-weight: normal;
}

::slotted(*) h3,
::slotted(*) h4,
::slotted(*) h5,
::slotted(*) h6 {
  margin-left: 0;
  margin-right: 0;
  margin-top: 0;
  margin-bottom: 3px;
  font-size: 14px;
  font-weight: normal;
  line-height: normal;
}

::slotted(*) p {
  margin-left: 0;
  margin-right: 0;
  margin-top: 0;
  margin-bottom: 2px;
  font-size: 14px;
  line-height: normal;
  text-overflow: inherit;
  overflow: inherit;
}

::slotted(p) {
  color: rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.4);
}

:host(.in-item-color)::slotted(p) {
  color: inherit;
}

::slotted(*) h2:last-child,
::slotted(*) h3:last-child,
::slotted(*) h4:last-child,
::slotted(*) h5:last-child,
::slotted(*) h6:last-child,
::slotted(*) p:last-child {
  margin-bottom: 0;
}