"use strict";var __create=Object.create;var __defProp=Object.defineProperty;var __getOwnPropDesc=Object.getOwnPropertyDescriptor;var __getOwnPropNames=Object.getOwnPropertyNames;var __getProtoOf=Object.getPrototypeOf,__hasOwnProp=Object.prototype.hasOwnProperty;var __copyProps=(to,from,except,desc)=>{if(from&&typeof from=="object"||typeof from=="function")for(let key of __getOwnPropNames(from))!__hasOwnProp.call(to,key)&&key!==except&&__defProp(to,key,{get:()=>from[key],enumerable:!(desc=__getOwnPropDesc(from,key))||desc.enumerable});return to};var __toESM=(mod,isNodeMode,target)=>(target=mod!=null?__create(__getProtoOf(mod)):{},__copyProps(isNodeMode||!mod||!mod.__esModule?__defProp(target,"default",{value:mod,enumerable:!0}):target,mod));var import_react6=__toESM(require("react")),import_manager_api4=require("@storybook/manager-api");var import_react5=__toESM(require("react")),import_manager_api3=require("@storybook/manager-api"),import_components4=require("@storybook/components");var import_react4=__toESM(require("react")),import_manager_api2=require("@storybook/manager-api"),import_client_logger=require("@storybook/client-logger"),import_components3=require("@storybook/components");var import_react=__toESM(require("react")),import_components=require("@storybook/components"),ToolbarMenuButton=({active,title,icon,description,onClick})=>import_react.default.createElement(import_components.IconButton,{active,title:description,onClick},icon&&import_react.default.createElement(import_components.Icons,{icon}),title?`\xA0${title}`:null);var import_react2=__toESM(require("react")),import_manager_api=require("@storybook/manager-api");var disallowedCycleableItemTypes=["reset"],createCycleValueArray=items=>items.filter(item=>!disallowedCycleableItemTypes.includes(item.type)).map(item=>item.value);var ADDON_ID="addon-toolbars";var registerShortcuts=async(api,id,shortcuts)=>{shortcuts&&shortcuts.next&&await api.setAddonShortcut(ADDON_ID,{label:shortcuts.next.label,defaultShortcut:shortcuts.next.keys,actionName:`${id}:next`,action:shortcuts.next.action}),shortcuts&&shortcuts.previous&&await api.setAddonShortcut(ADDON_ID,{label:shortcuts.previous.label,defaultShortcut:shortcuts.previous.keys,actionName:`${id}:previous`,action:shortcuts.previous.action}),shortcuts&&shortcuts.reset&&await api.setAddonShortcut(ADDON_ID,{label:shortcuts.reset.label,defaultShortcut:shortcuts.reset.keys,actionName:`${id}:reset`,action:shortcuts.reset.action})};var withKeyboardCycle=Component=>props=>{let{id,toolbar:{items,shortcuts}}=props,api=(0,import_manager_api.useStorybookApi)(),[globals,updateGlobals]=(0,import_manager_api.useGlobals)(),cycleValues=(0,import_react2.useRef)([]),currentValue=globals[id],reset=(0,import_react2.useCallback)(()=>{updateGlobals({[id]:""})},[updateGlobals]),setNext=(0,import_react2.useCallback)(()=>{let values=cycleValues.current,currentIndex=values.indexOf(currentValue),newCurrentIndex=currentIndex===values.length-1?0:currentIndex+1,newCurrent=cycleValues.current[newCurrentIndex];updateGlobals({[id]:newCurrent})},[cycleValues,currentValue,updateGlobals]),setPrevious=(0,import_react2.useCallback)(()=>{let values=cycleValues.current,indexOf=values.indexOf(currentValue),currentIndex=indexOf>-1?indexOf:0,newCurrentIndex=currentIndex===0?values.length-1:currentIndex-1,newCurrent=cycleValues.current[newCurrentIndex];updateGlobals({[id]:newCurrent})},[cycleValues,currentValue,updateGlobals]);return(0,import_react2.useEffect)(()=>{shortcuts&&registerShortcuts(api,id,{next:{...shortcuts.next,action:setNext},previous:{...shortcuts.previous,action:setPrevious},reset:{...shortcuts.reset,action:reset}})},[api,id,shortcuts,setNext,setPrevious,reset]),(0,import_react2.useEffect)(()=>{cycleValues.current=createCycleValueArray(items)},[]),import_react2.default.createElement(Component,{cycleValues:cycleValues.current,...props})};var getSelectedItem=({currentValue,items})=>currentValue!=null&&items.find(item=>item.value===currentValue),getSelectedIcon=({currentValue,items})=>{let selectedItem=getSelectedItem({currentValue,items});if(selectedItem)return selectedItem.icon},getSelectedTitle=({currentValue,items})=>{let selectedItem=getSelectedItem({currentValue,items});if(selectedItem)return selectedItem.title};var import_react3=__toESM(require("react")),import_components2=require("@storybook/components"),ToolbarMenuListItem=({left,right,title,value,icon,hideIcon,onClick,currentValue})=>{let Icon=icon&&import_react3.default.createElement(import_components2.Icons,{style:{opacity:1},icon}),Item={id:value||currentValue,active:currentValue===value,right,title,left,onClick};return icon&&!hideIcon&&(Item.left=Icon),Item};var ToolbarMenuList=withKeyboardCycle(({id,name,description,toolbar:{icon:_icon,items,title:_title,preventDynamicIcon,dynamicTitle}})=>{let[globals,updateGlobals]=(0,import_manager_api2.useGlobals)(),[isTooltipVisible,setIsTooltipVisible]=(0,import_react4.useState)(!1),currentValue=globals[id],hasGlobalValue=!!currentValue,icon=_icon,title=_title;preventDynamicIcon||(icon=getSelectedIcon({currentValue,items})||icon),title?!icon&&!title&&(title=name,(0,import_client_logger.deprecate)(`Using the \`name\` "${name}" as toolbar title for backward compatibility. \`name\` will stop having dual purposes in the future. Please specify either a \`title\` or an \`icon\` in \`globalTypes\` instead.`)):(title=name,(0,import_client_logger.deprecate)("`showName` is deprecated as `name` will stop having dual purposes in the future. Please specify a `title` in `globalTypes` instead.")),dynamicTitle&&(title=getSelectedTitle({currentValue,items})||title);let handleItemClick=(0,import_react4.useCallback)(value=>{updateGlobals({[id]:value})},[currentValue,updateGlobals]);return import_react4.default.createElement(import_components3.WithTooltip,{placement:"top",tooltip:({onHide})=>{let links=items.filter(({type})=>{let shouldReturn=!0;return type==="reset"&&!currentValue&&(shouldReturn=!1),shouldReturn}).map(item=>ToolbarMenuListItem({...item,currentValue,onClick:()=>{handleItemClick(item.value),onHide()}}));return import_react4.default.createElement(import_components3.TooltipLinkList,{links})},closeOnOutsideClick:!0,onVisibleChange:setIsTooltipVisible},import_react4.default.createElement(ToolbarMenuButton,{active:isTooltipVisible||hasGlobalValue,description:description||"",icon,title:title||""}))});var defaultItemValues={type:"item",value:""},normalizeArgType=(key,argType)=>({...argType,name:argType.name||key,description:argType.description||key,toolbar:{...argType.toolbar,items:argType.toolbar.items.map(_item=>{let item=typeof _item=="string"?{value:_item,title:_item}:_item;return item.type==="reset"&&argType.toolbar.icon&&(item.icon=argType.toolbar.icon,item.hideIcon=!0),{...defaultItemValues,...item}})}});var ToolbarManager=()=>{let globalTypes=(0,import_manager_api3.useGlobalTypes)(),globalIds=Object.keys(globalTypes).filter(id=>!!globalTypes[id].toolbar);return globalIds.length?import_react5.default.createElement(import_react5.default.Fragment,null,import_react5.default.createElement(import_components4.Separator,null),globalIds.map(id=>{let normalizedArgType=normalizeArgType(id,globalTypes[id]);return import_react5.default.createElement(ToolbarMenuList,{key:id,id,...normalizedArgType})})):null};import_manager_api4.addons.register(ADDON_ID,()=>import_manager_api4.addons.add(ADDON_ID,{title:ADDON_ID,id:"toolbar",type:import_manager_api4.types.TOOL,match:()=>!0,render:()=>import_react6.default.createElement(ToolbarManager,null)}));
