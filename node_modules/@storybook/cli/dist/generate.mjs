import{HandledError,JsPackageManagerFactory,SUPPORTED_RENDERERS,__require,codeLog,commandLog,copyTemplate,copyTemplateFiles,externalFrameworks,getBabelDependencies,getBowerJson,getCliDir,getEnvConfig,getPackageDetails,getStorybookVersionSpecifier,installableProjectTypes,isNxProject,paddedLog,parseList,readFileAsJson,supportedTemplates,unsupportedTemplate,useNpmWarning,versions_default,writeFileAsJson}from"./chunk-ATYUI2TC.mjs";import program from"commander";import path10 from"path";import chalk28 from"chalk";import envinfo from"envinfo";import leven from"leven";import{sync as readUpSync3}from"read-pkg-up";import{logger as logger27}from"@storybook/node-logger";import{addToGlobalContext}from"@storybook/telemetry";import chalk24 from"chalk";import prompts6 from"prompts";import{telemetry}from"@storybook/telemetry";import{withTelemetry}from"@storybook/core-server";import fs from"fs";import findUp from"find-up";import semver from"semver";import{logger}from"@storybook/node-logger";import{pathExistsSync}from"fs-extra";import{join}from"path";var detectWebpack=packageManager=>{try{let out="";if(packageManager.type==="npm")try{out=packageManager.executeCommand("npm",["ls","webpack"])}catch{out=packageManager.executeCommand("npm",["why","webpack"])}else out=packageManager.executeCommand("yarn",["why","webpack"]);if(out.includes("webpack@4")||out.includes("webpack@npm:4"))return 4;if(out.includes("webpack@5")||out.includes("webpack@npm:5"))return 5}catch{}return!1};var viteConfigFiles=["vite.config.ts","vite.config.js","vite.config.mjs"],hasDependency=(packageJson,name,matcher)=>{let version=packageJson.dependencies?.[name]||packageJson.devDependencies?.[name];return version&&typeof matcher=="function"?matcher(version):!!version},hasPeerDependency=(packageJson,name,matcher)=>{let version=packageJson.peerDependencies?.[name];return version&&typeof matcher=="function"?matcher(version):!!version},getFrameworkPreset=(packageJson,framework)=>{let matcher={dependencies:[!1],peerDependencies:[!1],files:[!1]},{preset,files,dependencies,peerDependencies,matcherFunction}=framework,dependencySearches=[];Array.isArray(dependencies)?dependencySearches=dependencies.map(name=>[name,void 0]):typeof dependencies=="object"&&(dependencySearches=Object.entries(dependencies)),dependencySearches.length>0&&(matcher.dependencies=dependencySearches.map(([name,matchFn])=>hasDependency(packageJson,name,matchFn)));let peerDependencySearches=[];return Array.isArray(peerDependencies)?peerDependencySearches=peerDependencies.map(name=>[name,void 0]):typeof peerDependencies=="object"&&(peerDependencySearches=Object.entries(peerDependencies)),peerDependencySearches.length>0&&(matcher.peerDependencies=peerDependencySearches.map(([name,matchFn])=>hasPeerDependency(packageJson,name,matchFn))),Array.isArray(files)&&files.length>0&&(matcher.files=files.map(name=>fs.existsSync(name))),matcherFunction(matcher)?preset:null};function detectFrameworkPreset(packageJson={}){let result=[...supportedTemplates,unsupportedTemplate].find(framework=>getFrameworkPreset(packageJson,framework)!==null);return result?result.preset:"UNDETECTED"}function detectBuilder(packageManager,projectType){if(findUp.sync(viteConfigFiles))return paddedLog("Detected Vite project. Setting builder to Vite"),"vite";if(detectWebpack(packageManager))return paddedLog("Detected webpack project. Setting builder to webpack"),"webpack5";switch(projectType){case"SVELTE":case"SVELTEKIT":case"VUE":case"VUE3":case"SFC_VUE":return"vite";default:return"webpack5"}}function isStorybookInstalled(dependencies,force){return dependencies?!!(!force&&dependencies.devDependencies&&SUPPORTED_RENDERERS.reduce((storybookPresent,framework)=>storybookPresent||!!dependencies.devDependencies[`@storybook/${framework}`],!1)):!1}function detectPnp(){return pathExistsSync(join(process.cwd(),".pnp.cjs"))}function detectLanguage(packageJson){let language="javascript";return!packageJson||fs.existsSync("jsconfig.json")||(hasDependency(packageJson,"typescript",version=>semver.gte(semver.coerce(version),"4.9.0"))&&(!hasDependency(packageJson,"prettier")||hasDependency(packageJson,"prettier",version=>semver.gte(semver.coerce(version),"2.8.0")))&&(!hasDependency(packageJson,"@babel/plugin-transform-typescript")||hasDependency(packageJson,"@babel/plugin-transform-typescript",version=>semver.gte(semver.coerce(version),"7.20.0")))&&(!hasDependency(packageJson,"@typescript-eslint/parser")||hasDependency(packageJson,"@typescript-eslint/parser",version=>semver.gte(semver.coerce(version),"5.44.0")))&&(!hasDependency(packageJson,"eslint-plugin-storybook")||hasDependency(packageJson,"eslint-plugin-storybook",version=>semver.gte(semver.coerce(version),"0.6.8")))?language="typescript-4-9":hasDependency(packageJson,"typescript",version=>semver.gte(semver.coerce(version),"3.8.0"))?language="typescript-3-8":hasDependency(packageJson,"typescript",version=>semver.lt(semver.coerce(version),"3.8.0"))&&logger.warn("Detected TypeScript < 3.8, populating with JavaScript examples")),language}function detect(packageJson,options={}){let bowerJson=getBowerJson();return!packageJson&&!bowerJson?"UNDETECTED":isNxProject(packageJson)?"NX":options.html?"HTML":detectFrameworkPreset(packageJson||bowerJson)}import{join as join2}from"path";import semver2 from"semver";import path3 from"path";import fse2 from"fs-extra";import{dedent as dedent2}from"ts-dedent";import fse from"fs-extra";import path from"path";import{dedent}from"ts-dedent";var logger2=console,sanitizeFramework=framework=>{let matches=framework.match(/(@storybook\/\w+(?:-\w+)*)|(storybook-(\w+(?:-\w+)*))/g);if(matches)return matches[0]};async function configureMain({addons,extensions=["js","jsx","ts","tsx"],storybookConfigFolder,language,...custom}){let srcPath=path.resolve(storybookConfigFolder,"../src"),prefix=await fse.pathExists(srcPath)?"../src":"../stories",config={stories:[`${prefix}/**/*.mdx`,`${prefix}/**/*.stories.@(${extensions.join("|")})`],addons,...custom},isTypescript=language==="typescript-4-9"||language==="typescript-3-8",mainConfigTemplate=dedent`<<import>>const config<<type>> = <<mainContents>>;
    export default config;`,frameworkPackage=sanitizeFramework(custom.framework?.name);frameworkPackage||(mainConfigTemplate=mainConfigTemplate.replace("<<import>>","").replace("<<type>>",""),logger2.warn("Could not find framework package name"));let mainContents=JSON.stringify(config,null,2).replace(/['"]%%/g,"").replace(/%%['"]/g,""),imports=[];custom.framework?.name.includes("path.dirname(")&&imports.push("import path from 'path';"),isTypescript?imports.push(`import type { StorybookConfig } from '${frameworkPackage}';`):imports.push(`/** @type { import('${frameworkPackage}').StorybookConfig } */`);let mainJsContents=mainConfigTemplate.replace("<<import>>",`${imports.join(`

`)}
`).replace("<<type>>",isTypescript?": StorybookConfig":"").replace("<<mainContents>>",mainContents),prettier=(await import("prettier")).default,mainPath=`./${storybookConfigFolder}/main.${isTypescript?"ts":"js"}`,prettyMain=prettier.format(dedent(mainJsContents),{...prettier.resolveConfig.sync(process.cwd()),filepath:mainPath});await fse.writeFile(mainPath,prettyMain,{encoding:"utf8"})}async function configurePreview(options){let{prefix:frameworkPrefix=""}=options.frameworkPreviewParts||{},isTypescript=options.language==="typescript-4-9"||options.language==="typescript-3-8",rendererPackage=options.rendererId&&!externalFrameworks.map(({name})=>name).includes(options.rendererId)?`@storybook/${options.rendererId}`:null,previewPath=`./${options.storybookConfigFolder}/preview.${isTypescript?"ts":"js"}`;if(await fse.pathExists(previewPath))return;let prefix=[isTypescript&&rendererPackage?`import type { Preview } from '${rendererPackage}'`:"",frameworkPrefix].filter(Boolean).join(`
`),preview=dedent`
    ${prefix}${prefix.length>0?`
`:""}
    ${!isTypescript&&rendererPackage?`/** @type { import('${rendererPackage}').Preview } */
`:""}const preview${isTypescript?": Preview":""} = {
      parameters: {
        actions: { argTypesRegex: '^on[A-Z].*' },
        controls: {
          matchers: {
           color: /(background|color)$/i,
           date: /Date$/,
          },
        },
      },
    };
    
    export default preview;
    `.replace(`  
`,"").trim(),prettier=(await import("prettier")).default,prettyPreview=prettier.format(preview,{...prettier.resolveConfig.sync(process.cwd()),filepath:previewPath});await fse.writeFile(previewPath,prettyPreview,{encoding:"utf8"})}import{writeFile,pathExists}from"fs-extra";import{logger as logger3}from"@storybook/node-logger";import path2 from"path";import prompts from"prompts";import chalk from"chalk";var generateStorybookBabelConfigInCWD=async()=>{let target=process.cwd();return generateStorybookBabelConfig({target})},generateStorybookBabelConfig=async({target})=>{logger3.info(`Generating the storybook default babel config at ${target}`);let fileName=".babelrc.json",location=path2.join(target,fileName);if(await pathExists(location)){let{overwrite}=await prompts({type:"confirm",initial:!1,name:"overwrite",message:`${fileName} already exists. Would you like overwrite it?`});if(overwrite===!1){logger3.warn("Cancelled, babel config file was NOT written to file-system.");return}}logger3.info(`The config will contain ${chalk.yellow("@babel/preset-env")} and you will be prompted for additional presets, if you wish to add them depending on your project needs.`);let{typescript,jsx}=await prompts([{type:"confirm",initial:!1,name:"typescript",message:"Do you want to add the TypeScript preset?"},{type:"confirm",initial:!1,name:"jsx",message:"Do you want to add the React preset?"}]),added=["@babel/preset-env"],presets=[["@babel/preset-env",{targets:{chrome:100}}]];typescript&&(added.push("@babel/preset-typescript"),presets.push("@babel/preset-typescript")),jsx&&(added.push("@babel/preset-react"),presets.push("@babel/preset-react"));let contents=JSON.stringify({sourceType:"unambiguous",presets,plugins:[]},null,2);logger3.info(`Writing file to ${location}`),await writeFile(location,contents);let{runInstall}=await prompts({type:"confirm",initial:!0,name:"runInstall",message:`Shall we install the required dependencies now? (${added.join(", ")})`});runInstall?(logger3.info("Installing dependencies..."),JsPackageManagerFactory.getPackageManager().addDependencies({installAsDevDependencies:!0},added)):logger3.info(`\u26A0\uFE0F Please remember to install the required dependencies yourself: (${added.join(", ")})`)};var defaultOptions={extraPackages:[],extraAddons:[],staticDir:void 0,addScripts:!0,addMainFile:!0,addComponents:!0,addBabel:!1,addESLint:!1,extraMain:void 0,framework:void 0,extensions:void 0,componentsDestinationPath:void 0,storybookConfigFolder:".storybook"},getBuilderDetails=builder=>{let map=versions_default;if(map[builder])return builder;let builderPackage=`@storybook/${builder}`;return map[builderPackage]?builderPackage:builder},getExternalFramework=framework=>externalFrameworks.find(exFramework=>framework!==void 0&&(exFramework.name===framework||exFramework.packageName===framework||exFramework?.frameworks?.some?.(item=>item===framework))),getFrameworkPackage=(framework,renderer,builder)=>{let externalFramework=getExternalFramework(framework);return externalFramework===void 0?framework?`@storybook/${framework}`:`@storybook/${renderer}-${builder}`:externalFramework.frameworks!==void 0?externalFramework.frameworks.find(item=>item.match(new RegExp(`-${builder}`))):externalFramework.packageName},getRendererPackage=(framework,renderer)=>{let externalFramework=getExternalFramework(framework);return externalFramework!==void 0?externalFramework.renderer||externalFramework.packageName:`@storybook/${renderer}`},wrapForPnp=packageName=>`%%path.dirname(require.resolve(path.join('${packageName}', 'package.json')))%%`,getFrameworkDetails=(renderer,builder,pnp,framework)=>{let frameworkPackage=getFrameworkPackage(framework,renderer,builder),frameworkPackagePath=pnp?wrapForPnp(frameworkPackage):frameworkPackage,rendererPackage=getRendererPackage(framework,renderer),rendererPackagePath=pnp?wrapForPnp(rendererPackage):rendererPackage,builderPackage=getBuilderDetails(builder),builderPackagePath=pnp?wrapForPnp(builderPackage):builderPackage,isKnownFramework=!!getExternalFramework(frameworkPackage)||!!versions_default[frameworkPackage],isKnownRenderer=!!versions_default[rendererPackage];if(isKnownFramework)return{packages:[rendererPackage,frameworkPackage],framework:frameworkPackagePath,rendererId:renderer,type:"framework"};if(isKnownRenderer)return{packages:[rendererPackage,builderPackage],builder:builderPackagePath,renderer:rendererPackagePath,rendererId:renderer,type:"renderer"};throw new Error(`Could not find the framework (${frameworkPackage}) or renderer (${rendererPackage}) package`)},stripVersions=addons=>addons.map(addon=>getPackageDetails(addon)[0]),hasInteractiveStories=rendererId=>["react","angular","preact","svelte","vue","vue3","html","solid","qwik"].includes(rendererId),hasFrameworkTemplates=framework=>["angular","nextjs"].includes(framework);async function baseGenerator(packageManager,npmOptions,{language,builder="webpack5",pnp,frameworkPreviewParts},renderer,options=defaultOptions,framework){let{extraAddons:extraAddonPackages,extraPackages,staticDir,addScripts,addMainFile,addComponents,addBabel,addESLint,extraMain,extensions,storybookConfigFolder,componentsDestinationPath}={...defaultOptions,...options},{packages:frameworkPackages4,type,rendererId,framework:frameworkInclude,builder:builderInclude}=getFrameworkDetails(renderer,builder,pnp,framework),addons=["@storybook/addon-links","@storybook/addon-essentials",...stripVersions(extraAddonPackages)],addonPackages=["@storybook/addon-links","@storybook/addon-essentials","@storybook/blocks",...extraAddonPackages];hasInteractiveStories(rendererId)&&(addons.push("@storybook/addon-interactions"),addonPackages.push("@storybook/addon-interactions","@storybook/testing-library@^0.0.14-next.1"));let files=await fse2.readdir(process.cwd()),packageJson=packageManager.retrievePackageJson(),installedDependencies=new Set(Object.keys({...packageJson.dependencies,...packageJson.devDependencies}));if(installedDependencies.has("react")||addonPackages.push("react"),installedDependencies.has("react-dom")||addonPackages.push("react-dom"),type==="renderer")throw new Error(dedent2`
        Sorry, for now, you can not do this, please use a framework such as @storybook/react-webpack5

        https://github.com/storybookjs/storybook/issues/18360
      `);let packages=["storybook",getExternalFramework(rendererId)?void 0:`@storybook/${rendererId}`,...frameworkPackages4,...addonPackages,...extraPackages].filter(Boolean).filter(packageToInstall=>!installedDependencies.has(getPackageDetails(packageToInstall)[0])),versionedPackages=await packageManager.getVersionedPackages(packages);await fse2.ensureDir(`./${storybookConfigFolder}`),addMainFile&&await configureMain({framework:{name:frameworkInclude,options:options.framework||{}},storybookConfigFolder,docs:{autodocs:"tag"},addons:pnp?addons.map(wrapForPnp):addons,extensions,language,...staticDir?{staticDirs:[path3.join("..",staticDir)]}:null,...extraMain,...type!=="framework"?{core:{builder:builderInclude}}:{}}),await configurePreview({frameworkPreviewParts,storybookConfigFolder,language,rendererId});let babelDependencies=addBabel&&builder!=="vite"?await getBabelDependencies(packageManager,packageJson):[];!files.some(fname=>fname.startsWith(".babel")||fname.startsWith("babel")||fname==="package.json")&&await generateStorybookBabelConfigInCWD();let depsToInstall=[...versionedPackages,...babelDependencies];if(depsToInstall.length>0&&packageManager.addDependencies({...npmOptions,packageJson},depsToInstall),addScripts&&packageManager.addStorybookCommandInScripts({port:6006}),addESLint&&packageManager.addESLintConfig(),addComponents){let templateLocation=hasFrameworkTemplates(framework)?framework:rendererId;await copyTemplateFiles({renderer:templateLocation,packageManager,language,destination:componentsDestinationPath})}}import fs2 from"fs";import prompts2 from"prompts";import dedent3 from"ts-dedent";var ANGULAR_JSON_PATH="angular.json",compoDocPreviewPrefix=dedent3`
  import { setCompodocJson } from "@storybook/addon-docs/angular";
  import docJson from "../documentation.json";
  setCompodocJson(docJson);
`.trimStart(),promptForCompoDocs=async()=>{let{useCompoDoc}=await prompts2({type:"confirm",name:"useCompoDoc",message:"Do you want to use Compodoc for documentation?"});return useCompoDoc},AngularJSON=class{constructor(){if(!fs2.existsSync(ANGULAR_JSON_PATH))throw commandLog("An angular.json file was not found in the current directory. Storybook needs it to work properly."),new Error("No angular.json file found");let jsonContent=fs2.readFileSync(ANGULAR_JSON_PATH,"utf8");this.json=JSON.parse(jsonContent)}get projects(){return this.json.projects}get projectsWithoutStorybook(){return Object.keys(this.projects).filter(projectName=>{let{architect}=this.projects[projectName];return!architect.storybook})}get hasStorybookBuilder(){return Object.keys(this.projects).some(projectName=>{let{architect}=this.projects[projectName];return Object.keys(architect).some(key=>architect[key].builder==="@storybook/angular:start-storybook")})}get rootProject(){let rootProjectName=Object.keys(this.projects).find(projectName=>{let{root}=this.projects[projectName];return root===""||root==="."});return rootProjectName?this.projects[rootProjectName]:null}getProjectSettingsByName(projectName){return this.projects[projectName]}async getProjectName(){if(this.projectsWithoutStorybook.length>1){let{projectName}=await prompts2({type:"select",name:"projectName",message:"For which project do you want to generate Storybook configuration?",choices:this.projectsWithoutStorybook.map(name=>({title:name,value:name}))});return projectName}return this.projectsWithoutStorybook[0]}addStorybookEntries({angularProjectName,storybookFolder,useCompodoc,root}){let{architect}=this.projects[angularProjectName],baseOptions={configDir:storybookFolder,browserTarget:`${angularProjectName}:build`,compodoc:useCompodoc,...useCompodoc&&{compodocArgs:["-e","json","-d",root||"."]}};architect.storybook||(architect.storybook={builder:"@storybook/angular:start-storybook",options:{...baseOptions,port:6006}}),architect["build-storybook"]||(architect["build-storybook"]={builder:"@storybook/angular:build-storybook",options:{...baseOptions,outputDir:Object.keys(this.projects).length===1?"storybook-static":`dist/storybook/${angularProjectName}`}})}write(){fs2.writeFileSync(ANGULAR_JSON_PATH,JSON.stringify(this.json,null,2))}};var generator=async(packageManager,npmOptions,options,commandOptions)=>{let angularVersionFromDependencies=semver2.coerce(packageManager.retrievePackageJson().dependencies["@angular/core"])?.version,angularVersionFromDevDependencies=semver2.coerce(packageManager.retrievePackageJson().devDependencies["@angular/core"])?.version,angularVersion=angularVersionFromDependencies||angularVersionFromDevDependencies,updatedOptions=semver2.gte(angularVersion,"12.0.0")?{...options,builder:"webpack5"}:options,angularJSON=new AngularJSON;if(angularJSON.projectsWithoutStorybook.length===0)return paddedLog("Every project in your workspace is already set up with Storybook. There is nothing to do!"),Promise.reject();let angularProjectName=await angularJSON.getProjectName();paddedLog(`Adding Storybook support to your "${angularProjectName}" project`);let{root,projectType}=angularJSON.getProjectSettingsByName(angularProjectName),{projects}=angularJSON,useCompodoc=commandOptions.yes?!0:await promptForCompoDocs(),storybookFolder=root?`${root}/.storybook`:".storybook";angularJSON.addStorybookEntries({angularProjectName,storybookFolder,useCompodoc,root}),angularJSON.write(),await baseGenerator(packageManager,npmOptions,{...updatedOptions,...useCompodoc&&{frameworkPreviewParts:{prefix:compoDocPreviewPrefix}}},"angular",{...useCompodoc&&{extraPackages:["@compodoc/compodoc"]},addScripts:!1,componentsDestinationPath:root?`${root}/src/stories`:void 0,storybookConfigFolder:storybookFolder},"angular"),Object.keys(projects).length===1&&packageManager.addScripts({storybook:`ng run ${angularProjectName}:storybook`,"build-storybook":`ng run ${angularProjectName}:build-storybook`});let templateDir=join2(getCliDir(),"templates","angular",projectType||"application");return copyTemplate(templateDir,root||void 0),{projectName:angularProjectName,configDir:storybookFolder}},ANGULAR_default=generator;import{join as join3}from"path";function addStorybookExcludeGlobToTsConfig(){let tsConfigJson=readFileAsJson("tsconfig.json",!0),glob="**/*.stories.ts";if(!tsConfigJson)return;let{exclude=[]}=tsConfigJson;exclude.includes(glob)||(tsConfigJson.exclude=[...exclude,glob],writeFileAsJson("tsconfig.json",tsConfigJson))}var generator2=async(packageManager,npmOptions,options)=>{addStorybookExcludeGlobToTsConfig(),await baseGenerator(packageManager,npmOptions,options,"aurelia",{extraPackages:["aurelia"]});let templateDir=join3(getCliDir(),"templates","aurelia");copyTemplate(templateDir)},AURELIA_default=generator2;var generator3=async(packageManager,npmOptions,options)=>{await baseGenerator(packageManager,npmOptions,options,"ember",{extraPackages:["babel-plugin-ember-modules-api-polyfill","babel-plugin-htmlbars-inline-precompile"],staticDir:"dist"})},EMBER_default=generator3;var generator4=async(packageManager,npmOptions,options)=>{let extraPackages=detectLanguage()==="javascript"?["prop-types"]:[];await baseGenerator(packageManager,npmOptions,options,"react",{extraPackages})},REACT_default=generator4;var generator5=async(packageManager,npmOptions)=>{let packageJson=packageManager.retrievePackageJson(),missingReactDom=!packageJson.dependencies["react-dom"]&&!packageJson.devDependencies["react-dom"],reactVersion=packageJson.dependencies.react,packagesToResolve=["react-native-safe-area-context","@react-native-async-storage/async-storage","@react-native-community/datetimepicker","@react-native-community/slider","@storybook/addon-ondevice-controls","@storybook/addon-ondevice-actions","@storybook/react-native"],packagesWithFixedVersion=["@storybook/addon-actions@^6.5.16","@storybook/addon-controls@^6.5.16"],resolvedPackages=await packageManager.getVersionedPackages(packagesToResolve),packages=[...await getBabelDependencies(packageManager,packageJson),...packagesWithFixedVersion,...resolvedPackages,missingReactDom&&reactVersion&&`react-dom@${reactVersion}`].filter(Boolean);packageManager.addDependencies({...npmOptions,packageJson},packages),packageManager.addScripts({"storybook-generate":"sb-rn-get-stories","storybook-watch":"sb-rn-watcher"});let storybookConfigFolder=".storybook";await copyTemplateFiles({packageManager,renderer:"react-native",language:"javascript",destination:storybookConfigFolder,includeCommonAssets:!1})},REACT_NATIVE_default=generator5;import path4 from"path";import fs3 from"fs";import semver3 from"semver";import dedent4 from"ts-dedent";var generator6=async(packageManager,npmOptions,options)=>{let monorepoRootPath=path4.join(__dirname,"..","..","..","..","..",".."),extraMain=options.linkable?{webpackFinal:`%%(config) => {
      // add monorepo root as a valid directory to import modules from
      config.resolve.plugins.forEach((p) => {
        if (Array.isArray(p.appSrcs)) {
          p.appSrcs.push('${monorepoRootPath}');
              }
            });
          return config;
          }
    %%`}:{},craVersion=semver3.coerce(packageManager.retrievePackageJson().dependencies["react-scripts"])?.version,isCra5OrHigher=craVersion&&semver3.gte(craVersion,"5.0.0"),updatedOptions=isCra5OrHigher?{...options,builder:"webpack5"}:options,extraPackages=[];isCra5OrHigher&&(extraPackages.push("webpack"),extraPackages.push("babel-plugin-named-exports-order"),extraPackages.push("prop-types"));let extraAddons=[`@storybook/preset-create-react-app@${versions_default["@storybook/preset-create-react-app"]}`];if(!isCra5OrHigher)throw new Error(dedent4`
      Storybook 7.0+ doesn't support react-scripts@<5.0.0.

      https://github.com/storybookjs/storybook/blob/next/MIGRATION.md#create-react-app-dropped-cra4-support
    `);await baseGenerator(packageManager,npmOptions,updatedOptions,"react",{extraAddons,extraPackages,staticDir:fs3.existsSync(path4.resolve("./public"))?"public":void 0,addBabel:!1,addESLint:!0,extraMain})},REACT_SCRIPTS_default=generator6;var generator7=async(packageManager,npmOptions,options)=>{await baseGenerator(packageManager,npmOptions,options,"react",void 0,"nextjs")},NEXTJS_default=generator7;var generator8=async(packageManager,npmOptions,options)=>{await baseGenerator(packageManager,npmOptions,options,"vue")},SFC_VUE_default=generator8;var generator9=async(packageManager,npmOptions,options)=>{let extraPackages=options.builder==="webpack5"?["vue-loader@^15.7.0"]:[];await baseGenerator(packageManager,npmOptions,options,"vue",{extraPackages})},VUE_default=generator9;var generator10=async(packageManager,npmOptions,options)=>{let extraPackages=options.builder==="webpack5"?["vue-loader@^17.0.0","@vue/compiler-sfc@^3.2.0"]:[];await baseGenerator(packageManager,npmOptions,options,"vue3",{extraPackages})},VUE3_default=generator10;var generator11=async(packageManager,npmOptions,options)=>{await baseGenerator(packageManager,npmOptions,options,"react")},WEBPACK_REACT_default=generator11;var generator12=async(packageManager,npmOptions,options)=>{await baseGenerator(packageManager,npmOptions,options,"mithril")},MITHRIL_default=generator12;var generator13=async(packageManager,npmOptions,options)=>{await baseGenerator(packageManager,npmOptions,options,"marionette")},MARIONETTE_default=generator13;var generator14=async(packageManager,npmOptions,options)=>{await baseGenerator(packageManager,npmOptions,options,"marko")},MARKO_default=generator14;var generator15=async(packageManager,npmOptions,options)=>{await baseGenerator(packageManager,npmOptions,options,"html")},HTML_default=generator15;var generator16=async(packageManager,npmOptions,options)=>baseGenerator(packageManager,npmOptions,options,"web-components",{extraPackages:["lit"]}),WEB_COMPONENTS_default=generator16;var generator17=async(packageManager,npmOptions,options)=>{await baseGenerator(packageManager,npmOptions,options,"riot",{extraPackages:["riot-tag-loader"]})},RIOT_default=generator17;var generator18=async(packageManager,npmOptions,options)=>{await baseGenerator(packageManager,npmOptions,options,"preact")},PREACT_default=generator18;var generator19=async(packageManager,npmOptions,options)=>{await baseGenerator(packageManager,npmOptions,options,"svelte",{extensions:["js","jsx","ts","tsx","svelte"]})},SVELTE_default=generator19;var generator20=async(packageManager,npmOptions,options)=>{await baseGenerator(packageManager,npmOptions,options,"qwik",{},"qwik")},QWIK_default=generator20;var generator21=async(packageManager,npmOptions,options)=>{await baseGenerator(packageManager,npmOptions,options,"svelte",void 0,"sveltekit")},SVELTEKIT_default=generator21;var generator22=async(packageManager,npmOptions,options)=>{let[latestRaxVersion]=await packageManager.getVersions("rax"),packageJson=packageManager.retrievePackageJson(),raxVersion=packageJson.dependencies.rax||latestRaxVersion;packageJson.dependencies.rax=packageJson.dependencies.rax||raxVersion,packageJson.dependencies["rax-image"]=packageJson.dependencies["rax-image"]||raxVersion,packageJson.dependencies["rax-link"]=packageJson.dependencies["rax-link"]||raxVersion,packageJson.dependencies["rax-text"]=packageJson.dependencies["rax-text"]||raxVersion,packageJson.dependencies["rax-view"]=packageJson.dependencies["rax-view"]||raxVersion,packageManager.writePackageJson(packageJson),await baseGenerator(packageManager,npmOptions,options,"rax",{extraPackages:["rax"]})},RAX_default=generator22;var generator23=async(packageManager,npmOptions,options)=>{await baseGenerator(packageManager,npmOptions,options,"solid",{},"solid")},SOLID_default=generator23;import{join as join4}from"path";var generator24=async(packageManager,npmOptions,options)=>{await baseGenerator(packageManager,npmOptions,options,"server",{extensions:["json"]});let templateDir=join4(getCliDir(),"templates","server");copyTemplate(templateDir)},SERVER_default=generator24;import prompts5 from"prompts";import chalk23 from"chalk";import boxen2 from"boxen";import{createWriteStream,move,remove}from"fs-extra";import tempy from"tempy";import dedent27 from"ts-dedent";import{join as join5}from"path";import{getStorybookInfo as getStorybookInfo3,loadMainConfig as loadMainConfig2}from"@storybook/core-common";import semver20 from"semver";import chalk5 from"chalk";import{dedent as dedent8}from"ts-dedent";import semver7 from"semver";import chalk4 from"chalk";import{dedent as dedent7}from"ts-dedent";import semver6 from"semver";import chalk3 from"chalk";import semver5 from"semver";import dedent6 from"ts-dedent";import{getStorybookInfo,loadMainConfig}from"@storybook/core-common";import{readConfig,writeConfig as writeConfigFile}from"@storybook/csf-tools";import chalk2 from"chalk";import semver4 from"semver";import dedent5 from"ts-dedent";var logger4=console,getStorybookData=async({packageManager,configDir:userDefinedConfigDir})=>{let packageJson=packageManager.retrievePackageJson(),{mainConfig:mainConfigPath,version:storybookVersionSpecifier,configDir:configDirFromScript,previewConfig:previewConfigPath}=getStorybookInfo(packageJson,userDefinedConfigDir),storybookVersion=storybookVersionSpecifier&&semver4.coerce(storybookVersionSpecifier)?.version,configDir=userDefinedConfigDir||configDirFromScript||".storybook",mainConfig;try{mainConfig=await loadMainConfig({configDir,noCache:!0})}catch(err){throw new Error(dedent5`Unable to find or evaluate ${chalk2.blue(mainConfigPath)}: ${err.message}`)}return{configDir,mainConfig,storybookVersionSpecifier,storybookVersion,mainConfigPath,previewConfigPath}},updateMainConfig=async({mainConfigPath,dryRun},callback)=>{try{let main=await readConfig(mainConfigPath);await callback(main),dryRun||await writeConfigFile(main)}catch(e){logger4.info(`\u274C The migration failed to update your ${chalk2.blue(mainConfigPath)} on your behalf because of the following error:
        ${e}
`),logger4.info(`\u26A0\uFE0F Storybook automigrations are based on AST parsing and it's possible that your ${chalk2.blue(mainConfigPath)} file contains a non-standard format (e.g. your export is not an object) or that there was an error when parsing dynamic values (e.g. "require" calls, or usage of environment variables). When your main config is non-standard, automigrations are unfortunately not possible. Please follow the instructions given previously and follow the documentation to make the updates manually.`)}},getAddonNames=mainConfig=>(mainConfig.addons||[]).map(addon=>{let name="";if(typeof addon=="string"?name=addon:typeof addon=="object"&&(name=addon.name),!name.startsWith("."))return name.replace(/\/dist\/.*/,"").replace(/\.[mc]?[tj]?s[x]?$/,"").replace(/\/register$/,"").replace(/\/manager$/,"").replace(/\/preset$/,"")}).filter(Boolean);var logger5=console,checkWebpack5Builder=async({configDir,packageManager})=>{let{mainConfig,storybookVersion}=await getStorybookData({configDir,packageManager});if(semver5.lt(storybookVersion,"6.3.0"))return logger5.warn(dedent6`
        Detected SB 6.3 or below, please upgrade storybook to use webpack5.

        To upgrade to the latest stable release, run this from your project directory:

        ${chalk3.cyan("npx storybook upgrade")}

        Add the ${chalk3.cyan("--prerelease")} flag to get the latest prerelease.
      `.trim()),null;if(semver5.gte(storybookVersion,"7.0.0"))return null;if(!mainConfig)return logger5.warn("Unable to find storybook main.js config"),null;let builder=mainConfig.core?.builder;return builder&&builder!=="webpack4"?(logger5.info(`Found builder ${builder}, skipping`),null):{storybookVersion}};var logger6=console,webpack5={id:"webpack5",async check({configDir,packageManager}){let webpackVersion=packageManager.retrievePackageJson().dependencies.webpack,webpackCoerced=semver6.coerce(webpackVersion)?.version;if(!webpackCoerced||semver6.lt(webpackCoerced,"5.0.0")||semver6.gte(webpackCoerced,"6.0.0"))return null;let builderInfo=await checkWebpack5Builder({configDir,packageManager});return builderInfo?{webpackVersion,...builderInfo}:null},prompt({webpackVersion}){let webpackFormatted=chalk4.cyan(`webpack ${webpackVersion}`);return dedent7`
      We've detected you're running ${webpackFormatted}.
      Your Storybook's main.js files specifies webpack4, which is incompatible.
      
      To run Storybook in webpack5-mode, we can install Storybook's ${chalk4.cyan("@storybook/builder-webpack5")} for you.

      More info: ${chalk4.yellow("https://github.com/storybookjs/storybook/blob/next/MIGRATION.md#webpack-5-manager-build")}
    `},async run({result:{storybookVersion,webpackVersion},packageManager,dryRun,mainConfigPath}){let deps=[`@storybook/builder-webpack5@${storybookVersion}`];webpackVersion||deps.push("webpack@5"),logger6.info(`\u2705 Adding dependencies: ${deps}`),dryRun||packageManager.addDependencies({installAsDevDependencies:!0},deps),logger6.info("\u2705 Setting `core.builder` to `@storybook/builder-webpack5` in main.js"),dryRun||await updateMainConfig({mainConfigPath,dryRun},async main=>{main.setFieldValue(["core","builder"],"@storybook/builder-webpack5")})}};var cra5={id:"cra5",async check({packageManager,configDir}){let craVersion=packageManager.getAllDependencies()["react-scripts"],craCoerced=semver7.coerce(craVersion)?.version;if(!craCoerced||semver7.lt(craCoerced,"5.0.0"))return null;let builderInfo=await checkWebpack5Builder({configDir,packageManager});return builderInfo?{craVersion,...builderInfo}:null},prompt({craVersion}){let craFormatted=chalk5.cyan(`Create React App (CRA) ${craVersion}`);return dedent8`
      We've detected you are running ${craFormatted} which is powered by webpack5.
      Your Storybook's main.js files specifies webpack4, which is incompatible.

      In order to work with your version of CRA, we need to install Storybook's ${chalk5.cyan("@storybook/builder-webpack5")}.

      More info: ${chalk5.yellow("https://github.com/storybookjs/storybook/blob/next/MIGRATION.md#cra5-upgrade")}
    `},async run(options){return webpack5.run({...options,result:{webpackVersion:null,...options.result}})}};import chalk6 from"chalk";import{dedent as dedent9}from"ts-dedent";import semver8 from"semver";var angular12={id:"angular12",async check({packageManager,configDir}){let angularVersion=packageManager.getAllDependencies()["@angular/core"],angularCoerced=semver8.coerce(angularVersion)?.version;if(!angularCoerced||semver8.lt(angularCoerced,"12.0.0"))return null;let builderInfo=await checkWebpack5Builder({packageManager,configDir});return builderInfo?{angularVersion,...builderInfo}:null},prompt({angularVersion}){let angularFormatted=chalk6.cyan(`Angular ${angularVersion}`);return dedent9`
      We've detected you are running ${angularFormatted} which is powered by webpack5.
      Your Storybook's main.js files specifies webpack4, which is incompatible.

      In order to work with your version of Angular, we need to install Storybook's ${chalk6.cyan("@storybook/builder-webpack5")}.

      More info: ${chalk6.yellow("https://github.com/storybookjs/storybook/blob/next/MIGRATION.md#angular12-upgrade")}
    `},async run(options){return webpack5.run({...options,result:{webpackVersion:null,...options.result}})}};import chalk7 from"chalk";import{dedent as dedent10}from"ts-dedent";import semver9 from"semver";var vue3={id:"vue3",async check({configDir,packageManager}){let vueVersion=packageManager.getAllDependencies().vue,vueCoerced=semver9.coerce(vueVersion)?.version;if(!vueCoerced||semver9.lt(vueCoerced,"3.0.0"))return null;let builderInfo=await checkWebpack5Builder({configDir,packageManager});return builderInfo?{vueVersion,...builderInfo}:null},prompt({vueVersion,storybookVersion}){let vueFormatted=chalk7.cyan(`Vue ${vueVersion}`),sbFormatted=chalk7.cyan(`Storybook ${storybookVersion}`);return dedent10`
      We've detected you are running ${vueFormatted} with Storybook.
      ${sbFormatted} runs webpack4 by default, which is incompatible.

      In order to work with your version of Vue, we need to install Storybook's ${chalk7.cyan("webpack5 builder")}.

      More info: ${chalk7.yellow("https://github.com/storybookjs/storybook/blob/next/MIGRATION.md#vue3-upgrade")}
    `},async run(options){return webpack5.run({...options,result:{webpackVersion:null,...options.result}})}};import{dedent as dedent11}from"ts-dedent";import semver10 from"semver";var logger7=console,mdxgfm={id:"github-flavored-markdown-mdx",async check({configDir,packageManager}){let{mainConfig,storybookVersion}=await getStorybookData({packageManager,configDir});return!semver10.gte(storybookVersion,"7.0.0")||mainConfig?.features?.legacyMdx1===!0||!1||!!mainConfig.addons?.find(item=>item==="@storybook/addon-mdx-gfm"?!0:typeof item=="string"?!1:item.name==="@storybook/addon-docs"?item.options?.mdxPluginOptions?.mdxCompileOptions?.remarkPlugins?.length>0:!1)?null:{}},prompt(){return dedent11`
      In MDX1 you had the option of using GitHub flavored markdown.

      Storybook 7.0 uses MDX2 for compiling MDX, and thus no longer supports GFM out of the box.
      Because of this you need to explicitly add the GFM plugin in the addon-docs options:
      https://storybook.js.org/docs/react/writing-docs/mdx#lack-of-github-flavored-markdown-gfm

      We recommend you follow the guide on the link above, however we can add a temporary storybook addon that helps make this migration easier.
      We'll install the addon and add it to your storybook config.
    `},async run({packageManager,dryRun,mainConfigPath,skipInstall}){if(!dryRun){let packageJson=packageManager.retrievePackageJson(),versionToInstall=getStorybookVersionSpecifier(packageManager.retrievePackageJson());await packageManager.addDependencies({installAsDevDependencies:!0,skipInstall,packageJson},[`@storybook/addon-mdx-gfm@${versionToInstall}`]),await updateMainConfig({mainConfigPath,dryRun},async main=>{logger7.info('\u2705 Adding "@storybook/addon-mdx-gfm" addon'),dryRun||main.appendValueToArray(["addons"],"@storybook/addon-mdx-gfm")})}}};import chalk8 from"chalk";import{dedent as dedent12}from"ts-dedent";import{readConfig as readConfig2,writeConfig}from"@storybook/csf-tools";import{readFile,readJson,writeJson}from"fs-extra";import detectIndent from"detect-indent";import fse3 from"fs-extra";var SUPPORTED_ESLINT_EXTENSIONS=["js","cjs","json"],UNSUPPORTED_ESLINT_EXTENSIONS=["yaml","yml"],findEslintFile=()=>{let filePrefix=".eslintrc",unsupportedExtension=UNSUPPORTED_ESLINT_EXTENSIONS.find(ext=>fse3.existsSync(`${filePrefix}.${ext}`));if(unsupportedExtension)throw new Error(unsupportedExtension);let extension=SUPPORTED_ESLINT_EXTENSIONS.find(ext=>fse3.existsSync(`${filePrefix}.${ext}`));return extension?`${filePrefix}.${extension}`:null};var logger8=console,eslintPlugin={id:"eslintPlugin",async check({packageManager}){let allDependencies=packageManager.getAllDependencies(),eslintPluginStorybook=allDependencies["eslint-plugin-storybook"],eslintDependency=allDependencies.eslint;if(eslintPluginStorybook||!eslintDependency)return null;let eslintFile,unsupportedExtension;try{eslintFile=findEslintFile()}catch(err){unsupportedExtension=err.message}return!eslintFile&&!unsupportedExtension?(logger8.warn("Unable to find .eslintrc config file, skipping"),null):{eslintFile,unsupportedExtension}},prompt(){return dedent12`
      We've detected you are not using our eslint-plugin.

      In order to have the best experience with Storybook and follow best practices, we advise you to install eslint-plugin-storybook.

      More info: ${chalk8.yellow("https://github.com/storybookjs/eslint-plugin-storybook#readme")}
    `},async run({result:{eslintFile,unsupportedExtension},packageManager,dryRun,skipInstall}){let deps=["eslint-plugin-storybook"];if(logger8.info(`\u2705 Adding dependencies: ${deps}`),dryRun||packageManager.addDependencies({installAsDevDependencies:!0,skipInstall},deps),!dryRun&&unsupportedExtension){logger8.info(dedent12`
          ⚠️ The plugin was successfully installed but failed to configure.
          
          Found an eslint config file with an unsupported automigration format: .eslintrc.${unsupportedExtension}.
          The supported formats for this automigration are: ${SUPPORTED_ESLINT_EXTENSIONS.join(", ")}.

          Please refer to https://github.com/storybookjs/eslint-plugin-storybook#usage to finish setting up the plugin manually.
      `);return}if(logger8.info(`\u2705 Adding Storybook plugin to ${eslintFile}`),!dryRun)if(eslintFile.endsWith("json")){let eslintConfig=await readJson(eslintFile),existingConfigValue=Array.isArray(eslintConfig.extends)?eslintConfig.extends:[eslintConfig.extends];eslintConfig.extends=[...existingConfigValue||[],"plugin:storybook/recommended"];let eslintFileContents=await readFile(eslintFile,"utf8"),spaces=detectIndent(eslintFileContents).amount||2;await writeJson(eslintFile,eslintConfig,{spaces})}else{let eslint=await readConfig2(eslintFile),extendsConfig=eslint.getFieldValue(["extends"])||[],existingConfigValue=Array.isArray(extendsConfig)?extendsConfig:[extendsConfig];eslint.setFieldValue(["extends"],[...existingConfigValue,"plugin:storybook/recommended"]),await writeConfig(eslint)}}};import chalk9 from"chalk";import{dedent as dedent13}from"ts-dedent";import{writeConfig as writeConfig2}from"@storybook/csf-tools";var logger9=console,builderVite={id:"builder-vite",async check({configDir,packageManager}){let packageJson=packageManager.retrievePackageJson(),{mainConfig}=await getStorybookData({configDir,packageManager}),builder=mainConfig.core?.builder;return(typeof builder=="string"?builder:builder?.name)!=="storybook-builder-vite"?null:{builder,packageJson}},prompt({builder}){let builderFormatted=chalk9.cyan(JSON.stringify(builder,null,2));return dedent13`
      We've detected you're using the community vite builder: ${builderFormatted}
      
      'storybook-builder-vite' is deprecated and now located at ${chalk9.cyan("@storybook/builder-vite")}.

      We can upgrade your project to use the new builder automatically.
      
      More info: ${chalk9.yellow("https://github.com/storybookjs/storybook/blob/next/MIGRATION.md#vite-builder-renamed")}
    `},async run({result:{builder,packageJson},packageManager,dryRun,mainConfigPath}){let{dependencies={},devDependencies={}}=packageJson;logger9.info("\u2705 Removing existing 'storybook-builder-vite' dependency"),dryRun||(delete dependencies["storybook-builder-vite"],delete devDependencies["storybook-builder-vite"],packageManager.writePackageJson(packageJson)),logger9.info("\u2705 Adding '@storybook/builder-vite' as dev dependency"),dryRun||packageManager.addDependencies({installAsDevDependencies:!0},["@storybook/builder-vite"]),logger9.info("\u2705 Updating main.js to use vite builder"),dryRun||await updateMainConfig({dryRun,mainConfigPath},async main=>{let updatedBuilder=typeof builder=="string"?"@storybook/builder-vite":{name:"@storybook/builder-vite",options:builder.options};main.setFieldValue(["core","builder"],updatedBuilder),await writeConfig2(main)})}};import chalk10 from"chalk";import{dedent as dedent14}from"ts-dedent";import semver11 from"semver";var logger10=console,getStorybookScripts=allScripts=>Object.keys(allScripts).reduce((acc,key)=>{let isStorybookScript=!1,allWordsFromScript=allScripts[key].split(" "),newScript=allWordsFromScript.map((currentWord,index)=>{let previousWord=allWordsFromScript[index-1],isSbBinary=currentWord==="build-storybook"||currentWord==="start-storybook"||currentWord==="sb",isPrependedByPkgManager=previousWord&&["npx","run","yarn","pnpx","pnpm dlx"].some(cmd=>previousWord.includes(cmd));return isSbBinary&&!isPrependedByPkgManager?(isStorybookScript=!0,currentWord.replace("sb","storybook").replace("start-storybook","storybook dev").replace("build-storybook","storybook build")):currentWord}).join(" ");return isStorybookScript&&(acc[key]={before:allScripts[key],after:newScript}),acc},{}),sbScripts={id:"sb-scripts",async check({packageManager,configDir}){let packageJson=packageManager.retrievePackageJson(),{scripts={}}=packageJson,{storybookVersion}=await getStorybookData({packageManager,configDir});if(semver11.lt(storybookVersion,"7.0.0"))return null;let storybookScripts=getStorybookScripts(scripts);return Object.keys(storybookScripts).length===0?null:{packageJson,storybookScripts,storybookVersion}},prompt({storybookVersion,storybookScripts}){let sbFormatted=chalk10.cyan(`Storybook ${storybookVersion}`),newScriptsMessage=Object.keys(storybookScripts).reduce((acc,scriptKey)=>(acc.push([chalk10.bold(scriptKey),"from:",chalk10.cyan(storybookScripts[scriptKey].before),"to:",chalk10.cyan(storybookScripts[scriptKey].after)].join(`
`)),acc),[]);return dedent14`
      We've detected you are using ${sbFormatted} with scripts from previous versions of Storybook.
      Starting in Storybook 7, the ${chalk10.yellow("start-storybook")} and ${chalk10.yellow("build-storybook")} binaries have changed to ${chalk10.magenta("storybook dev")} and ${chalk10.magenta("storybook build")} respectively.
      In order to work with ${sbFormatted}, your storybook scripts have to be adjusted to use the binary. We can adjust them for you:

      ${newScriptsMessage.join(`

`)}

      In case this migration did not cover all of your scripts, or you'd like more info: ${chalk10.yellow("https://github.com/storybookjs/storybook/blob/next/MIGRATION.md#start-storybook--build-storybook-binaries-removed")}
      `},async run({result:{storybookScripts},packageManager,dryRun}){if(logger10.info("\u2705 Updating scripts in package.json"),logger10.log(),!dryRun){let newScripts=Object.keys(storybookScripts).reduce((acc,scriptKey)=>(acc[scriptKey]=storybookScripts[scriptKey].after,acc),{});logger10.log(),packageManager.addScripts(newScripts)}}};import chalk11 from"chalk";import{dedent as dedent15}from"ts-dedent";import semver12 from"semver";var logger11=console,sbBinary={id:"storybook-binary",async check({packageManager,configDir}){let packageJson=packageManager.retrievePackageJson(),allDependencies=packageManager.getAllDependencies(),{storybookVersion}=await getStorybookData({packageManager,configDir});if(allDependencies["@nrwl/storybook"]||semver12.lt(storybookVersion,"7.0.0"))return null;let hasSbBinary=!!allDependencies.sb,hasStorybookBinary=!!allDependencies.storybook;return!hasSbBinary&&hasStorybookBinary?null:{hasSbBinary,hasStorybookBinary,storybookVersion,packageJson}},prompt({storybookVersion,hasSbBinary,hasStorybookBinary}){let sbFormatted=chalk11.cyan(`Storybook ${storybookVersion}`),storybookBinaryMessage=hasStorybookBinary?"":`We've detected you are using ${sbFormatted} without Storybook's ${chalk11.magenta("storybook")} binary. Starting in Storybook 7.0, it has to be installed.`;return dedent15`
      ${storybookBinaryMessage}
      ${hasSbBinary?`You're using the 'sb' binary and it should be replaced, as 'storybook' is the recommended way to run Storybook.
`:""}

      More info: ${chalk11.yellow("https://github.com/storybookjs/storybook/blob/next/MIGRATION.md#start-storybook--build-storybook-binaries-removed")}
      `},async run({result:{packageJson,hasSbBinary,hasStorybookBinary},packageManager,dryRun,skipInstall}){if(hasSbBinary&&(logger11.info("\u2705 Removing 'sb' dependency"),dryRun||packageManager.removeDependencies({skipInstall:skipInstall||!hasStorybookBinary,packageJson},["sb"])),!hasStorybookBinary&&(logger11.log(),logger11.info("\u2705 Adding 'storybook' as dev dependency"),logger11.log(),!dryRun)){let versionToInstall=getStorybookVersionSpecifier(packageJson);packageManager.addDependencies({installAsDevDependencies:!0,packageJson,skipInstall},[`storybook@${versionToInstall}`])}}};import chalk12 from"chalk";import dedent16 from"ts-dedent";import findUp3 from"find-up";import semver13 from"semver";import{frameworkPackages as frameworkPackages2,rendererPackages as rendererPackages2}from"@storybook/core-common";import{rendererPackages}from"@storybook/core-common";import prompts3 from"prompts";var detectRenderer=async packageJson=>{let allDependencies={...packageJson.dependencies,...packageJson.devDependencies,...packageJson.peerDependencies},matches=Object.keys(rendererPackages).filter(pkg2=>!!allDependencies[pkg2]),[rendererPackage]=matches;return matches.length>1&&(rendererPackage=(await prompts3([{type:"select",name:"rendererPackage",hint:"> - Use arrow-keys. Return to submit. To automate this next time, you can pass the renderer to the CLI via the --renderer flag",message:"Tried to detect a Storybook renderer in your project but found multiple. This could happen in monorepos, when projects contain multiple Storybook packages in package.json. Please select the correct one:",choices:matches.map(type=>({title:type,value:type}))}])).rendererPackage),rendererPackage};import{frameworkPackages}from"@storybook/core-common";import findUp2 from"find-up";var logger12=console,packagesMap={"@storybook/react":{webpack5:"@storybook/react-webpack5",vite:"@storybook/react-vite"},"@storybook/preact":{webpack5:"@storybook/preact-webpack5",vite:"@storybook/preact-vite"},"@storybook/server":{webpack5:"@storybook/server-webpack5"},"@storybook/ember":{webpack5:"@storybook/ember"},"@storybook/angular":{webpack5:"@storybook/angular"},"@storybook/vue":{webpack5:"@storybook/vue-webpack5",vite:"@storybook/vue-vite"},"@storybook/vue3":{webpack5:"@storybook/vue3-webpack5",vite:"@storybook/vue3-vite"},"@storybook/svelte":{webpack5:"@storybook/svelte-webpack5",vite:"@storybook/svelte-vite"},"@storybook/web-components":{webpack5:"@storybook/web-components-webpack5",vite:"@storybook/web-components-vite"},"@storybook/html":{webpack5:"@storybook/html-webpack5",vite:"@storybook/html-vite"}},communityFrameworks={vite:["storybook-framework-qwik","storybook-solidjs-vite"],webpack5:[]},viteConfigFiles2=["vite.config.js","vite.config.cjs","vite.config.mjs","vite.config.ts"],webpackConfigFiles=["webpack.config.js","webpack.config.cjs","webpack.config.mjs","webpack.config.ts"],detectBuilderInfo=async({mainConfig,configDir,packageDependencies})=>{let builderOptions={},builderName,builderOrFrameworkName,{core={},framework}=mainConfig,{builder}=core;if(builder)typeof builder=="string"?builderOrFrameworkName=builder:(builderOrFrameworkName=builder.name,builderOptions=builder.options||{});else if(framework){let frameworkName=typeof framework=="string"?framework:framework.name;Object.keys(frameworkPackages).includes(frameworkName)&&(builderOrFrameworkName=frameworkName,builderOptions=typeof framework=="object"?framework.options?.builder:{})}if(!builderOrFrameworkName){let viteConfigFile=await findUp2(viteConfigFiles2,{cwd:configDir});if(viteConfigFile)logger12.info(`No builder or framework field, detected Storybook builder via: ${viteConfigFile}`),builderOrFrameworkName="vite";else{let webpackConfigFile=await findUp2(webpackConfigFiles,{cwd:configDir});webpackConfigFile&&(logger12.info(`No builder or framework field, detected Storybook builder via: ${webpackConfigFile}`),builderOrFrameworkName="webpack5")}}return builderOrFrameworkName||(packageDependencies["@storybook/builder-vite"]||packageDependencies["storybook-builder-vite"]?builderOrFrameworkName="vite":(packageDependencies["@storybook/builder-webpack5"]||packageDependencies["@storybook/manager-webpack5"])&&(builderOrFrameworkName="webpack5")),builderOrFrameworkName?.includes("vite")||communityFrameworks.vite.includes(builderOrFrameworkName)?builderName="vite":(builderOrFrameworkName?.includes("webpack")||communityFrameworks.webpack5.includes(builderOrFrameworkName),builderName="webpack5"),{name:builderName,options:builderOptions}},getNextjsAddonOptions=addons=>{let nextjsAddon=addons?.find(addon=>typeof addon=="string"?addon==="storybook-addon-next":addon.name==="storybook-addon-next");return!nextjsAddon||typeof nextjsAddon=="string"?{}:nextjsAddon.options||{}};var logger13=console,nextJsConfigFiles=["next.config.js","next.config.cjs","next.config.mjs","next.config.ts"],newFrameworks={id:"new-frameworks",async check({rendererPackage:userDefinedRendererPackage,configDir:userDefinedConfigDir,packageManager}){let packageJson=packageManager.retrievePackageJson(),{storybookVersion,mainConfig,mainConfigPath,configDir}=await getStorybookData({packageManager,configDir:userDefinedConfigDir});if(!semver13.gte(storybookVersion,"7.0.0"))return null;let frameworkPackage=typeof mainConfig.framework=="string"?mainConfig.framework:mainConfig.framework?.name,hasFrameworkInMainConfig=!!frameworkPackage,rendererPackage=userDefinedRendererPackage;rendererPackage||(frameworkPackage&&Object.keys(rendererPackages2).includes(frameworkPackage)?rendererPackage=frameworkPackage:frameworkPackage&&Object.values(rendererPackages2).includes(frameworkPackage)?(rendererPackage=Object.keys(rendererPackages2).find(k=>rendererPackages2[k]===frameworkPackage),hasFrameworkInMainConfig=!1):rendererPackage=await detectRenderer(packageJson));let builderConfig=mainConfig.core?.builder;if(!Object.keys(packagesMap).includes(rendererPackage))return null;let allDependencies=packageManager.getAllDependencies(),builderInfo=await detectBuilderInfo({mainConfig,configDir,packageDependencies:allDependencies}),newFrameworkPackage=Object.keys(frameworkPackages2).find(pkg2=>pkg2===frameworkPackage);if(newFrameworkPackage||(newFrameworkPackage=packagesMap[rendererPackage]&&packagesMap[rendererPackage][builderInfo.name]),!newFrameworkPackage)return null;let renderer=rendererPackages2[rendererPackage],rendererOptions=mainConfig[`${renderer}Options`]||{},frameworkOptions=typeof mainConfig.framework=="string"?{}:mainConfig.framework?.options,dependenciesToRemove=["@storybook/builder-webpack5","@storybook/manager-webpack5","@storybook/builder-webpack4","@storybook/manager-webpack4","@storybook/builder-vite","storybook-builder-vite"],addonsToRemove=[],addonOptions={},metaFramework;if(rendererPackage==="@storybook/react"&&allDependencies.next){let nextConfigFile=await findUp3(nextJsConfigFiles,{cwd:configDir}),nextAddonOptions=getNextjsAddonOptions(mainConfig.addons);(semver13.gte(semver13.coerce(allDependencies.next).version,"12.0.0")&&nextConfigFile||Object.keys(nextAddonOptions).length>0)&&(metaFramework="nextjs",(newFrameworkPackage==="@storybook/react-webpack5"||newFrameworkPackage==="@storybook/nextjs")&&(newFrameworkPackage="@storybook/nextjs",addonsToRemove=["storybook-addon-next","storybook-addon-next-router"].filter(dep=>allDependencies[dep]||mainConfig.addons?.find(addon=>typeof addon=="string"?dep===addon:dep===addon.name)),addonOptions=nextAddonOptions,dependenciesToRemove.push("@storybook/react-webpack5","storybook-addon-next","storybook-addon-next-router")))}else rendererPackage==="@storybook/svelte"&&allDependencies["@sveltejs/kit"]&&semver13.gte(semver13.coerce(allDependencies["@sveltejs/kit"]).version,"1.0.0")&&(metaFramework="sveltekit",newFrameworkPackage==="@storybook/svelte-vite"&&(newFrameworkPackage="@storybook/sveltekit",rendererOptions={},dependenciesToRemove.push("@storybook/svelte-vite")));let dependenciesToAdd=[newFrameworkPackage].filter(dep=>!allDependencies[dep]).filter(Boolean);if(dependenciesToRemove=dependenciesToRemove.filter(dep=>allDependencies[dep]).filter(Boolean),hasFrameworkInMainConfig&&!builderConfig&&!Object.keys(rendererOptions).length&&!Object.keys(addonOptions).length&&!dependenciesToRemove.length&&!dependenciesToAdd.length)return null;if(allDependencies.vite&&semver13.lt(semver13.coerce(allDependencies.vite).version,"3.0.0"))throw new Error(dedent16`
        ❌ Your project should be upgraded to use the framework package ${chalk12.bold(newFrameworkPackage)}, but we detected that you are using Vite ${chalk12.bold(allDependencies.vite)}, which is unsupported in ${chalk12.bold("Storybook 7.0")}. Please upgrade Vite to ${chalk12.bold("3.0.0 or higher")} and rerun this migration.
      `);return{mainConfigPath,dependenciesToAdd,dependenciesToRemove,frameworkPackage:newFrameworkPackage,hasFrameworkInMainConfig,frameworkOptions:{...frameworkOptions,...rendererOptions,...addonOptions},rendererOptions,addonOptions,addonsToRemove,builderInfo,packageJson,renderer,builderConfig,metaFramework}},prompt({dependenciesToRemove,dependenciesToAdd,hasFrameworkInMainConfig,mainConfigPath,frameworkPackage,addonOptions,renderer,rendererOptions,builderConfig,addonsToRemove,metaFramework}){let disclaimer="",migrationSteps="";return dependenciesToRemove.length>0&&(migrationSteps+=`- Remove the following dependencies:
      ${dependenciesToRemove.map(dep=>`- * ${chalk12.cyan(dep)}`).join(`
`)}
`),dependenciesToAdd.length>0&&(migrationSteps+=`- Add the following dependencies: 
      ${dependenciesToAdd.map(dep=>`- * ${chalk12.cyan(dep)}`).join(`
`)}
`),hasFrameworkInMainConfig||(migrationSteps+=`- Update or specify the ${chalk12.yellow("framework")} field in ${chalk12.blue(mainConfigPath)} with the value of "${chalk12.cyan(frameworkPackage)}".
`),Object.keys(rendererOptions).length>0&&(migrationSteps+=`- Move the ${chalk12.yellow(`${renderer}Options`)} field in ${chalk12.blue(mainConfigPath)} to ${chalk12.yellow("framework.options")}, and remove that field entirely.
      More info: ${chalk12.yellow("https://github.com/storybookjs/storybook/blob/next/MIGRATION.md#frameworkoptions-renamed")}
`),addonsToRemove.length>0&&(migrationSteps+=`- Remove the following addons from your ${chalk12.blue(mainConfigPath)}, as the new framework also supports features provided by them:
      ${addonsToRemove.map(dep=>`- * ${chalk12.cyan(dep)}`).join(`
`)}
      `),Object.keys(addonOptions).length>0&&(migrationSteps+=`- Move the addon options "${chalk12.yellow(Object.keys(addonOptions).join(", "))}" in ${chalk12.blue(mainConfigPath)} to the ${chalk12.yellow("framework.options")} field.
`),builderConfig&&(typeof builderConfig=="object"&&Object.keys(builderConfig.options||{}).length>0&&(migrationSteps+=`- Move the ${chalk12.yellow("core.builder.options")} field in ${chalk12.blue(mainConfigPath)} to ${chalk12.yellow("framework.options.builder")}
`),migrationSteps+=`- Remove the ${chalk12.yellow("core.builder")} field in ${chalk12.blue(mainConfigPath)}.
`),(dependenciesToRemove.includes("@storybook/builder-webpack4")||dependenciesToRemove.includes("@storybook/manager-webpack4"))&&(disclaimer=dedent16`\n\n
      ${chalk12.underline(chalk12.bold(chalk12.cyan("Webpack 4 users")))}

      Unless you're using Storybook's Vite builder, this automigration will install a Webpack 5 based framework.
      
      Given you were using Storybook's Webpack 4 builder (default in 6.x, discontinued in 7.0), this could be a breaking change -- especially if your project has a custom webpack configuration.
      
      To learn more about migrating from Webpack4, see: ${chalk12.yellow("https://github.com/storybookjs/storybook/blob/next/MIGRATION.md#webpack4-support-discontinued")}`),metaFramework==="nextjs"&&(dependenciesToRemove.includes("storybook-addon-next-router")&&(migrationSteps+=`- Migrate the usage of the ${chalk12.cyan("storybook-addon-next-router")} addon to use the APIs from the ${chalk12.magenta("@storybook/nextjs")} framework package instead. Follow the instructions below.`),frameworkPackage==="@storybook/react-vite"?disclaimer=dedent16`\n\n
          ${chalk12.bold("Important")}: We've detected you are using Storybook in a Next.js project.
  
          This migration is set to update your project to use the ${chalk12.magenta("@storybook/react-vite")} framework, but Storybook provides a framework package specifically for Next.js projects: ${chalk12.magenta("@storybook/nextjs")}.
  
          This package provides a better, out of the box experience for Next.js users, however it is only compatible with the Webpack 5 builder, so we can't automigrate for you, as you are using the Vite builder. If you switch this project to use Webpack 5 and rerun this migration, we can update your project.
          
          If you are interested in using this package, see: ${chalk12.yellow("https://github.com/storybookjs/storybook/blob/next/code/frameworks/nextjs/README.md")}
        `:frameworkPackage==="@storybook/nextjs"&&(disclaimer=dedent16`\n\n
        The ${chalk12.magenta("@storybook/nextjs")} package provides great user experience for Next.js users, and we highly recommend you to read more about it at ${chalk12.yellow("https://github.com/storybookjs/storybook/blob/next/code/frameworks/nextjs/README.md")}
        `)),metaFramework==="sveltekit"&&(frameworkPackage==="@storybook/svelte-webpack5"?disclaimer=dedent16`\n\n
          ${chalk12.bold("Important")}: We've detected you are using Storybook in a SvelteKit project.
  
          This migration is set to update your project to use the ${chalk12.magenta("@storybook/svelte-webpack5")} framework, but Storybook provides a framework package specifically for SvelteKit projects: ${chalk12.magenta("@storybook/sveltekit")}.
  
          This package provides a better experience for SvelteKit users, however it is only compatible with the Vite builder, so we can't automigrate for you, as you are using the Webpack builder.
          
          If you are interested in using this package, see: ${chalk12.yellow("https://github.com/storybookjs/storybook/blob/next/code/frameworks/sveltekit/README.md")}
        `:(migrationSteps+=`- Remove the ${chalk12.yellow(`${renderer}Options`)} field from ${chalk12.blue(mainConfigPath)}.
        More info: ${chalk12.yellow("https://github.com/storybookjs/storybook/blob/next/MIGRATION.md#vite-builder-uses-vite-config-automatically")}
`,disclaimer=dedent16`\n\n
        The ${chalk12.magenta("@storybook/sveltekit")} package provides great user experience for SvelteKit users, and we highly recommend you to read more about it at ${chalk12.yellow("https://github.com/storybookjs/storybook/blob/next/code/frameworks/sveltekit/README.md")}
        `)),dedent16`
      We've detected your project is not fully setup with Storybook's 7 new framework format.

      Storybook 7 introduced the concept of frameworks, which abstracts configuration for renderers (e.g. React, Vue), builders (e.g. Webpack, Vite) and defaults to make integrations easier.

      Your project should be updated to use Storybook's framework: ${chalk12.magenta(frameworkPackage)}. We can attempt to do this for you automatically.

      Here are the steps this migration will do to migrate your project:
      ${migrationSteps}

      To learn more about the new framework format, see: ${chalk12.yellow("https://github.com/storybookjs/storybook/blob/next/MIGRATION.md#new-framework-api")}${disclaimer}
    `},async run({result:{dependenciesToAdd,dependenciesToRemove,frameworkPackage,frameworkOptions,builderInfo,packageJson,renderer,addonsToRemove},packageManager,dryRun,mainConfigPath,skipInstall}){if(dependenciesToRemove.length>0&&(logger13.info(`\u2705 Removing dependencies: ${dependenciesToRemove.join(", ")}`),dryRun||packageManager.removeDependencies({skipInstall:skipInstall||dependenciesToAdd.length>0,packageJson},dependenciesToRemove)),dependenciesToAdd.length>0&&(logger13.info(`\u2705 Installing new dependencies: ${dependenciesToAdd.join(", ")}`),!dryRun)){let versionToInstall=getStorybookVersionSpecifier(packageJson),depsToAdd=dependenciesToAdd.map(dep=>`${dep}@${versionToInstall}`);packageManager.addDependencies({installAsDevDependencies:!0,skipInstall,packageJson},depsToAdd)}await updateMainConfig({mainConfigPath,dryRun},async main=>{logger13.info("\u2705 Updating main.js"),logger13.info('\u2705 Updating "framework" field'),dryRun||main.setFieldValue(["framework","name"],frameworkPackage),dryRun||main.setFieldValue(["framework","options"],frameworkOptions),main.getFieldNode([`${renderer}Options`])&&(logger13.info(`\u2705 Moving "${renderer}Options" to "framework.options"`),dryRun||main.removeField([`${renderer}Options`])),main.getFieldNode(["core","builder"])&&(logger13.info('\u2705 Removing "core.builder" field'),dryRun||main.removeField(["core","builder"])),Object.keys(builderInfo.options).length>0&&(logger13.info('\u2705 Moving "core.builder.options" into "framework.options.builder"'),dryRun||main.setFieldValue(["framework","options","builder"],builderInfo.options));let currentCore=main.getFieldValue(["core"]);if(currentCore&&Object.keys(currentCore).length===0&&(logger13.info('\u2705 Removing "core" field'),dryRun||main.removeField(["core"])),addonsToRemove.length>0){let updatedAddons=main.getFieldValue(["addons"]).filter(addon=>typeof addon=="string"?!addonsToRemove.includes(addon):addon.name?!addonsToRemove.includes(addon.name):!1);logger13.info("\u2705 Removing unnecessary addons"),dryRun||main.setFieldValue(["addons"],updatedAddons)}})}};import chalk13 from"chalk";import dedent17 from"ts-dedent";import{getStorybookInfo as getStorybookInfo2}from"@storybook/core-common";import{readFile as readFile2}from"fs-extra";var RemovedAPIs=(RemovedAPIs2=>(RemovedAPIs2.addDecorator="addDecorator",RemovedAPIs2.addParameters="addParameters",RemovedAPIs2.addLoader="addLoader",RemovedAPIs2.getStorybook="getStorybook",RemovedAPIs2.setAddon="setAddon",RemovedAPIs2.clearDecorators="clearDecorators",RemovedAPIs2))(RemovedAPIs||{}),removedGlobalClientAPIs={id:"removedglobalclientapis",promptOnly:!0,async check({packageManager,configDir}){let packageJson=packageManager.retrievePackageJson(),{previewConfig}=getStorybookInfo2(packageJson,configDir);if(previewConfig){let contents=await readFile2(previewConfig,"utf8"),usedAPIs=Object.values(RemovedAPIs).reduce((acc,item)=>(contents.includes(item)&&acc.push(item),acc),[]);if(usedAPIs.length)return{usedAPIs,previewPath:previewConfig}}return null},prompt({usedAPIs,previewPath}){return dedent17`
      ${chalk13.bold(chalk13.red("Attention"))}: We could not automatically make this change. You'll need to do it manually.

      The following APIs (used in "${chalk13.yellow(previewPath)}") have been removed from Storybook:
      
      ${usedAPIs.map(api=>`- ${chalk13.cyan(api)}`).join(`
`)}

      Please see the migration guide for more information:
      ${chalk13.yellow("https://github.com/storybookjs/storybook/blob/next/MIGRATION.md#removed-global-client-apis")}
    `}};import chalk14 from"chalk";import{dedent as dedent18}from"ts-dedent";import{basename}from"path";import fse4 from"fs-extra";import globby from"globby";var MDX1_STYLE_START=/<style>{`/g,MDX1_STYLE_END=/`}<\/style>/g,MDX1_COMMENT=/<!--(.+)-->/g,MDX1_CODEBLOCK=/(?:\n~~~(?:\n|.)*?\n~~~)|(?:\n```(?:\n|.)*?\n```)/g,fixMdxStyleTags=mdx=>mdx.replace(MDX1_STYLE_START,"<style>\n  {`").replace(MDX1_STYLE_END,"  `}\n</style>"),fixMdxComments=mdx=>{let codeblocks=mdx.matchAll(MDX1_CODEBLOCK);return mdx.split(MDX1_CODEBLOCK).map(v=>v.replace(MDX1_COMMENT,(original,group)=>`{/*${group}*/}`)).reduce((acc,item,i)=>{let next=codeblocks.next();return next.done?acc+item:acc+item+next.value[0]},"")},logger14=console,mdx1to2={id:"mdx1to2",async check(){let storiesMdxFiles=await globby("./!(node_modules)**/*.(story|stories).mdx");return storiesMdxFiles.length?{storiesMdxFiles}:void 0},prompt({storiesMdxFiles}){return dedent18`
      We've found ${chalk14.yellow(storiesMdxFiles.length)} '.stories.mdx' files in your project.
      
      Storybook has upgraded to MDX2 (https://mdxjs.com/blog/v2/), which contains breaking changes from MDX1.
      We can try to automatically upgrade your MDX files to MDX2 format using some common patterns.
      
      After this install completes, and before you start Storybook, we strongly recommend reading the MDX2 section
      of the 7.0 migration guide. It contains useful tools for detecting and fixing any remaining issues.
      
      ${chalk14.cyan("https://storybook.js.org/migration-guides/7.0")}
    `},async run({result:{storiesMdxFiles},dryRun}){await Promise.all([...storiesMdxFiles.map(async fname=>{let contents=await fse4.readFile(fname,"utf-8"),updated=fixMdxComments(fixMdxStyleTags(contents));updated===contents?logger14.info(`\u{1F197} Unmodified ${basename(fname)}`):(logger14.info(`\u2705 Modified ${basename(fname)}`),dryRun||await fse4.writeFile(fname,updated))})])}};import chalk15 from"chalk";import{dedent as dedent19}from"ts-dedent";var logger15=console,autodocsTrue={id:"autodocsTrue",async check({packageManager,configDir}){let{mainConfig}=await getStorybookData({packageManager,configDir}),{docs}=mainConfig,docsPageToAutodocsMapping={true:"tag",automatic:!0,false:!1};if(docs?.docsPage){let oldValue=docs?.docsPage.toString();if(!(oldValue in docsPageToAutodocsMapping))throw new Error(`Unexpected value for docs.docsPage: ${oldValue}`);return{value:docsPageToAutodocsMapping[oldValue]}}return docs?.autodocs===void 0?{value:!0}:null},prompt({value}){let autodocsFormatted=chalk15.cyan(`docs: { autodocs: ${JSON.stringify(value??!0)} }`),tagWarning=dedent19`
      NOTE: if you're upgrading from an older 7.0-beta using the 'docsPage' tag,
      please update your story files to use the 'autodocs' tag instead.
    `;return value?dedent19`
      We've changed the configuration of autodocs (previous docsPage), so now the value:
        - docs.autodocs: true -- means automatically create docs for every CSF file
        - docs.autodocs: 'tag' -- means only create autodocs for CSF files with the 'autodocs' tag
        - docs.autodocs: false -- means never create autodocs

      Based on your prior configuration,  we can set the \`docs.autodocs\` to keep your old behaviour:

      ${autodocsFormatted}
      ${value==="tag"?tagWarning:""}
      More info: ${chalk15.yellow("https://github.com/storybookjs/storybook/blob/next/MIGRATION.md#autodocs-changes")}
    `:dedent19`
      We've detected that your main.js configuration file has not configured autodocs. In 6.x we
      we defaulted to having a autodocs for every story, in 7.x you need to opt in per-component.
      However, we can set the \`docs.autodocs\` to true to approximate the old behaviour:

      ${autodocsFormatted}

      More info: ${chalk15.yellow("https://github.com/storybookjs/storybook/blob/next/MIGRATION.md#autodocs-changes")}
    `},async run({result:{value},dryRun,mainConfigPath}){logger15.info("\u2705 Setting 'docs.autodocs' to true in main.js"),dryRun||await updateMainConfig({mainConfigPath,dryRun},async main=>{main.removeField(["docs","docsPage"]),main.setFieldValue(["docs","autodocs"],value??!0)})}};import chalk16 from"chalk";import{dedent as dedent20}from"ts-dedent";var addReact={id:"addReact",async check({packageManager}){let packageJson=packageManager.retrievePackageJson(),installedDependencies=new Set(Object.keys({...packageJson.dependencies,...packageJson.devDependencies})),dependents=["@storybook/addon-essentials","@storybook/addon-docs"].filter(pkg2=>installedDependencies.has(pkg2)),additionalDependencies=[];return dependents.length>0&&(installedDependencies.has("react")||additionalDependencies.push("react"),installedDependencies.has("react-dom")||additionalDependencies.push("react-dom")),additionalDependencies.length>0?{dependents,additionalDependencies}:null},prompt({dependents,additionalDependencies}){let dependentsFormatted=dependents.map(pkg2=>chalk16.cyan(pkg2)).join(" & "),additionalDependenciesFormatted=additionalDependencies.map(pkg2=>`- ${chalk16.cyan(pkg2)}`).join(`
`);return dedent20`
      We've detected that you're using ${dependentsFormatted}.
      
      Starting in Storybook 7, we now require these peer dependencies to render docs:

      ${additionalDependenciesFormatted}

      We can add these for you automatically as dev dependencies.
      
      More info: ${chalk16.yellow("https://github.com/storybookjs/storybook/blob/next/MIGRATION.md#react-peer-dependencies-required")}
    `},async run({packageManager,result:{additionalDependencies},dryRun}){dryRun||packageManager.addDependencies({installAsDevDependencies:!0},additionalDependencies)}};import chalk17 from"chalk";import dedent21 from"ts-dedent";import semver14 from"semver";var nodeJsRequirement={id:"nodejs-requirement",promptOnly:!0,async check({packageManager,configDir}){let{storybookVersion}=await getStorybookData({packageManager,configDir});if(!semver14.gte(storybookVersion,"7.0.0"))return null;let nodeVersion=process.version;return semver14.lt(nodeVersion,"16.0.0")?{nodeVersion}:null},prompt({nodeVersion}){return dedent21`
      ${chalk17.bold(chalk17.red("Attention"))}: We could not automatically make this change. You'll need to do it manually.

      We've detected that you're using Node ${chalk17.bold(nodeVersion)} but Storybook 7 only supports Node ${chalk17.bold("v16.0.0")} and higher. You will either need to upgrade your Node version or keep using an older version of Storybook.

      Please see the migration guide for more information:
      ${chalk17.yellow("https://github.com/storybookjs/storybook/blob/next/MIGRATION.md#dropped-support-for-node-15-and-below")}
    `}};import chalk18 from"chalk";import dedent22 from"ts-dedent";import semver15 from"semver";import{loadPartialConfigAsync}from"@babel/core";var logger16=console,frameworksThatNeedBabelConfig=["@storybook/react-webpack5","@storybook/vue-webpack5","@storybook/vue3-webpack5","@storybook/html-webpack5"],missingBabelRc={id:"missing-babelrc",async check({configDir,packageManager}){let packageJson=packageManager.retrievePackageJson(),{mainConfig,storybookVersion}=await getStorybookData({configDir,packageManager});if(!semver15.gte(storybookVersion,"7.0.0"))return null;let{framework,addons}=mainConfig,frameworkPackage=typeof framework=="string"?framework:framework.name,hasCraPreset=addons&&addons.find(addon=>addon==="@storybook/preset-create-react-app");if(frameworkPackage&&frameworksThatNeedBabelConfig.includes(frameworkPackage)&&!hasCraPreset){let config=await loadPartialConfigAsync({babelrc:!0,filename:"__fake__.js"});if(!config.config&&!config.babelrc&&!packageJson.babel)return{needsBabelRc:!0}}return null},prompt(){return dedent22`
      We detected that your project does not have a babel configuration (.babelrc, babel.config.js, etc.).

      In version 6.x, Storybook provided its own babel settings out of the box. Now, Storybook re-uses ${chalk18.bold("your project's babel configuration")}, with small, incremental updates from Storybook addons.

      If your project does not have a babel configuration file, we can generate one that's equivalent to the 6.x defaults for you. Keep in mind that this can affect your project if it uses babel, and you may need to make additional changes based on your projects needs.

      ${chalk18.bold("Note:")} This automatic setup doesn't work in a monorepo, see the babel documentation for how to setup babel manually:
      ${chalk18.yellow("https://babeljs.io/docs")}

      We can create a ${chalk18.blue(".babelrc.json")} file with some basic configuration and add any necessary package devDependencies.
      
      Please see the migration guide for more information:
      ${chalk18.yellow("https://github.com/storybookjs/storybook/blob/next/MIGRATION.md#babel-mode-v7-exclusively")}
     
    `},async run(){logger16.info(),await generateStorybookBabelConfigInCWD()}};import{dedent as dedent23}from"ts-dedent";import semver16 from"semver";import chalk19 from"chalk";import prompts4 from"prompts";var angularBuilders={id:"angular-builders",async check({packageManager,configDir}){let packageJSON=packageManager.retrievePackageJson();if(isNxProject(packageJSON))return null;let angularVersion=packageManager.getAllDependencies()["@angular/core"],angularCoerced=semver16.coerce(angularVersion)?.version;if(!angularCoerced)return null;if(semver16.lt(angularCoerced,"14.0.0"))throw new Error(dedent23`
      ❌ Your project uses Angular < 14.0.0. Storybook 7.0 for Angular requires Angular 14.0.0 or higher. 
      Please upgrade your Angular version to at least version 14.0.0 to use Storybook 7.0 in your project.
      `);let angularJSON=new AngularJSON,{hasStorybookBuilder}=angularJSON;if(hasStorybookBuilder||!angularJSON.rootProject&&Object.keys(angularJSON.projects).length>1)return null;let{mainConfig}=await getStorybookData({configDir,packageManager});return{mainConfig,packageManager}},prompt(){return dedent23`
      We have detected that your project does not use the Storybook Angular builder yet. In Storybook 6.4 we have deprecated calling Storybook directly (npm run storybook) for Angular. In Storybook 7.0, we've removed it entirely.
      
      In order to use the Storybook Angular builder, we need to add a few entries to your angular.json file. Additionally, we will add the @compodoc/compodoc package to your devDependencies if you want and we will add a few scripts to your package.json file.

      Also feel free to remove the Compodoc script from your package.json file if you don't use it apart from Storybook anymore. Storybook uses Compodoc internally and you don't have to call in separately anymore.

      Read more about the Angular builder here: ${chalk19.yellow("https://storybook.js.org/docs/angular/configure/storybook-builders")}
    `},async run({result}){let angularJSON=new AngularJSON,{packageManager}=result,{useCompoDoc}=await prompts4({type:"confirm",name:"useCompoDoc",message:"Have you set up compodoc in Storybook previously?"}),angularProjectName=await angularJSON.getProjectName();angularJSON.addStorybookEntries({angularProjectName,storybookFolder:".storybook",useCompodoc:useCompoDoc,root:"."}),angularJSON.write(),packageManager.addScripts({storybook:`ng run ${angularProjectName}:storybook`,"build-storybook":`ng run ${angularProjectName}:build-storybook`})}};import chalk20 from"chalk";import dedent24 from"ts-dedent";import semver17 from"semver";import*as fs4 from"fs-extra";import path5 from"path";var getActualPackageVersions=async packages=>Promise.all(packages.map(getActualPackageVersion)),getActualPackageVersion=async packageName=>{try{let packageJson=await getActualPackageJson(packageName);return{name:packageName,version:packageJson.version}}catch{return{name:packageName,version:null}}},getActualPackageJson=async packageName=>{let resolvedPackageJson=__require.resolve(path5.join(packageName,"package.json"),{paths:[process.cwd()]});return await fs4.readJson(resolvedPackageJson)};var getIncompatibleAddons=async mainConfig=>{let incompatibleList={"@storybook/addon-knobs":"6.4.0","@storybook/addon-postcss":"2.0.0","storybook-addon-next-router":"4.0.2","storybook-addon-outline":"1.4.2","@storybook/addon-info":"5.3.21","storybook-addon-designs":"6.3.1","storybook-addon-next":"1.7.0","storybook-docs-toc":"1.7.0","@storybook/addon-google-analytics":"6.2.9","storybook-addon-pseudo-states":"1.15.5","storybook-dark-mode":"2.1.1","storybook-addon-gatsby":"0.0.5","@etchteam/storybook-addon-css-variables-theme":"1.4.0","@storybook/addon-cssresources":"6.2.9","storybook-addon-grid":"0.3.1","storybook-multilevel-sort":"1.2.0","storybook-addon-i18next":"1.3.0","storybook-source-link":"2.0.8","babel-plugin-storybook-csf-title":"2.1.0","@urql/storybook-addon":"2.0.1","storybook-addon-intl":"2.4.1","storybook-addon-mock":"3.2.0","@chakra-ui/storybook-addon":"4.0.16","storybook-mobile-addon":"1.0.2","@storybook/addon-queryparams":"6.2.9"},addons=getAddonNames(mainConfig).filter(addon=>addon in incompatibleList);if(addons.length===0)return[];let addonVersions=await getActualPackageVersions(addons),incompatibleAddons2=[];return addonVersions.forEach(({name,version:installedVersion})=>{if(installedVersion===null)return;let addonVersion=incompatibleList[name];try{semver17.lte(semver17.coerce(installedVersion),semver17.coerce(addonVersion))&&incompatibleAddons2.push({name,version:installedVersion})}catch{}}),incompatibleAddons2};var incompatibleAddons={id:"incompatible-addons",promptOnly:!0,async check({packageManager,configDir}){let{mainConfig}=await getStorybookData({packageManager,configDir}),incompatibleAddonList=await getIncompatibleAddons(mainConfig);return incompatibleAddonList.length>0?{incompatibleAddonList}:null},prompt({incompatibleAddonList}){return dedent24`
      ${chalk20.bold(chalk20.red("Attention"))}: We've detected that you're using the following addons in versions which are known to be incompatible with Storybook 7:

      ${incompatibleAddonList.map(({name,version})=>`- ${chalk20.cyan(`${name}@${version}`)}`).join(`
`)}

      Please be aware they might not work in Storybook 7. Reach out to their maintainers for updates and check the following Github issue for more information:
      ${chalk20.yellow("https://github.com/storybookjs/storybook/issues/20529")}
    `}};import{dedent as dedent25}from"ts-dedent";import semver18 from"semver";import chalk21 from"chalk";var angularBuildersMultiproject={id:"angular-builders-multiproject",promptOnly:!0,async check({packageManager,configDir}){let packageJSON=packageManager.retrievePackageJson();if(isNxProject(packageJSON))return null;let angularVersion=packageManager.getAllDependencies()["@angular/core"],angularCoerced=semver18.coerce(angularVersion)?.version;if(!angularCoerced||semver18.lt(angularCoerced,"14.0.0"))return null;let angularJSON=new AngularJSON,{hasStorybookBuilder}=angularJSON;return hasStorybookBuilder||angularJSON.rootProject||Object.keys(angularJSON.projects).length===1?null:{}},prompt(){return dedent25`
    In Storybook 6.4 we have deprecated calling Storybook directly (npm run storybook) for Angular. In Storybook 7.0, we've removed it entirely. Instead you have to set up the Storybook builder in your ${chalk21.yellow("angular.json")} and execute ${chalk21.yellow("ng run <your-project>:storybook")} to start Storybook. 
    
    ❌ Your Angular workspace uses multiple projects defined in the ${chalk21.yellow("angular.json")} file and we were not able to detect a root project. Therefore we are not able to automigrate to use Angular Storybook builder. Instead, please visit ${chalk21.yellow("https://github.com/storybookjs/storybook/tree/next/code/frameworks/angular")} to do the migration manually.
    `}};var allFixes=[nodeJsRequirement,cra5,webpack5,angular12,vue3,eslintPlugin,builderVite,sbBinary,sbScripts,newFrameworks,incompatibleAddons,removedGlobalClientAPIs,mdx1to2,mdxgfm,autodocsTrue,addReact,missingBabelRc,angularBuildersMultiproject,angularBuilders],initFixes=[missingBabelRc,eslintPlugin];import{EOL}from"os";var ansiRegex=({onlyFirst=!1}={})=>{let pattern=["[\\u001B\\u009B][[\\]()#;?]*(?:(?:(?:(?:;[-a-zA-Z\\d\\/#&.:=?%@~_]+)*|[a-zA-Z\\d]+(?:;[-a-zA-Z\\d\\/#&.:=?%@~_]*)*)?\\u0007)","(?:(?:\\d{1,4}(?:;\\d{0,4})*)?[\\dA-PR-TZcf-ntqry=><~]))"].join("|");return new RegExp(pattern,onlyFirst?void 0:"g")},cleanLog=str=>str.replace(ansiRegex(),"").replace(/╮│/g,`\u256E
\u2502`).replace(/││/g,`\u2502
\u2502`).replace(/│╰/g,`\u2502
\u2570`).replace(/⚠️ {2}failed to check/g,`${EOL}\u26A0\uFE0F  failed to check`);import chalk22 from"chalk";import boxen from"boxen";import{frameworkPackages as frameworkPackages3,rendererPackages as rendererPackages3}from"@storybook/core-common";import dedent26 from"ts-dedent";import semver19 from"semver";function hasMultipleVersions(versions){return versions.find(v=>{let major=semver19.major(v);if(major===0){let minor=semver19.minor(v);if(minor===0){let patch=semver19.patch(v);return versions.some(v2=>semver19.patch(v2)!==patch)}return versions.some(v2=>semver19.minor(v2)!==minor)}return versions.some(v2=>semver19.major(v2)!==major)})}var messageDivider=`

`,segmentDivider=`

\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500

`;function getGlossaryMessages(fixSummary,fixResults,logFile){let messages=[];return fixSummary.succeeded.length>0&&(messages.push(chalk22.bold("Successful migrations:")),messages.push(fixSummary.succeeded.map(m=>chalk22.green(m)).join(", "))),Object.keys(fixSummary.failed).length>0&&(messages.push(chalk22.bold("Failed migrations:")),messages.push(Object.entries(fixSummary.failed).map(([id,error])=>`${chalk22.redBright(id)}:
${error}`).join(`
`)),messages.push(`You can find the full logs in ${chalk22.cyan(logFile)}`)),fixSummary.manual.length>0&&(messages.push(chalk22.bold("Manual migrations:")),messages.push(fixSummary.manual.map(m=>fixResults[m]==="manual_succeeded"?chalk22.green(m):chalk22.blue(m)).join(", "))),fixSummary.skipped.length>0&&(messages.push(chalk22.bold("Skipped migrations:")),messages.push(fixSummary.skipped.map(m=>chalk22.cyan(m)).join(", "))),messages}function getMigrationSummary({fixResults,fixSummary,logFile,installationMetadata}){let messages=[];messages.push(getGlossaryMessages(fixSummary,fixResults,logFile).join(messageDivider)),messages.push(dedent26`If you'd like to run the migrations again, you can do so by running '${chalk22.cyan("npx storybook@next automigrate")}'
    
    The automigrations try to migrate common patterns in your project, but might not contain everything needed to migrate to the latest version of Storybook.
    
    Please check the changelog and migration guide for manual migrations and more information: ${chalk22.yellow("https://storybook.js.org/migration-guides/7.0")}
    And reach out on Discord if you need help: ${chalk22.yellow("https://discord.gg/storybook")}
  `),installationMetadata?.duplicatedDependencies&&Object.keys(installationMetadata.duplicatedDependencies).length>0&&messages.push(getWarnings(installationMetadata).join(messageDivider));let hasNoFixes=Object.values(fixResults).every(r=>r==="unnecessary"),hasFailures=Object.values(fixResults).some(r=>r==="failed"||r==="check_failed"),title=hasNoFixes?"No migrations were applicable to your project":hasFailures?"Migration check ran with failures":"Migration check ran successfully";return boxen(messages.filter(Boolean).join(segmentDivider),{borderStyle:"round",padding:1,title,borderColor:hasFailures?"red":"green"})}var allowList=["@storybook/csf","@storybook/addons","@storybook/channel-postmessage","@storybook/channel-websocket","@storybook/channels","@storybook/client-api","@storybook/client-logger","@storybook/core-client","@storybook/core-events","@storybook/preview-web","@storybook/preview-api","@storybook/store","@storybook/components","@storybook/router","@storybook/theming","@storybook/api","@storybook/manager-api"],disallowList=[Object.keys(rendererPackages3),Object.keys(frameworkPackages3),"@storybook/instrumenter"];function getWarnings(installationMetadata){let messages=[],{critical,trivial}=Object.entries(installationMetadata?.duplicatedDependencies).reduce((acc,[dep,versions])=>{if(allowList.includes(dep))return acc;let hasMultipleMajorVersions=hasMultipleVersions(versions);return disallowList.includes(dep)&&hasMultipleMajorVersions?acc.critical.push(`${chalk22.redBright(dep)}:
${versions.join(", ")}`):acc.trivial.push(`${chalk22.hex("#ff9800")(dep)}:
${versions.join(", ")}`),acc},{critical:[],trivial:[]});return critical.length>0&&(messages.push(`${chalk22.bold("Critical:")} The following dependencies are duplicated and WILL cause unexpected behavior:`),messages.push(critical.join(messageDivider))),trivial.length>0&&(messages.push(`${chalk22.bold("Attention:")} The following dependencies are duplicated which might cause unexpected behavior:`),messages.push(trivial.join(messageDivider))),messages.push(`You can find more information for a given dependency by running ${chalk22.cyan(`${installationMetadata.infoCommand} <package-name>`)}`),messages}var logger17=console,LOG_FILE_NAME="migration-storybook.log",LOG_FILE_PATH=join5(process.cwd(),LOG_FILE_NAME),TEMP_LOG_FILE_PATH="",originalStdOutWrite=process.stdout.write.bind(process.stdout),originalStdErrWrite=process.stderr.write.bind(process.stdout),augmentLogsToFile=()=>{TEMP_LOG_FILE_PATH=tempy.file({name:LOG_FILE_NAME});let logStream=createWriteStream(TEMP_LOG_FILE_PATH);process.stdout.write=d=>(originalStdOutWrite(d),logStream.write(cleanLog(d))),process.stderr.write=d=>logStream.write(cleanLog(d))},cleanup=()=>{process.stdout.write=originalStdOutWrite,process.stderr.write=originalStdErrWrite},logAvailableMigrations=()=>{let availableFixes=allFixes.map(f=>chalk23.yellow(f.id)).join(", ");logger17.info(`
The following migrations are available: ${availableFixes}`)},automigrate=async({fixId,fixes:inputFixes,dryRun,yes,useNpm,packageManager:pkgMgr,list,configDir:userSpecifiedConfigDir,renderer:rendererPackage,skipInstall}={})=>{if(list)return logAvailableMigrations(),null;let selectedFixes=inputFixes||allFixes,fixes=fixId?selectedFixes.filter(f=>f.id===fixId):selectedFixes;if(fixId&&fixes.length===0)return logger17.info(`\u{1F4ED} No migrations found for ${chalk23.magenta(fixId)}.`),logAvailableMigrations(),null;augmentLogsToFile(),logger17.info("\u{1F50E} checking possible migrations..");let{fixResults,fixSummary}=await runFixes({fixes,useNpm,pkgMgr,userSpecifiedConfigDir,rendererPackage,skipInstall,dryRun,yes});Object.values(fixResults).some(r=>r==="failed"||r==="check_failed")?await move(TEMP_LOG_FILE_PATH,join5(process.cwd(),LOG_FILE_NAME),{overwrite:!0}):await remove(TEMP_LOG_FILE_PATH);let installationMetadata=await JsPackageManagerFactory.getPackageManager({force:pkgMgr}).findInstallations(["@storybook/*","storybook"]);return logger17.info(),logger17.info(getMigrationSummary({fixResults,fixSummary,logFile:LOG_FILE_PATH,installationMetadata})),logger17.info(),cleanup(),fixResults};async function runFixes({fixes,dryRun,yes,useNpm,pkgMgr,userSpecifiedConfigDir,rendererPackage,skipInstall}){useNpm&&(useNpmWarning(),pkgMgr="npm");let packageManager=JsPackageManagerFactory.getPackageManager({force:pkgMgr}),{configDir:inferredConfigDir,mainConfig:mainConfigPath,version:storybookVersion}=getStorybookInfo3(packageManager.retrievePackageJson(),userSpecifiedConfigDir);if(!(storybookVersion&&semver20.coerce(storybookVersion)?.version))return logger17.info(dedent27`
      [Storybook automigrate] ❌ Unable to determine storybook version so the automigrations will be skipped.
        🤔 Are you running automigrate from your project directory? Please specify your Storybook config directory with the --config-dir flag.
      `),{preCheckFailure:"undetected_sb_version"};let configDir=userSpecifiedConfigDir||inferredConfigDir||".storybook";try{await loadMainConfig2({configDir})}catch(err){return err.message.includes("No configuration files have been found")?(logger17.info(dedent27`[Storybook automigrate] Could not find or evaluate your Storybook main.js config directory at ${chalk23.blue(configDir)} so the automigrations will be skipped. You might be running this command in a monorepo or a non-standard project structure. If that is the case, please rerun this command by specifying the path to your Storybook config directory via the --config-dir option.`),{preCheckFailure:"mainjs_not_found"}):(logger17.info(dedent27`[Storybook automigrate] ❌ Failed trying to evaluate ${chalk23.blue(mainConfigPath)} with the following error: ${err.message}`),logger17.info("Please fix the error and try again."),{preCheckFailure:"mainjs_evaluation_error"})}let fixResults={},fixSummary={succeeded:[],failed:{},manual:[],skipped:[]};for(let i=0;i<fixes.length;i+=1){let f=fixes[i],result;try{result=await f.check({packageManager,configDir,rendererPackage})}catch(error){logger17.info(`\u26A0\uFE0F  failed to check fix ${chalk23.bold(f.id)}`),logger17.error(`
${error.stack}`),fixSummary.failed[f.id]=error.message,fixResults[f.id]="check_failed"}if(result){logger17.info(`
\u{1F50E} found a '${chalk23.cyan(f.id)}' migration:`);let message=f.prompt(result);logger17.info(boxen2(message,{borderStyle:"round",padding:1,borderColor:"#F1618C",title:f.promptOnly?"Manual migration detected":"Automigration detected"}));let runAnswer;try{if(dryRun)runAnswer={fix:!1};else if(yes)runAnswer={fix:!0},f.promptOnly&&(fixResults[f.id]="manual_succeeded",fixSummary.manual.push(f.id));else if(f.promptOnly){fixResults[f.id]="manual_succeeded",fixSummary.manual.push(f.id),logger17.info();let{shouldContinue}=await prompts5({type:"toggle",name:"shouldContinue",message:"Select continue once you have made the required changes, or quit to exit the migration process",initial:!0,active:"continue",inactive:"quit"},{onCancel:()=>{throw new Error}});if(!shouldContinue){fixResults[f.id]="manual_skipped";break}}else runAnswer=await prompts5({type:"confirm",name:"fix",message:`Do you want to run the '${chalk23.cyan(f.id)}' migration on your project?`,initial:!0},{onCancel:()=>{throw new Error}})}catch{break}if(!f.promptOnly)if(runAnswer.fix)try{await f.run({result,packageManager,dryRun,mainConfigPath,skipInstall}),logger17.info(`\u2705 ran ${chalk23.cyan(f.id)} migration`),fixResults[f.id]="succeeded",fixSummary.succeeded.push(f.id)}catch(error){fixResults[f.id]="failed",fixSummary.failed[f.id]=error.message,logger17.info(`\u274C error when running ${chalk23.cyan(f.id)} migration`),logger17.info(error),logger17.info()}else fixResults[f.id]="skipped",fixSummary.skipped.push(f.id)}else fixResults[f.id]=fixResults[f.id]||"unnecessary"}return{fixResults,fixSummary}}var logger18=console,installStorybook=(projectType,packageManager,options)=>{let npmOptions={installAsDevDependencies:!0,skipInstall:options.skipInstall},packageJson;try{packageJson=packageManager.readPackageJson()}catch{}let language=detectLanguage(packageJson),pnp=detectPnp(),generatorOptions={language,builder:options.builder||detectBuilder(packageManager,projectType),linkable:!!options.linkable,pnp:pnp||options.usePnp},runGenerator=async()=>{switch(projectType){case"REACT_SCRIPTS":return REACT_SCRIPTS_default(packageManager,npmOptions,generatorOptions).then(commandLog('Adding Storybook support to your "Create React App" based project'));case"REACT":return REACT_default(packageManager,npmOptions,generatorOptions).then(commandLog(`Adding Storybook support to your "React" app
`));case"REACT_NATIVE":return REACT_NATIVE_default(packageManager,npmOptions).then(commandLog(`Adding Storybook support to your "React Native" app
`));case"QWIK":return QWIK_default(packageManager,npmOptions,generatorOptions).then(commandLog(`Adding Storybook support to your "Qwik" app
`));case"WEBPACK_REACT":return WEBPACK_REACT_default(packageManager,npmOptions,generatorOptions).then(commandLog(`Adding Storybook support to your "Webpack React" app
`));case"REACT_PROJECT":return REACT_default(packageManager,npmOptions,generatorOptions).then(commandLog(`Adding Storybook support to your "React" library
`));case"NEXTJS":return NEXTJS_default(packageManager,npmOptions,generatorOptions).then(commandLog(`Adding Storybook support to your "Next" app
`));case"SFC_VUE":return SFC_VUE_default(packageManager,npmOptions,generatorOptions).then(commandLog(`Adding Storybook support to your "Single File Components Vue" app
`));case"VUE":return VUE_default(packageManager,npmOptions,generatorOptions).then(commandLog(`Adding Storybook support to your "Vue" app
`));case"VUE3":return VUE3_default(packageManager,npmOptions,generatorOptions).then(commandLog(`Adding Storybook support to your "Vue 3" app
`));case"ANGULAR":return commandLog(`Adding Storybook support to your "Angular" app
`),ANGULAR_default(packageManager,npmOptions,generatorOptions,options);case"EMBER":return EMBER_default(packageManager,npmOptions,generatorOptions).then(commandLog(`Adding Storybook support to your "Ember" app
`));case"MITHRIL":return MITHRIL_default(packageManager,npmOptions,generatorOptions).then(commandLog(`Adding Storybook support to your "Mithril" app
`));case"MARIONETTE":return MARIONETTE_default(packageManager,npmOptions,generatorOptions).then(commandLog(`Adding Storybook support to your "Marionette.js" app
`));case"MARKO":return MARKO_default(packageManager,npmOptions,generatorOptions).then(commandLog(`Adding Storybook support to your "Marko" app
`));case"HTML":return HTML_default(packageManager,npmOptions,generatorOptions).then(commandLog(`Adding Storybook support to your "HTML" app
`));case"WEB_COMPONENTS":return WEB_COMPONENTS_default(packageManager,npmOptions,generatorOptions).then(commandLog(`Adding Storybook support to your "web components" app
`));case"RIOT":return RIOT_default(packageManager,npmOptions,generatorOptions).then(commandLog(`Adding Storybook support to your "riot.js" app
`));case"PREACT":return PREACT_default(packageManager,npmOptions,generatorOptions).then(commandLog(`Adding Storybook support to your "Preact" app
`));case"SVELTE":return SVELTE_default(packageManager,npmOptions,generatorOptions).then(commandLog(`Adding Storybook support to your "Svelte" app
`));case"SVELTEKIT":return SVELTEKIT_default(packageManager,npmOptions,generatorOptions).then(commandLog(`Adding Storybook support to your "SvelteKit" app
`));case"RAX":return RAX_default(packageManager,npmOptions,generatorOptions).then(commandLog(`Adding Storybook support to your "Rax" app
`));case"AURELIA":return AURELIA_default(packageManager,npmOptions,generatorOptions).then(commandLog(`Adding Storybook support to your "Aurelia" app
`));case"SERVER":return SERVER_default(packageManager,npmOptions,generatorOptions).then(commandLog(`Adding Storybook support to your "Server" app
`));case"NX":return paddedLog("We have detected Nx in your project. Please use `nx g @nrwl/storybook:configuration` to add Storybook to your project."),paddedLog("For more information, please see https://nx.dev/packages/storybook"),Promise.reject();case"SOLID":return SOLID_default(packageManager,npmOptions,generatorOptions).then(commandLog(`Adding Storybook support to your "SolidJS" app
`));case"UNSUPPORTED":return paddedLog("We detected a project type that we don't support yet."),paddedLog("If you'd like your framework to be supported, please let use know about it at https://github.com/storybookjs/storybook/issues"),logger18.log(),Promise.resolve();default:return paddedLog(`We couldn't detect your project type. (code: ${projectType})`),paddedLog("You can specify a project type explicitly via `sb init --type <type>`, see our docs on how to configure Storybook for your framework: https://storybook.js.org/docs/react/get-started/install"),logger18.log(),projectTypeInquirer(options,packageManager)}};try{return runGenerator()}catch(err){throw logger18.error(`
     ${chalk24.red(err.stack)}`),new HandledError(err)}},projectTypeInquirer=async(options,packageManager)=>{let manualAnswer=options.yes?!0:await prompts6([{type:"confirm",name:"manual",message:"Do you want to manually choose a Storybook project type to install?"}]);if(manualAnswer!==!0&&manualAnswer.manual){let frameworkAnswer=await prompts6([{type:"select",name:"manualFramework",message:"Please choose a project type from the following list:",choices:installableProjectTypes.map(type=>({title:type,value:type.toUpperCase()}))}]);return installStorybook(frameworkAnswer.manualFramework,packageManager,options)}return Promise.resolve()};async function doInitiate(options,pkg2){let{packageManager:pkgMgr}=options;options.useNpm&&(useNpmWarning(),pkgMgr="npm");let packageManager=JsPackageManagerFactory.getPackageManager({force:pkgMgr}),welcomeMessage="storybook init - the simplest way to add a Storybook to your project.";logger18.log(chalk24.inverse(`
 ${welcomeMessage} 
`));let{default:updateNotifier}=await import("simple-update-notifier");await updateNotifier({pkg:pkg2,updateCheckInterval:1e3*60*60});let projectType,projectTypeProvided=options.type,infoText=projectTypeProvided?`Installing Storybook for user specified project type: ${projectTypeProvided}`:"Detecting project type",done=commandLog(infoText),packageJson=packageManager.retrievePackageJson();if(projectTypeProvided)if(installableProjectTypes.includes(projectTypeProvided))projectType=projectTypeProvided.toUpperCase();else throw done(`The provided project type was not recognized by Storybook: ${projectTypeProvided}`),logger18.log(`
The project types currently supported by Storybook are:
`),installableProjectTypes.sort().forEach(framework=>paddedLog(`- ${framework}`)),logger18.log(),new HandledError(`Unknown project type supplied: ${projectTypeProvided}`);else try{projectType=detect(packageJson,options)}catch(err){throw done(err.message),new HandledError(err)}done();let storybookInstalled=isStorybookInstalled(packageJson,options.force);if(storybookInstalled&&projectType!=="ANGULAR")throw logger18.log(),paddedLog("There seems to be a Storybook already available in this project."),paddedLog(`Apply following command to force:
`),codeLog(["sb init [options] -f"]),logger18.log(),new HandledError("Angular project already installed");let installResult=await installStorybook(projectType,packageManager,options);!options.skipInstall&&!storybookInstalled&&packageManager.installDependencies(),options.disableTelemetry||telemetry("init",{projectType}),projectType!=="REACT_NATIVE"&&await automigrate({yes:options.yes||process.env.CI==="true",packageManager:pkgMgr,fixes:initFixes,configDir:installResult?.configDir}),logger18.log(`
For more information visit:`,chalk24.cyan("https://storybook.js.org")),projectType==="ANGULAR"?(logger18.log(`
To run your Storybook, type:
`),codeLog([`ng run ${installResult.projectName}:storybook`])):projectType==="REACT_NATIVE"?(logger18.log(),logger18.log(chalk24.yellow(`NOTE: installation is not 100% automated.
`)),logger18.log(`To quickly run Storybook, replace contents of your app entry with:
`),codeLog(["export {default} from './.storybook';"]),logger18.log(`
 Then to run your Storybook, type:
`),codeLog([packageManager.getRunCommand("start")]),logger18.log(`
 For more in information, see the github readme:
`),logger18.log(chalk24.cyan("https://github.com/storybookjs/react-native")),logger18.log()):(logger18.log(`
To run your Storybook, type:
`),codeLog([packageManager.getRunStorybookCommand()])),logger18.log()}async function initiate(options,pkg2){await withTelemetry("init",{cliOptions:options,printError:err=>!err.handled&&logger18.error(err)},()=>doInitiate(options,pkg2))}import path6 from"path";import fs5 from"fs";import{sync as spawnSync}from"cross-spawn";import{getStorybookInfo as getStorybookInfo4}from"@storybook/core-common";import{readConfig as readConfig3,writeConfig as writeConfig3}from"@storybook/csf-tools";var logger19=console,LEGACY_CONFIGS=["addons","config","presets"],postinstallAddon=async(addonName,isOfficialAddon)=>{let skipMsg=null;isOfficialAddon?fs5.existsSync(".storybook")?(skipMsg="no codmods found",LEGACY_CONFIGS.forEach(config=>{try{let codemod=__require.resolve(`${getPackageName(addonName,isOfficialAddon)}/postinstall/${config}.js`);commandLog(`Running postinstall script for ${addonName}`)();let configFile=path6.join(".storybook",`${config}.ts`);fs5.existsSync(configFile)||(configFile=path6.join(".storybook",`${config}.js`),fs5.existsSync(configFile)||fs5.writeFileSync(configFile,"","utf8")),spawnSync("npx",["jscodeshift","-t",codemod,configFile],{stdio:"inherit",shell:!0}),skipMsg=null}catch{}})):skipMsg="no .storybook config":skipMsg="unofficial addon",skipMsg&&commandLog(`Skipping postinstall for ${addonName}, ${skipMsg}`)()},getVersionSpecifier=addon=>{let groups=/^(...*)@(.*)$/.exec(addon);return groups?[groups[1],groups[2]]:[addon,void 0]};async function add(addon,options){let{packageManager:pkgMgr}=options;options.useNpm&&(useNpmWarning(),pkgMgr="npm");let packageManager=JsPackageManagerFactory.getPackageManager({force:pkgMgr}),packageJson=packageManager.retrievePackageJson(),[addonName,versionSpecifier]=getVersionSpecifier(addon),{mainConfig,version:storybookVersion}=getStorybookInfo4(packageJson);if(!mainConfig){logger19.error("Unable to find storybook main.js config");return}let main=await readConfig3(mainConfig);logger19.log(`Verifying ${addonName}`);let latestVersion=packageManager.latestVersion(addonName);latestVersion||logger19.error(`Unknown addon ${addonName}`);let isStorybookAddon=addonName.startsWith("@storybook/"),addonWithVersion=`${addonName}@${versionSpecifier||(isStorybookAddon?storybookVersion:latestVersion)}`;logger19.log(`Installing ${addonWithVersion}`),packageManager.addDependencies({installAsDevDependencies:!0},[addonWithVersion]),logger19.log(`Adding '${addon}' to main.js addons field.`),main.appendValueToArray(["addons"],addonName),await writeConfig3(main),options.skipPostinstall||await postinstallAddon(addon,isStorybookAddon)}import{listCodemods,runCodemod}from"@storybook/codemod";import chalk25 from"chalk";import dedent28 from"ts-dedent";import semver21 from"semver";var logger20=console,getNextGlob=glob=>{let extGlobsRegex=new RegExp(/(.*\.)(stories\.@.*)(\|mdx|mdx\|)(.*)$/i);if(glob.match(extGlobsRegex))return glob.replace(extGlobsRegex,"$1@(mdx|$2$4)");let allStoriesExtensionsRegex=new RegExp(/(.*\.)(stories\.\*)$/i);return glob.match(allStoriesExtensionsRegex)?glob.replace(allStoriesExtensionsRegex,"$1@(mdx|$2)"):glob.replaceAll(".stories.mdx",".mdx")},bareMdxStoriesGlob={id:"bare-mdx-stories-glob",async check({packageManager,configDir}){let{storybookVersion,mainConfig}=await getStorybookData({configDir,packageManager});if(!semver21.gte(storybookVersion,"7.0.0"))return null;let existingStoriesEntries=mainConfig.stories;if(!existingStoriesEntries)throw new Error(dedent28`
      ❌ Unable to determine Storybook stories globs in ${chalk25.blue(mainConfig)}, skipping ${chalk25.cyan(this.id)} fix.
      
      In Storybook 7, we have deprecated defining stories in MDX files, and consequently have changed the suffix to simply .mdx.

      We were unable to automatically migrate your 'stories' config to include any .mdx file instead of just .stories.mdx.
      We suggest you make this change manually.

      To learn more about this change, see: ${chalk25.yellow("https://github.com/storybookjs/storybook/blob/next/MIGRATION.md#mdx-docs-files")}
      `);let nextStoriesEntries=existingStoriesEntries.map(entry=>{let isSpecifier=typeof entry!="string",glob=isSpecifier?entry.files:entry;if(!glob)return entry;let nextGlob=getNextGlob(glob);return isSpecifier?{...entry,files:nextGlob}:nextGlob});return existingStoriesEntries.length===nextStoriesEntries.length&&existingStoriesEntries.every((entry,index)=>{let nextEntry=nextStoriesEntries[index];return typeof entry=="string"?entry===nextEntry:typeof nextEntry=="string"?!1:entry.files===nextEntry.files})?null:{existingStoriesEntries,nextStoriesEntries}},prompt({existingStoriesEntries,nextStoriesEntries}){let prettyExistingStoriesEntries=existingStoriesEntries.map(entry=>JSON.stringify(entry,null,2)).join(`
`),prettyNextStoriesEntries=nextStoriesEntries.map(entry=>JSON.stringify(entry,null,2)).join(`
`);return dedent28`
    We've detected your project has one or more globs in your 'stories' config that matches .stories.mdx files:
      ${chalk25.cyan(prettyExistingStoriesEntries)}
    
    In Storybook 7, we have deprecated defining stories in MDX files, and consequently have changed the suffix to simply .mdx.

    We can automatically migrate your 'stories' config to include any .mdx file instead of just .stories.mdx.
    That would result in the following 'stories' config:
      ${chalk25.cyan(prettyNextStoriesEntries)}

    To learn more about this change, see: ${chalk25.yellow("https://github.com/storybookjs/storybook/blob/next/MIGRATION.md#mdx-docs-files")}
  `},async run({dryRun,mainConfigPath,result:{nextStoriesEntries}}){logger20.info(dedent28`✅ Setting 'stories' config:
      ${JSON.stringify(nextStoriesEntries,null,2)}`),dryRun||await updateMainConfig({mainConfigPath,dryRun},async main=>{main.setFieldValue(["stories"],nextStoriesEntries)})}};var logger21=console;async function migrate(migration,{glob,dryRun,list,rename,parser}){if(list)listCodemods().forEach(key=>logger21.log(key));else if(migration)migration==="mdx-to-csf"&&!dryRun&&(await runFixes({fixes:[bareMdxStoriesGlob]}),await addStorybookBlocksPackage()),await runCodemod(migration,{glob,dryRun,logger:logger21,rename,parser});else throw new Error("Migrate: please specify a migration name or --list")}async function addStorybookBlocksPackage(){let packageManager=JsPackageManagerFactory.getPackageManager(),packageJson=packageManager.retrievePackageJson(),versionToInstall=getStorybookVersionSpecifier(packageManager.retrievePackageJson());logger21.info('\u2705 Adding "@storybook/blocks" package'),await packageManager.addDependencies({installAsDevDependencies:!0,packageJson},[`@storybook/blocks@${versionToInstall}`])}import path7 from"path";import{writeFile as writeFile2,stat}from"fs-extra";import puppeteerCore from"puppeteer-core";import express from"express";import getPort from"get-port";import{logger as logger22}from"@storybook/node-logger";var read=async url=>{let browser=await usePuppeteerBrowser(),page=await browser.newPage();await page.goto(url),await page.waitForFunction(`
    (window.__STORYBOOK_PREVIEW__ && window.__STORYBOOK_PREVIEW__.extract && window.__STORYBOOK_PREVIEW__.extract()) ||
    (window.__STORYBOOK_STORY_STORE__ && window.__STORYBOOK_STORY_STORE__.extract && window.__STORYBOOK_STORY_STORE__.extract())
  `);let data=JSON.parse(await page.evaluate(async()=>JSON.stringify(window.__STORYBOOK_STORY_STORE__.getStoriesJsonData(),null,2)));return setImmediate(()=>{browser.close()}),data},useLocation=async input=>{if(await stat(path7.resolve(input)),input.match(/^http/))return[input,async()=>{}];let app=express();app.use(express.static(input));let port=await getPort();return new Promise(resolve=>{let server=app.listen(port,()=>{let result=`http://localhost:${port}/iframe.html`;logger22.info(`connecting to: ${result}`),resolve([result,server.close.bind(server)])})})},usePuppeteerBrowser=async()=>{let args=["--no-sandbox ","--disable-setuid-sandbox"];try{return await puppeteerCore.launch({args,executablePath:process.env.SB_CHROMIUM_PATH})}catch{return logger22.info("installing puppeteer..."),new Promise((resolve,reject)=>{__require("child_process").exec(`node ${__require.resolve(path7.join("puppeteer-core","install.js"))}`,error=>error?reject(error):resolve(puppeteerCore.launch({args})))})}};async function extract(input,targetPath){if(input&&targetPath){let[location,exit]=await useLocation(input),data=await read(location);await writeFile2(targetPath,JSON.stringify(data,null,2)),await exit()}else throw new Error("Extract: please specify a path where your built-storybook is (can be a public url) and a target directory")}import{sync as spawnSync2}from"cross-spawn";import{telemetry as telemetry2,getStorybookCoreVersion}from"@storybook/telemetry";import semver22 from"semver";import{logger as logger23}from"@storybook/node-logger";import{withTelemetry as withTelemetry2}from"@storybook/core-server";var versionRegex=/(@storybook\/[^@]+)@(\S+)/,getStorybookVersion=line=>{if(line.startsWith("npm "))return null;let match=versionRegex.exec(line);return!match||!semver22.clean(match[2])?null:{package:match[1],version:match[2]}},excludeList=["@storybook/addon-bench","@storybook/addon-console","@storybook/addon-postcss","@storybook/babel-plugin-require-context-hook","@storybook/bench","@storybook/builder-vite","@storybook/csf","@storybook/design-system","@storybook/ember-cli-storybook","@storybook/eslint-config-storybook","@storybook/expect","@storybook/jest","@storybook/linter-config","@storybook/mdx1-csf","@storybook/mdx2-csf","@storybook/react-docgen-typescript-plugin","@storybook/storybook-deployer","@storybook/test-runner","@storybook/testing-library","@storybook/testing-react"],isCorePackage=pkg2=>pkg2.startsWith("@storybook/")&&!pkg2.startsWith("@storybook/preset-")&&!excludeList.includes(pkg2),deprecatedPackages=[{minVersion:"6.0.0-alpha.0",url:"https://github.com/storybookjs/storybook/blob/next/MIGRATION.md#60-deprecations",deprecations:["@storybook/addon-notes","@storybook/addon-info","@storybook/addon-contexts","@storybook/addon-options","@storybook/addon-centered"]}],formatPackage=pkg2=>`${pkg2.package}@${pkg2.version}`,warnPackages=pkgs=>pkgs.forEach(pkg2=>logger23.warn(`- ${formatPackage(pkg2)}`)),checkVersionConsistency=()=>{let storybookPackages=spawnSync2("npm",["ls"],{stdio:"pipe",shell:!0}).output.toString().split(`
`).map(getStorybookVersion).filter(Boolean).filter(pkg2=>isCorePackage(pkg2.package));if(!storybookPackages.length){logger23.warn("No storybook core packages found."),logger23.warn("'npm ls | grep storybook' can show if multiple versions are installed.");return}storybookPackages.sort((a,b)=>semver22.rcompare(a.version,b.version));let latestVersion=storybookPackages[0].version,outdated=storybookPackages.filter(pkg2=>pkg2.version!==latestVersion);outdated.length>0&&(logger23.warn(`Found ${outdated.length} outdated packages (relative to '${formatPackage(storybookPackages[0])}')`),logger23.warn("Please make sure your packages are updated to ensure a consistent experience."),warnPackages(outdated)),deprecatedPackages.forEach(({minVersion,url,deprecations})=>{if(semver22.gte(latestVersion,minVersion)){let deprecated=storybookPackages.filter(pkg2=>deprecations.includes(pkg2.package));deprecated.length>0&&(logger23.warn(`Found ${deprecated.length} deprecated packages since ${minVersion}`),logger23.warn(`See ${url}`),warnPackages(deprecated))}})},EXTRA_FLAGS={"react-scripts@<5":["--reject","/preset-create-react-app/"]},addExtraFlags=(extraFlags,flags,{dependencies,devDependencies})=>Object.entries(extraFlags).reduce((acc,entry)=>{let[pattern,extra]=entry,[pkg2,specifier]=getPackageDetails(pattern),pkgVersion=dependencies[pkg2]||devDependencies[pkg2];return pkgVersion&&semver22.satisfies(semver22.coerce(pkgVersion),specifier)?[...acc,...extra]:acc},[...flags]),doUpgrade=async({tag,prerelease,skipCheck,useNpm,packageManager:pkgMgr,dryRun,configDir,yes,...options})=>{useNpm&&(useNpmWarning(),pkgMgr="npm");let packageManager=JsPackageManagerFactory.getPackageManager({force:pkgMgr}),beforeVersion=await getStorybookCoreVersion();if(commandLog("Checking for latest versions of '@storybook/*' packages"),tag&&prerelease)throw new Error("Cannot set both --tag and --prerelease. Use --tag next to get the latest prereleae");let target="latest";prerelease?target="@next":tag&&(target=`@${tag}`);let flags=[];dryRun||flags.push("--upgrade"),flags.push("--target"),flags.push(target),flags=addExtraFlags(EXTRA_FLAGS,flags,packageManager.retrievePackageJson());let check=spawnSync2("npx",["npm-check-updates@latest","/storybook/",...flags],{stdio:"pipe",shell:!0}).output.toString();logger23.info(check);let checkSb=spawnSync2("npx",["npm-check-updates@latest","sb",...flags],{stdio:"pipe",shell:!0}).output.toString();logger23.info(checkSb),dryRun||(commandLog("Installing upgrades"),packageManager.installDependencies());let automigrationResults;if(skipCheck||(checkVersionConsistency(),automigrationResults=await automigrate({dryRun,yes,packageManager:pkgMgr,configDir})),!options.disableTelemetry){let afterVersion=await getStorybookCoreVersion(),{preCheckFailure,...results}=automigrationResults||{};telemetry2("upgrade",{prerelease,tag,beforeVersion,afterVersion,...{automigrationResults:preCheckFailure?null:results,automigrationPreCheckFailure:preCheckFailure||null}})}};async function upgrade(options){await withTelemetry2("upgrade",{cliOptions:options},()=>doUpgrade(options))}import prompts7 from"prompts";import path8 from"path";import chalk26 from"chalk";import boxen3 from"boxen";import{dedent as dedent29}from"ts-dedent";import{downloadTemplate}from"giget";import{existsSync,readdir}from"fs-extra";var baseTemplates={"cra/default-js":{name:"Create React App (Javascript)",script:"npx create-react-app .",expected:{framework:"@storybook/react-webpack5",renderer:"@storybook/react",builder:"@storybook/builder-webpack5"},skipTasks:["e2e-tests-dev"]},"cra/default-ts":{name:"Create React App (Typescript)",script:"npx create-react-app . --template typescript",skipTasks:["smoke-test"],expected:{framework:"@storybook/react-webpack5",renderer:"@storybook/react",builder:"@storybook/builder-webpack5"}},"nextjs/12-js":{name:"Next.js v12 (JavaScript)",script:'yarn create next-app {{beforeDir}} -e https://github.com/vercel/next.js/tree/next-12-3-2/examples/hello-world && cd {{beforeDir}} && npm pkg set "dependencies.next"="^12.2.0" && yarn && git add . && git commit --amend --no-edit && cd ..',expected:{framework:"@storybook/nextjs",renderer:"@storybook/react",builder:"@storybook/builder-webpack5"},skipTasks:["e2e-tests-dev"]},"nextjs/default-js":{name:"Next.js (JavaScript)",script:"yarn create next-app {{beforeDir}} --javascript --eslint",expected:{framework:"@storybook/nextjs",renderer:"@storybook/react",builder:"@storybook/builder-webpack5"},skipTasks:["e2e-tests-dev"]},"nextjs/default-ts":{name:"Next.js (TypeScript)",script:"yarn create next-app {{beforeDir}} --typescript --eslint",expected:{framework:"@storybook/nextjs",renderer:"@storybook/react",builder:"@storybook/builder-webpack5"},skipTasks:["e2e-tests-dev"]},"react-vite/default-js":{name:"React Vite (JS)",script:"yarn create vite . --template react",expected:{framework:"@storybook/react-vite",renderer:"@storybook/react",builder:"@storybook/builder-vite"},skipTasks:["e2e-tests-dev"]},"react-vite/default-ts":{name:"React Vite (TS)",script:"yarn create vite . --template react-ts",expected:{framework:"@storybook/react-vite",renderer:"@storybook/react",builder:"@storybook/builder-vite"}},"react-webpack/18-ts":{name:"React 18 Webpack5 (TS)",script:"yarn create webpack5-react .",expected:{framework:"@storybook/react-webpack5",renderer:"@storybook/react",builder:"@storybook/builder-webpack5"},skipTasks:["e2e-tests-dev"]},"react-webpack/17-ts":{name:"React 17 Webpack5 (TS)",script:'yarn create webpack5-react . --version-react="17" --version-react-dom="17"',expected:{framework:"@storybook/react-webpack5",renderer:"@storybook/react",builder:"@storybook/builder-webpack5"},skipTasks:["e2e-tests-dev"]},"solid-vite/default-js":{name:"SolidJS Vite (JS)",script:"npx degit solidjs/templates/js .",expected:{framework:"storybook-solidjs-vite",renderer:"storybook-solidjs",builder:"@storybook/builder-vite"},inDevelopment:!0,skipTasks:["e2e-tests-dev"]},"solid-vite/default-ts":{name:"SolidJS Vite (TS)",script:"npx degit solidjs/templates/ts .",expected:{framework:"storybook-solidjs-vite",renderer:"storybook-solidjs",builder:"@storybook/builder-vite"},inDevelopment:!0,skipTasks:["e2e-tests-dev"]},"vue3-vite/default-js":{name:"Vue3 Vite (JS)",script:"yarn create vite . --template vue",expected:{framework:"@storybook/vue3-vite",renderer:"@storybook/vue3",builder:"@storybook/builder-vite"},skipTasks:["e2e-tests-dev"]},"vue3-vite/default-ts":{name:"Vue3 Vite (TS)",script:"yarn create vite . --template vue-ts",expected:{framework:"@storybook/vue3-vite",renderer:"@storybook/vue3",builder:"@storybook/builder-vite"},skipTasks:["e2e-tests-dev"]},"vue2-vite/2.7-js":{name:"Vue2 Vite (vue 2.7 JS)",script:"npx create-vue@2 {{beforeDir}} --default",expected:{framework:"@storybook/vue-vite",renderer:"@storybook/vue",builder:"@storybook/builder-vite"},skipTasks:["smoke-test","e2e-tests-dev"]},"html-webpack/default":{name:"HTML Webpack5",script:"yarn create webpack5-html .",expected:{framework:"@storybook/html-webpack5",renderer:"@storybook/html",builder:"@storybook/builder-webpack5"},skipTasks:["e2e-tests-dev"]},"html-vite/default-js":{name:"HTML Vite JS",script:'yarn create vite . --template vanilla && echo "export default {}" > vite.config.js',expected:{framework:"@storybook/html-vite",renderer:"@storybook/html",builder:"@storybook/builder-vite"},skipTasks:["e2e-tests-dev"]},"html-vite/default-ts":{name:"HTML Vite TS",script:'yarn create vite . --template vanilla-ts && echo "export default {}" > vite.config.js',expected:{framework:"@storybook/html-vite",renderer:"@storybook/html",builder:"@storybook/builder-vite"},skipTasks:["e2e-tests-dev"]},"svelte-vite/default-js":{name:"Svelte Vite (JS)",script:"yarn create vite . --template svelte",expected:{framework:"@storybook/svelte-vite",renderer:"@storybook/svelte",builder:"@storybook/builder-vite"},skipTasks:["e2e-tests-dev"]},"svelte-vite/default-ts":{name:"Svelte Vite (TS)",script:"yarn create vite . --template svelte-ts",expected:{framework:"@storybook/svelte-vite",renderer:"@storybook/svelte",builder:"@storybook/builder-vite"},skipTasks:["smoke-test","e2e-tests-dev"]},"angular-cli/default-ts":{name:"Angular CLI (latest)",script:"npx -p @angular/cli ng new angular-latest --directory . --routing=true --minimal=true --style=scss --strict --skip-git --skip-install --package-manager=yarn",expected:{framework:"@storybook/angular",renderer:"@storybook/angular",builder:"@storybook/builder-webpack5"},skipTasks:["e2e-tests-dev"]},"angular-cli/14-ts":{name:"Angular CLI (Version 14)",script:"npx -p @angular/cli@14 ng new angular-v14 --directory . --routing=true --minimal=true --style=scss --strict --skip-git --skip-install --package-manager=yarn",expected:{framework:"@storybook/angular",renderer:"@storybook/angular",builder:"@storybook/builder-webpack5"},skipTasks:["e2e-tests-dev"]},"svelte-kit/skeleton-js":{name:"Svelte Kit (JS)",script:"yarn create svelte-with-args --name=svelte-kit/skeleton-js --directory=. --template=skeleton --types=null --no-prettier --no-eslint --no-playwright --no-vitest",expected:{framework:"@storybook/sveltekit",renderer:"@storybook/svelte",builder:"@storybook/builder-vite"},skipTasks:["e2e-tests-dev"]},"svelte-kit/skeleton-ts":{name:"Svelte Kit (TS)",script:"yarn create svelte-with-args --name=svelte-kit/skeleton-ts --directory=. --template=skeleton --types=typescript --no-prettier --no-eslint --no-playwright --no-vitest",expected:{framework:"@storybook/sveltekit",renderer:"@storybook/svelte",builder:"@storybook/builder-vite"},skipTasks:["e2e-tests-dev"]},"lit-vite/default-js":{name:"Lit Vite (JS)",script:'npm create vite@latest --yes . -- --template lit && echo "export default {}" > vite.config.js',expected:{framework:"@storybook/web-components-vite",renderer:"@storybook/web-components",builder:"@storybook/builder-vite"},skipTasks:["smoke-test","e2e-tests-dev"]},"lit-vite/default-ts":{name:"Lit Vite (TS)",script:'npm create vite@latest --yes . -- --template lit-ts && echo "export default {}" > vite.config.js',expected:{framework:"@storybook/web-components-vite",renderer:"@storybook/web-components",builder:"@storybook/builder-vite"},skipTasks:["smoke-test","e2e-tests-dev"]},"vue-cli/default-js":{name:"Vue-CLI (Default JS)",script:"npx -p @vue/cli vue create . --default --packageManager=yarn --force --merge",expected:{framework:"@storybook/vue3-webpack5",renderer:"@storybook/vue3",builder:"@storybook/builder-webpack5"},skipTasks:["smoke-test","e2e-tests-dev"]},"vue-cli/vue2-default-js":{name:"Vue-CLI (Vue2 JS)",script:'npx -p @vue/cli vue create . --default --packageManager=yarn --force --merge --preset="Default (Vue 2)"',expected:{framework:"@storybook/vue-webpack5",renderer:"@storybook/vue",builder:"@storybook/builder-webpack5"},skipTasks:["smoke-test","e2e-tests-dev"]},"preact-webpack5/default-js":{name:"Preact CLI (Default JS)",script:"npx preact-cli create default {{beforeDir}} --name preact-app --yarn --no-install",expected:{framework:"@storybook/preact-webpack5",renderer:"@storybook/preact",builder:"@storybook/builder-webpack5"},skipTasks:["e2e-tests-dev"]},"preact-webpack5/default-ts":{name:"Preact CLI (Default TS)",script:"npx preact-cli create typescript {{beforeDir}} --name preact-app --yarn --no-install",expected:{framework:"@storybook/preact-webpack5",renderer:"@storybook/preact",builder:"@storybook/builder-webpack5"},skipTasks:["e2e-tests-dev"]},"preact-vite/default-js":{name:"Preact Vite (JS)",script:"yarn create vite . --template preact",expected:{framework:"@storybook/preact-vite",renderer:"@storybook/preact",builder:"@storybook/builder-vite"},skipTasks:["e2e-tests-dev"]},"preact-vite/default-ts":{name:"Preact Vite (TS)",script:"yarn create vite . --template preact-ts",expected:{framework:"@storybook/preact-vite",renderer:"@storybook/preact",builder:"@storybook/builder-vite"},skipTasks:["e2e-tests-dev"]},"qwik-vite/default-ts":{name:"Qwik CLI (Default TS)",script:"yarn create qwik basic {{beforeDir}} --no-install",inDevelopment:!0,expected:{framework:"storybook-framework-qwik",renderer:"storybook-framework-qwik",builder:"storybook-framework-qwik"},skipTasks:["e2e-tests","e2e-tests-dev"]}},internalTemplates={"internal/ssv6-vite":{...baseTemplates["react-vite/default-ts"],name:"StoryStore v6 (react-vite/default-ts)",isInternal:!0,modifications:{mainConfig:{features:{storyStoreV7:!1,storyStoreV7MdxErrors:!1}}}},"internal/ssv6-webpack":{...baseTemplates["cra/default-ts"],name:"StoryStore v6 (cra/default-ts)",isInternal:!0,modifications:{mainConfig:{features:{storyStoreV7:!1,storyStoreV7MdxErrors:!1}}}}},allTemplates={...baseTemplates,...internalTemplates},ci=["cra/default-ts","react-vite/default-ts"],pr=[...ci,"angular-cli/default-ts","vue3-vite/default-ts","vue-cli/vue2-default-js","lit-vite/default-ts","svelte-vite/default-ts","svelte-kit/skeleton-ts","nextjs/default-ts"],merged=[...pr,"react-webpack/18-ts","react-webpack/17-ts","angular-cli/14-ts","preact-webpack5/default-ts","preact-vite/default-ts","html-webpack/default","html-vite/default-ts","internal/ssv6-vite","internal/ssv6-webpack"],daily=[...merged,"cra/default-js","react-vite/default-js","vue3-vite/default-js","vue2-vite/2.7-js","vue-cli/default-js","lit-vite/default-js","svelte-kit/skeleton-js","svelte-vite/default-js","nextjs/12-js","nextjs/default-js","qwik-vite/default-ts","preact-webpack5/default-js","preact-vite/default-js","html-vite/default-js"];var logger24=console,toChoices=c=>({title:allTemplates[c].name,value:c}),sandbox=async({output:outputDirectory,filterValue,branch,init})=>{let selectedConfig=allTemplates[filterValue],selectedTemplate=selectedConfig?filterValue:null;if(!selectedConfig){let filterRegex=new RegExp(`^${filterValue||""}`,"i"),keys=Object.keys(allTemplates),choices=keys.reduce((acc,group)=>{let current=allTemplates[group];return(!filterValue||current.name.match(filterRegex)||group.match(filterRegex)||current.expected.builder.match(filterRegex)||current.expected.framework.match(filterRegex)||current.expected.renderer.match(filterRegex))&&acc.push(group),acc},[]);if(choices.length===0&&(logger24.info(boxen3(dedent29`
            🔎 You filtered out all templates. 🔍

            After filtering all the templates with "${chalk26.yellow(filterValue)}", we found no results. Please try again with a different filter.

            Available templates:
            ${keys.map(key=>chalk26.blue`- ${key}`).join(`
`)}
            `.trim(),{borderStyle:"round",padding:1,borderColor:"#F1618C"})),process.exit(1)),choices.length===1?[selectedTemplate]=choices:(logger24.info(boxen3(dedent29`
            🤗 Welcome to ${chalk26.yellow("sb sandbox")}! 🤗

            Create a ${chalk26.green("new project")} to minimally reproduce Storybook issues.

            1. select an environment that most closely matches your project setup.
            2. select a location for the reproduction, outside of your project.

            After the reproduction is ready, we'll guide you through the next steps.
            `.trim(),{borderStyle:"round",padding:1,borderColor:"#F1618C"})),selectedTemplate=await promptSelectedTemplate(choices)),!!!(selectedTemplate??null)){logger24.error("Somehow we got no templates. Please rerun this command!");return}if(selectedConfig=allTemplates[selectedTemplate],!selectedConfig)throw new Error("\u{1F6A8} Sandbox: please specify a valid template type")}let selectedDirectory=outputDirectory,outputDirectoryName=outputDirectory||selectedTemplate;if(selectedDirectory&&existsSync(`${selectedDirectory}`)&&logger24.info(`\u26A0\uFE0F  ${selectedDirectory} already exists! Overwriting...`),!selectedDirectory){let{directory}=await prompts7({type:"text",message:"Enter the output directory",name:"directory",initial:outputDirectoryName,validate:async directoryName=>existsSync(directoryName)?`${directoryName} already exists. Please choose another name.`:!0},{onCancel:()=>{logger24.log("Command cancelled by the user. Exiting..."),process.exit(1)}});selectedDirectory=directory}try{let templateDestination=path8.isAbsolute(selectedDirectory)?selectedDirectory:path8.join(process.cwd(),selectedDirectory);logger24.info(`\u{1F3C3} Adding ${selectedConfig.name} into ${templateDestination}`),logger24.log("\u{1F4E6} Downloading sandbox template...");try{let gitPath=`github:storybookjs/sandboxes/${selectedTemplate}/${init?"after-storybook":"before-storybook"}#${branch}`;if(await downloadTemplate(gitPath,{force:!0,dir:templateDestination}),(await readdir(templateDestination)).length===0)throw new Error(dedent29`Template downloaded from ${chalk26.blue(gitPath)} is empty.
          Are you use it exists? Or did you want to set ${chalk26.yellow(selectedTemplate)} to inDevelopment first?`)}catch(err){throw logger24.error(`\u{1F6A8} Failed to download sandbox template: ${err.message}`),err}let initMessage=init?chalk26.yellow(`yarn install
yarn storybook`):`Recreate your setup, then ${chalk26.yellow("npx storybook@latest init")}`;logger24.info(boxen3(dedent29`
        🎉 Your Storybook reproduction project is ready to use! 🎉

        ${chalk26.yellow(`cd ${selectedDirectory}`)}
        ${initMessage}

        Once you've recreated the problem you're experiencing, please:

        1. Document any additional steps in ${chalk26.cyan("README.md")}
        2. Publish the repository to github
        3. Link to the repro repository in your issue

        Having a clean repro helps us solve your issue faster! 🙏
      `.trim(),{borderStyle:"round",padding:1,borderColor:"#F1618C"}))}catch(error){throw logger24.error("\u{1F6A8} Failed to create sandbox"),error}};async function promptSelectedTemplate(choices){let{template}=await prompts7({type:"select",message:"\u{1F308} Select the template",name:"template",choices:choices.map(toChoices)},{onCancel:()=>{logger24.log("Command cancelled by the user. Exiting..."),process.exit(1)}});return template||null}import fse5 from"fs-extra";import path9 from"path";import{sync as spawnSync3}from"cross-spawn";import{logger as logger25}from"@storybook/node-logger";import shell from"shelljs";import chalk27 from"chalk";var exec=async(command2,options={},{startMessage,errorMessage,dryRun}={})=>{if(startMessage&&logger25.info(startMessage),dryRun){logger25.info(`
> ${command2}
`);return}return logger25.info(command2),new Promise((resolve,reject)=>{let defaultOptions2={silent:!1},child=shell.exec(command2,{...defaultOptions2,...options,async:!0,silent:!1});child.stderr.pipe(process.stderr),child.on("exit",code=>{code===0?resolve(void 0):(logger25.error(chalk27.red(`An error occurred while executing: \`${command2}\``)),logger25.info(errorMessage),reject(new Error(`command exited with code: ${code}: `)))})})},link=async({target,local,start})=>{let storybookDir=process.cwd();try{if((await fse5.readJSON("package.json")).name!=="@storybook/root")throw new Error}catch{throw new Error("Expected to run link from the root of the storybook monorepo")}let reproDir=target,reproName=path9.basename(target);if(!local){let reprosDir=path9.join(storybookDir,"../storybook-repros");logger25.info(`Ensuring directory ${reprosDir}`),await fse5.ensureDir(reprosDir),logger25.info(`Cloning ${target}`),await exec(`git clone ${target}`,{cwd:reprosDir}),reproName=path9.basename(target,path9.extname(target)),reproDir=path9.join(reprosDir,reproName)}let reproPackageJson=await fse5.readJSON(path9.join(reproDir,"package.json")),version=spawnSync3("yarn",["--version"],{cwd:reproDir,stdio:"pipe",shell:!0}).stdout.toString();if(!/^[23]\./.test(version)){logger25.warn(`\u{1F6A8} Expected yarn 2 or 3 in ${reproDir}!`),logger25.warn(""),logger25.warn("Please set it up with `yarn set version berry`,"),logger25.warn(`then link '${reproDir}' with the '--local' flag.`);return}logger25.info(`Linking ${reproDir}`),await exec(`yarn link --all ${storybookDir}`,{cwd:reproDir}),logger25.info(`Installing ${reproName}`),await exec("yarn install",{cwd:reproDir}),reproPackageJson.devDependencies?.vite||await exec("yarn add -D webpack-hot-middleware",{cwd:reproDir}),await exec("yarn add @types/node@16",{cwd:reproDir}),start&&(logger25.info(`Running ${reproName} storybook`),await exec("yarn run storybook",{cwd:reproDir}))};import{dedent as dedent30}from"ts-dedent";import{sync as readUpSync}from"read-pkg-up";import{logger as logger26,instance as npmLog}from"@storybook/node-logger";import{buildDevStandalone,withTelemetry as withTelemetry3}from"@storybook/core-server";import{cache}from"@storybook/core-common";function printError(error){npmLog.heading="",error instanceof Error?error.error?logger26.error(error.error):error.stats&&error.stats.compilation.errors?error.stats.compilation.errors.forEach(e=>logger26.plain(e)):logger26.error(error):error.compilation?.errors&&error.compilation.errors.forEach(e=>logger26.plain(e)),logger26.line(),logger26.warn(error.close?dedent30`
          FATAL broken build!, will close the process,
          Fix the error below and restart storybook.
        `:dedent30`
          Broken build, fix the error above.
          You may need to refresh the browser.
        `),logger26.line()}var dev=async cliOptions=>{process.env.NODE_ENV=process.env.NODE_ENV||"development";let options={...cliOptions,configDir:cliOptions.configDir||"./.storybook",configType:"DEVELOPMENT",ignorePreview:!!cliOptions.previewUrl&&!cliOptions.forceBuildPreview,cache,packageJson:readUpSync({cwd:__dirname}).packageJson};await withTelemetry3("dev",{cliOptions,presetOptions:options,printError},()=>buildDevStandalone(options))};import{sync as readUpSync2}from"read-pkg-up";import{buildStaticStandalone,withTelemetry as withTelemetry4}from"@storybook/core-server";import{cache as cache2}from"@storybook/core-common";var build=async cliOptions=>{let options={...cliOptions,configDir:cliOptions.configDir||"./.storybook",outputDir:cliOptions.outputDir||"./storybook-static",ignorePreview:!!cliOptions.previewUrl&&!cliOptions.forceBuildPreview,configType:"PRODUCTION",cache:cache2,packageJson:readUpSync2({cwd:__dirname}).packageJson};await withTelemetry4("build",{cliOptions,presetOptions:options},()=>buildStaticStandalone(options))};addToGlobalContext("cliVersion",versions_default.storybook);var pkg=readUpSync3({cwd:__dirname}).packageJson,consoleLogger=console,command=name=>program.command(name).option("--disable-telemetry","disable sending telemetry data",process.env.STORYBOOK_DISABLE_TELEMETRY&&process.env.STORYBOOK_DISABLE_TELEMETRY!=="false").option("--debug","Get more logs in debug mode",!1).option("--enable-crash-reports","enable sending crash reports to telemetry data");command("init").description("Initialize Storybook into your project.").option("-f --force","Force add Storybook").option("-s --skip-install","Skip installing deps").option("--package-manager <npm|pnpm|yarn1|yarn2>","Force package manager for installing deps").option("-N --use-npm","Use npm to install deps (deprecated)").option("--use-pnp","Enable pnp mode for Yarn 2+").option("-p --parser <babel | babylon | flow | ts | tsx>","jscodeshift parser").option("-t --type <type>","Add Storybook for a specific project type").option("-y --yes","Answer yes to all prompts").option("-b --builder <webpack5 | vite>","Builder library").option("-l --linkable","Prepare installation for link (contributor helper)").action(options=>{initiate(options,pkg).catch(()=>process.exit(1))});command("add <addon>").description("Add an addon to your Storybook").option("--package-manager <npm|pnpm|yarn1|yarn2>","Force package manager for installing dependencies").option("-N --use-npm","Use NPM to install dependencies (deprecated)").option("-s --skip-postinstall","Skip package specific postinstall config modifications").action((addonName,options)=>add(addonName,options));command("babelrc").description("generate the default storybook babel config into your current working directory").action(()=>generateStorybookBabelConfigInCWD());command("upgrade").description("Upgrade your Storybook packages to the latest").option("--package-manager <npm|pnpm|yarn1|yarn2>","Force package manager for installing dependencies").option("-N --use-npm","Use NPM to install dependencies (deprecated)").option("-y --yes","Skip prompting the user").option("-n --dry-run","Only check for upgrades, do not install").option("-t --tag <tag>","Upgrade to a certain npm dist-tag (e.g. next, prerelease)").option("-p --prerelease","Upgrade to the pre-release packages").option("-s --skip-check","Skip postinstall version and automigration checks").option("-c, --config-dir <dir-name>","Directory where to load Storybook configurations from").action(async options=>upgrade(options).catch(()=>process.exit(1)));command("info").description("Prints debugging information about the local environment").action(()=>{consoleLogger.log(chalk28.bold(`
Environment Info:`)),envinfo.run({System:["OS","CPU"],Binaries:["Node","Yarn","npm"],Browsers:["Chrome","Edge","Firefox","Safari"],npmPackages:"@storybook/*",npmGlobalPackages:"@storybook/*"}).then(consoleLogger.log)});command("migrate [migration]").description("Run a Storybook codemod migration on your source files").option("-l --list","List available migrations").option("-g --glob <glob>","Glob for files upon which to apply the migration","**/*.js").option("-p --parser <babel | babylon | flow | ts | tsx>","jscodeshift parser").option("-n --dry-run","Dry run: verify the migration exists and show the files to which it will be applied").option("-r --rename <from-to>",'Rename suffix of matching files after codemod has been applied, e.g. ".js:.ts"').action((migration,{configDir,glob,dryRun,list,rename,parser})=>{migrate(migration,{configDir,glob,dryRun,list,rename,parser,logger:consoleLogger}).catch(err=>{logger27.error(err),process.exit(1)})});command("extract [location] [output]").description("extract stories.json from a built version").action((location="storybook-static",output=path10.join(location,"stories.json"))=>extract(location,output).catch(e=>{logger27.error(e),process.exit(1)}));command("sandbox [filterValue]").alias("repro").description("Create a sandbox from a set of possible templates").option("-o --output <outDir>","Define an output directory").option("-b --branch <branch>","Define the branch to download from","main").option("--no-init","Whether to download a template without an initialized Storybook",!1).action((filterValue,options)=>sandbox({filterValue,...options}).catch(e=>{logger27.error(e),process.exit(1)}));command("link <repo-url-or-directory>").description("Pull down a repro from a URL (or a local directory), link it, and run storybook").option("--local","Link a local directory already in your file system").option("--no-start","Start the storybook",!0).action((target,{local,start})=>link({target,local,start}).catch(e=>{logger27.error(e),process.exit(1)}));command("automigrate [fixId]").description("Check storybook for known problems or migrations and apply fixes").option("-y --yes","Skip prompting the user").option("-n --dry-run","Only check for fixes, do not actually run them").option("--package-manager <npm|pnpm|yarn1|yarn2>","Force package manager").option("-N --use-npm","Use npm as package manager (deprecated)").option("-l --list","List available migrations").option("-c, --config-dir <dir-name>","Directory of Storybook configurations to migrate").option("-s --skip-install","Skip installing deps").option("--renderer <renderer-pkg-name>","The renderer package for the framework Storybook is using.").action(async(fixId,options)=>{await automigrate({fixId,...options}).catch(e=>{logger27.error(e),process.exit(1)})});command("dev").option("-p, --port <number>","Port to run Storybook",str=>parseInt(str,10)).option("-h, --host <string>","Host to run Storybook").option("-s, --static-dir <dir-names>","Directory where to load static files from",parseList).option("-c, --config-dir <dir-name>","Directory where to load Storybook configurations from").option("--https","Serve Storybook over HTTPS. Note: You must provide your own certificate information.").option("--ssl-ca <ca>","Provide an SSL certificate authority. (Optional with --https, required if using a self-signed certificate)",parseList).option("--ssl-cert <cert>","Provide an SSL certificate. (Required with --https)").option("--ssl-key <key>","Provide an SSL key. (Required with --https)").option("--smoke-test","Exit after successful start").option("--ci","CI mode (skip interactive prompts, don't open browser)").option("--no-open","Do not open Storybook automatically in the browser").option("--loglevel <level>","Control level of logging during build").option("--quiet","Suppress verbose build output").option("--no-version-updates","Suppress update check",!0).option("--no-release-notes","Suppress automatic redirects to the release notes after upgrading",!0).option("--debug-webpack","Display final webpack configurations for debugging purposes").option("--webpack-stats-json [directory]","Write Webpack Stats JSON to disk").option("--preview-url <string>","Disables the default storybook preview and lets your use your own").option("--force-build-preview","Build the preview iframe even if you are using --preview-url").option("--docs","Build a documentation-only site using addon-docs").action(async options=>{logger27.setLevel(program.loglevel),consoleLogger.log(chalk28.bold(`${pkg.name} v${pkg.version}`)+chalk28.reset(`
`)),getEnvConfig(options,{port:"SBCONFIG_PORT",host:"SBCONFIG_HOSTNAME",staticDir:"SBCONFIG_STATIC_DIR",configDir:"SBCONFIG_CONFIG_DIR",ci:"CI"}),parseInt(`${options.port}`,10)&&(options.port=parseInt(`${options.port}`,10)),await dev({...options,packageJson:pkg}).catch(()=>process.exit(1))});command("build").option("-s, --static-dir <dir-names>","Directory where to load static files from",parseList).option("-o, --output-dir <dir-name>","Directory where to store built files").option("-c, --config-dir <dir-name>","Directory where to load Storybook configurations from").option("--quiet","Suppress verbose build output").option("--loglevel <level>","Control level of logging during build").option("--debug-webpack","Display final webpack configurations for debugging purposes").option("--webpack-stats-json [directory]","Write Webpack Stats JSON to disk").option("--preview-url <string>","Disables the default storybook preview and lets your use your own").option("--force-build-preview","Build the preview iframe even if you are using --preview-url").option("--docs","Build a documentation-only site using addon-docs").action(async options=>{process.env.NODE_ENV=process.env.NODE_ENV||"production",logger27.setLevel(program.loglevel),consoleLogger.log(chalk28.bold(`${pkg.name} v${pkg.version}
`)),getEnvConfig(options,{staticDir:"SBCONFIG_STATIC_DIR",outputDir:"SBCONFIG_OUTPUT_DIR",configDir:"SBCONFIG_CONFIG_DIR"}),await build({...options,packageJson:pkg}).catch(()=>process.exit(1))});program.on("command:*",([invalidCmd])=>{consoleLogger.error(` Invalid command: %s.
 See --help for a list of available commands.`,invalidCmd);let suggestion=program.commands.map(cmd=>cmd._name).find(cmd=>leven(cmd,invalidCmd)<3);suggestion&&consoleLogger.info(`
 Did you mean ${suggestion}?`),process.exit(1)});program.usage("<command> [options]").version(pkg.version).parse(process.argv);
