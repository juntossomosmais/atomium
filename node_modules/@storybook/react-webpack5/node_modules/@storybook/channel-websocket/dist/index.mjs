import{global}from"@storybook/global";import{Channel}from"@storybook/channels";import{logger}from"@storybook/client-logger";import{isJSON,parse,stringify}from"telejson";var{WebSocket}=global,WebsocketTransport=class{constructor({url,onError}){this.buffer=[];this.isReady=!1;this.connect(url,onError)}setHandler(handler){this.handler=handler}send(event){this.isReady?this.sendNow(event):this.sendLater(event)}sendLater(event){this.buffer.push(event)}sendNow(event){let data=stringify(event,{maxDepth:15,allowFunction:!0});this.socket.send(data)}flush(){let{buffer}=this;this.buffer=[],buffer.forEach(event=>this.send(event))}connect(url,onError){this.socket=new WebSocket(url),this.socket.onopen=()=>{this.isReady=!0,this.flush()},this.socket.onmessage=({data})=>{let event=typeof data=="string"&&isJSON(data)?parse(data):data;this.handler(event)},this.socket.onerror=e=>{onError&&onError(e)}}};function createChannel({url,async=!1,onError=err=>logger.warn(err)}){let transport=new WebsocketTransport({url,onError});return new Channel({transport,async})}var src_default=createChannel;export{WebsocketTransport,createChannel,src_default as default};
