"use strict";var __create=Object.create;var __defProp=Object.defineProperty;var __getOwnPropDesc=Object.getOwnPropertyDescriptor;var __getOwnPropNames=Object.getOwnPropertyNames;var __getProtoOf=Object.getPrototypeOf,__hasOwnProp=Object.prototype.hasOwnProperty;var __export=(target,all)=>{for(var name in all)__defProp(target,name,{get:all[name],enumerable:!0})},__copyProps=(to,from,except,desc)=>{if(from&&typeof from=="object"||typeof from=="function")for(let key of __getOwnPropNames(from))!__hasOwnProp.call(to,key)&&key!==except&&__defProp(to,key,{get:()=>from[key],enumerable:!(desc=__getOwnPropDesc(from,key))||desc.enumerable});return to};var __toESM=(mod,isNodeMode,target)=>(target=mod!=null?__create(__getProtoOf(mod)):{},__copyProps(isNodeMode||!mod||!mod.__esModule?__defProp(target,"default",{value:mod,enumerable:!0}):target,mod)),__toCommonJS=mod=>__copyProps(__defProp({},"__esModule",{value:!0}),mod);var src_exports={};__export(src_exports,{colors:()=>colors,deprecate:()=>deprecate,instance:()=>import_npmlog.default,logger:()=>logger,once:()=>once});module.exports=__toCommonJS(src_exports);var import_npmlog=__toESM(require("npmlog")),import_pretty_hrtime=__toESM(require("pretty-hrtime")),import_chalk=__toESM(require("chalk"));import_npmlog.default.stream=process.stdout;var colors={pink:import_chalk.default.hex("F1618C"),purple:import_chalk.default.hex("B57EE5"),orange:import_chalk.default.hex("F3AD38"),green:import_chalk.default.hex("A2E05E"),blue:import_chalk.default.hex("6DABF5"),red:import_chalk.default.hex("F16161"),gray:import_chalk.default.gray},logger={verbose:message=>import_npmlog.default.verbose("",message),info:message=>import_npmlog.default.info("",message),plain:message=>console.log(message),line:(count=1)=>console.log(`${Array(count-1).fill(`
`)}`),warn:message=>import_npmlog.default.warn("",message),error:message=>import_npmlog.default.error("",message),trace:({message,time})=>import_npmlog.default.info("",`${message} (${colors.purple((0,import_pretty_hrtime.default)(time))})`),setLevel:(level="info")=>{import_npmlog.default.level=level}};var logged=new Set,once=type=>message=>{if(!logged.has(message))return logged.add(message),logger[type](message)};once.clear=()=>logged.clear();once.verbose=once("verbose");once.info=once("info");once.warn=once("warn");once.error=once("error");var deprecate=once("warn");0&&(module.exports={colors,deprecate,instance,logger,once});
