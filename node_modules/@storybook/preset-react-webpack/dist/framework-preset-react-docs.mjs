import{__require}from"./chunk-R4NKYYJA.mjs";import ReactDocgenTypescriptPlugin from"@storybook/react-docgen-typescript-plugin";import{hasDocsOrControls}from"@storybook/docs-tools";var babel=async(config,options)=>{if(!hasDocsOrControls(options))return config;let typescriptOptions=await options.presets.apply("typescript",{}),{reactDocgen}=typescriptOptions||{};return typeof reactDocgen!="string"?config:{...config,overrides:[...config?.overrides||[],{test:reactDocgen==="react-docgen"?/\.(cjs|mjs|tsx?|jsx?)$/:/\.(cjs|mjs|jsx?)$/,plugins:[[__require.resolve("babel-plugin-react-docgen")]]}]}},webpackFinal=async(config,options)=>{if(!hasDocsOrControls(options))return config;let typescriptOptions=await options.presets.apply("typescript",{}),{reactDocgen,reactDocgenTypescriptOptions}=typescriptOptions||{};return reactDocgen!=="react-docgen-typescript"?config:{...config,plugins:[...config.plugins||[],new ReactDocgenTypescriptPlugin({...reactDocgenTypescriptOptions,savePropValueAsString:!0})]}};export{babel,webpackFinal};
