import{__require}from"./chunk-R4NKYYJA.mjs";import{dirname,join}from"path";import ReactRefreshWebpackPlugin from"@pmmmwh/react-refresh-webpack-plugin";import{logger}from"@storybook/node-logger";var wrapForPnP=input=>dirname(__require.resolve(join(input,"package.json"))),applyFastRefresh=async options=>{let isDevelopment=options.configType==="DEVELOPMENT",framework=await options.presets.apply("framework"),reactOptions=typeof framework=="object"?framework.options:{};return isDevelopment&&(reactOptions.fastRefresh||process.env.FAST_REFRESH==="true")},babel=async(config,options)=>await applyFastRefresh(options)?{...config,plugins:[[__require.resolve("react-refresh/babel"),{},"storybook-react-refresh"],...config.plugins||[]]}:config,storybookReactDirName=wrapForPnP("@storybook/preset-react-webpack"),context=storybookReactDirName.includes("node_modules")?join(storybookReactDirName,"../../"):join(storybookReactDirName,"../../node_modules"),hasJsxRuntime=()=>{try{return __require.resolve("react/jsx-runtime",{paths:[context]}),!0}catch{return!1}},babelDefault=async config=>{let presetReactOptions=hasJsxRuntime()?{runtime:"automatic"}:{};return{...config,presets:[...config?.presets||[],[__require.resolve("@babel/preset-react"),presetReactOptions]],plugins:[...config?.plugins||[],__require.resolve("babel-plugin-add-react-displayname")]}},webpackFinal=async(config,options)=>await applyFastRefresh(options)?config.plugins?.find(p=>p.constructor.name==="ReactRefreshPlugin")?(logger.warn("=> React refresh is already set. You don't need to set the option"),config):(logger.info("=> Using React fast refresh"),{...config,plugins:[...config.plugins||[],new ReactRefreshWebpackPlugin({overlay:{sockIntegration:"whm"}})]}):config;export{babel,babelDefault,webpackFinal};
