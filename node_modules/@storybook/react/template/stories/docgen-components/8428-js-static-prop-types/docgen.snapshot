// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`react component properties 8428-js-static-prop-types 1`] = `
"function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, \\"string\\"); return typeof key === \\"symbol\\" ? key : String(key); }
function _toPrimitive(input, hint) { if (typeof input !== \\"object\\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \\"default\\"); if (typeof res !== \\"object\\") return res; throw new TypeError(\\"@@toPrimitive must return a primitive value.\\"); } return (hint === \\"string\\" ? String : Number)(input); }
/* eslint-disable react/no-unused-prop-types */
/* eslint-disable react/require-default-props */
import React from 'react';
import PropTypes from 'prop-types';

// eslint-disable-next-line react/prefer-stateless-function
export default class Test extends React.Component {
  render() {
    return /*#__PURE__*/React.createElement(\\"div\\", null, \\"test\\");
  }
}
_defineProperty(Test, \\"propTypes\\", {
  /**
   * Please work...
   */
  test: PropTypes.string
});
export const component = Test;
Test.__docgenInfo = {
  \\"description\\": \\"\\",
  \\"methods\\": [],
  \\"displayName\\": \\"Test\\",
  \\"props\\": {
    \\"test\\": {
      \\"description\\": \\"Please work...\\",
      \\"type\\": {
        \\"name\\": \\"string\\"
      },
      \\"required\\": false
    }
  }
};"
`;
