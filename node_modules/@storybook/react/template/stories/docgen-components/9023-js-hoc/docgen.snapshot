// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`react component properties 9023-js-hoc 1`] = `
"/* eslint-disable react/require-default-props */
/* eslint-disable react/forbid-prop-types */
/* eslint-disable react/no-unused-prop-types */
/* eslint-disable react/prefer-stateless-function */
import React from 'react';
import PropTypes from 'prop-types';

// deepscan-disable-next-line
const withStyles = themeFn => Comp => Comp;
class Alert extends React.Component {
  render() {
    return /*#__PURE__*/React.createElement(React.Fragment, null, \\"Alert\\");
  }
}
Alert.propTypes = {
  variant: PropTypes.string,
  dismissible: PropTypes.bool,
  icon: PropTypes.elementType,
  classes: PropTypes.object.isRequired
};
Alert.defaultProps = {
  variant: 'primary',
  dismissible: false
};
const StyledAlert = withStyles(theme => ({
  alert: props => ({
    backgroundColor: theme.palette[props.variant].main
  }),
  message: {
    display: 'flex',
    alignItems: 'center'
  },
  icon: {
    marginRight: theme.spacing(2)
  }
}))(Alert);
export const component = StyledAlert;
Alert.__docgenInfo = {
  \\"description\\": \\"\\",
  \\"methods\\": [],
  \\"displayName\\": \\"Alert\\",
  \\"props\\": {
    \\"variant\\": {
      \\"defaultValue\\": {
        \\"value\\": \\"'primary'\\",
        \\"computed\\": false
      },
      \\"description\\": \\"\\",
      \\"type\\": {
        \\"name\\": \\"string\\"
      },
      \\"required\\": false
    },
    \\"dismissible\\": {
      \\"defaultValue\\": {
        \\"value\\": \\"false\\",
        \\"computed\\": false
      },
      \\"description\\": \\"\\",
      \\"type\\": {
        \\"name\\": \\"bool\\"
      },
      \\"required\\": false
    },
    \\"icon\\": {
      \\"description\\": \\"\\",
      \\"type\\": {
        \\"name\\": \\"elementType\\"
      },
      \\"required\\": false
    },
    \\"classes\\": {
      \\"description\\": \\"\\",
      \\"type\\": {
        \\"name\\": \\"object\\"
      },
      \\"required\\": true
    }
  }
};"
`;
