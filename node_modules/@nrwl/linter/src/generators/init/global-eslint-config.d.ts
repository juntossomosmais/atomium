import { ESLint, Linter as LinterType } from 'eslint';
/**
 * This configuration is intended to apply to all TypeScript source files.
 * See the eslint-plugin-nx package for what is in the referenced shareable config.
 */
export declare const globalTypeScriptOverrides: {
    files: string[];
    extends: string[];
    /**
     * Having an empty rules object present makes it more obvious to the user where they would
     * extend things from if they needed to
     */
    rules: {};
};
/**
 * This configuration is intended to apply to all JavaScript source files.
 * See the eslint-plugin-nx package for what is in the referenced shareable config.
 */
export declare const globalJavaScriptOverrides: {
    files: string[];
    extends: string[];
    /**
     * Having an empty rules object present makes it more obvious to the user where they would
     * extend things from if they needed to
     */
    rules: {};
};
/**
 * This configuration is intended to apply to all "source code" (but not
 * markup like HTML, or other custom file types like GraphQL)
 */
export declare const moduleBoundariesOverride: {
    files: string[];
    rules: LinterType.RulesRecord;
};
export declare const getGlobalEsLintConfiguration: (unitTestRunner?: string, rootProject?: boolean) => ESLint.ConfigData<LinterType.RulesRecord>;
