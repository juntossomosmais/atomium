{"file":"ion-spinner.entry.js","mappings":";;;;;AAAA,MAAM,UAAU,GAAG,2zEAA2zE;;MCQj0E,OAAO;EAClB;;IACE,IAAI,CAAC,KAAK,GAAG,SAAS,CAAC;IACvB,IAAI,CAAC,QAAQ,GAAG,SAAS,CAAC;IAC1B,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC;IACtB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;GACrB;EACD,OAAO;IACL,MAAM,WAAW,GAAG,IAAI,CAAC,IAAI,IAAI,MAAM,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;IACvD,MAAM,IAAI,GAAG,UAAU,CAAC,IAAI,CAAC,CAAC;IAC9B,IAAI,WAAW,EAAE;MACf,OAAO,WAAW,CAAC;KACpB;IACD,OAAO,IAAI,KAAK,KAAK,GAAG,OAAO,GAAG,UAAU,CAAC;GAC9C;EACD,MAAM;IACJ,IAAI,EAAE,CAAC;IACP,MAAM,IAAI,GAAG,IAAI,CAAC;IAClB,MAAM,IAAI,GAAG,UAAU,CAAC,IAAI,CAAC,CAAC;IAC9B,MAAM,WAAW,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;IACnC,MAAM,OAAO,GAAG,CAAC,EAAE,GAAG,QAAQ,CAAC,WAAW,CAAC,MAAM,IAAI,IAAI,EAAE,KAAK,KAAK,CAAC,GAAG,EAAE,GAAG,QAAQ,CAAC,OAAO,CAAC,CAAC;IAChG,MAAM,QAAQ,GAAG,OAAO,IAAI,CAAC,QAAQ,KAAK,QAAQ,IAAI,IAAI,CAAC,QAAQ,GAAG,EAAE,GAAG,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,GAAG,CAAC;IACvG,MAAM,IAAI,GAAG,EAAE,CAAC;IAChB,IAAI,OAAO,CAAC,OAAO,KAAK,SAAS,EAAE;MACjC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,OAAO,EAAE,CAAC,EAAE,EAAE;QACxC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,QAAQ,EAAE,CAAC,EAAE,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;OAC/D;KACF;SACI,IAAI,OAAO,CAAC,KAAK,KAAK,SAAS,EAAE;MACpC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,KAAK,EAAE,CAAC,EAAE,EAAE;QACtC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,QAAQ,EAAE,CAAC,EAAE,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC;OAC3D;KACF;IACD,QAAQ,CAAC,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,kBAAkB,CAAC,IAAI,CAAC,KAAK,EAAE;QACpD,CAAC,IAAI,GAAG,IAAI;QACZ,CAAC,WAAW,WAAW,EAAE,GAAG,IAAI;QAChC,gBAAgB,EAAE,IAAI,CAAC,MAAM,IAAI,MAAM,CAAC,UAAU,CAAC,UAAU,CAAC;OAC/D,CAAC,EAAE,IAAI,EAAE,aAAa,EAAE,KAAK,EAAE,OAAO,CAAC,WAAW,GAAG,EAAE,iBAAiB,EAAE,QAAQ,GAAG,IAAI,EAAE,GAAG,EAAE,EAAE,EAAE,IAAI,CAAC,EAAE;GAC/G;;AAiGH,MAAM,WAAW,GAAG,CAAC,OAAO,EAAE,QAAQ,EAAE,KAAK,EAAE,KAAK;EAClD,MAAM,IAAI,GAAG,OAAO,CAAC,EAAE,CAAC,QAAQ,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;EAChD,IAAI,CAAC,KAAK,CAAC,oBAAoB,CAAC,GAAG,QAAQ,GAAG,IAAI,CAAC;EACnD,QAAQ,CAAC,CAAC,KAAK,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,IAAI,WAAW,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,QAAQ,EAAE,EAAE,SAAS,EAAE,IAAI,CAAC,SAAS,IAAI,kBAAkB,EAAE,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,KAAK,EAAE,OAAO,CAAC,WAAW,GAAG,EAAE,iBAAiB,EAAE,QAAQ,GAAG,IAAI,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC,EAAE;AAClQ,CAAC,CAAC;AACF,MAAM,SAAS,GAAG,CAAC,OAAO,EAAE,QAAQ,EAAE,KAAK,EAAE,KAAK;EAChD,MAAM,IAAI,GAAG,OAAO,CAAC,EAAE,CAAC,QAAQ,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;EAChD,IAAI,CAAC,KAAK,CAAC,oBAAoB,CAAC,GAAG,QAAQ,GAAG,IAAI,CAAC;EACnD,QAAQ,CAAC,CAAC,KAAK,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,IAAI,WAAW,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,MAAM,EAAE,EAAE,SAAS,EAAE,kBAAkB,EAAE,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE;AACzJ,CAAC,CAAC;;;;;","names":[],"sources":["../../node_modules/@ionic/core/dist/collection/components/spinner/spinner.css?tag=ion-spinner&encapsulation=shadow","../../node_modules/@ionic/core/dist/collection/components/spinner/spinner.js"],"sourcesContent":[":host {\n  /**\n   * @prop --color: Color of the spinner\n   */\n  display: inline-block;\n  position: relative;\n  width: 28px;\n  height: 28px;\n  color: var(--color);\n  user-select: none;\n}\n\n:host(.ion-color) {\n  color: var(--ion-color-base);\n}\n\nsvg {\n  transform-origin: center;\n  position: absolute;\n  /**\n   * Do not use @include position\n   * as the alignment of the elements with\n   * a spinner should not be RTL aware.\n   */\n  top: 0;\n  /* stylelint-disable-next-line property-disallowed-list */\n  left: 0;\n  width: 100%;\n  height: 100%;\n  transform: translateZ(0);\n}\n[dir=rtl] svg, :host-context([dir=rtl]) svg {\n  transform-origin: calc(100% - center);\n}\n\n:host(.spinner-lines) line,\n:host(.spinner-lines-small) line {\n  stroke-width: 7px;\n}\n\n:host(.spinner-lines-sharp) line,\n:host(.spinner-lines-sharp-small) line {\n  stroke-width: 4px;\n}\n\n:host(.spinner-lines) line,\n:host(.spinner-lines-small) line,\n:host(.spinner-lines-sharp) line,\n:host(.spinner-lines-sharp-small) line {\n  stroke-linecap: round;\n  stroke: currentColor;\n}\n\n:host(.spinner-lines) svg,\n:host(.spinner-lines-small) svg,\n:host(.spinner-lines-sharp) svg,\n:host(.spinner-lines-sharp-small) svg {\n  animation: spinner-fade-out 1s linear infinite;\n}\n\n:host(.spinner-bubbles) svg {\n  animation: spinner-scale-out 1s linear infinite;\n  fill: currentColor;\n}\n\n:host(.spinner-circles) svg {\n  animation: spinner-fade-out 1s linear infinite;\n  fill: currentColor;\n}\n\n:host(.spinner-crescent) circle {\n  fill: transparent;\n  stroke-width: 4px;\n  stroke-dasharray: 128px;\n  stroke-dashoffset: 82px;\n  stroke: currentColor;\n}\n\n:host(.spinner-crescent) svg {\n  animation: spinner-rotate 1s linear infinite;\n}\n\n:host(.spinner-dots) circle {\n  stroke-width: 0;\n  fill: currentColor;\n}\n\n:host(.spinner-dots) svg {\n  animation: spinner-dots 1s linear infinite;\n}\n\n:host(.spinner-circular) svg {\n  animation: spinner-circular linear infinite;\n}\n\n:host(.spinner-circular) circle {\n  animation: spinner-circular-inner ease-in-out infinite;\n  stroke: currentColor;\n  stroke-dasharray: 80px, 200px;\n  stroke-dashoffset: 0px;\n  stroke-width: 5.6;\n  fill: none;\n}\n\n:host(.spinner-paused),\n:host(.spinner-paused) svg,\n:host(.spinner-paused) circle {\n  animation-play-state: paused;\n}\n\n@keyframes spinner-fade-out {\n  0% {\n    opacity: 1;\n  }\n  100% {\n    opacity: 0;\n  }\n}\n@keyframes spinner-scale-out {\n  0% {\n    transform: scale(1, 1);\n  }\n  100% {\n    transform: scale(0, 0);\n  }\n}\n@keyframes spinner-rotate {\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n}\n@keyframes spinner-dots {\n  0% {\n    transform: scale(1, 1);\n    opacity: 0.9;\n  }\n  50% {\n    transform: scale(0.4, 0.4);\n    opacity: 0.3;\n  }\n  100% {\n    transform: scale(1, 1);\n    opacity: 0.9;\n  }\n}\n@keyframes spinner-circular {\n  100% {\n    transform: rotate(360deg);\n  }\n}\n@keyframes spinner-circular-inner {\n  0% {\n    stroke-dasharray: 1px, 200px;\n    stroke-dashoffset: 0px;\n  }\n  50% {\n    stroke-dasharray: 100px, 200px;\n    stroke-dashoffset: -15px;\n  }\n  100% {\n    stroke-dasharray: 100px, 200px;\n    stroke-dashoffset: -125px;\n  }\n}","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { Host, h } from '@stencil/core';\nimport { config } from '../../global/config';\nimport { getIonMode } from '../../global/ionic-global';\nimport { createColorClasses } from '../../utils/theme';\nimport { SPINNERS } from './spinner-configs';\nexport class Spinner {\n  constructor() {\n    this.color = undefined;\n    this.duration = undefined;\n    this.name = undefined;\n    this.paused = false;\n  }\n  getName() {\n    const spinnerName = this.name || config.get('spinner');\n    const mode = getIonMode(this);\n    if (spinnerName) {\n      return spinnerName;\n    }\n    return mode === 'ios' ? 'lines' : 'circular';\n  }\n  render() {\n    var _a;\n    const self = this;\n    const mode = getIonMode(self);\n    const spinnerName = self.getName();\n    const spinner = (_a = SPINNERS[spinnerName]) !== null && _a !== void 0 ? _a : SPINNERS['lines'];\n    const duration = typeof self.duration === 'number' && self.duration > 10 ? self.duration : spinner.dur;\n    const svgs = []; // TODO(FW-2832): type\n    if (spinner.circles !== undefined) {\n      for (let i = 0; i < spinner.circles; i++) {\n        svgs.push(buildCircle(spinner, duration, i, spinner.circles));\n      }\n    }\n    else if (spinner.lines !== undefined) {\n      for (let i = 0; i < spinner.lines; i++) {\n        svgs.push(buildLine(spinner, duration, i, spinner.lines));\n      }\n    }\n    return (h(Host, { class: createColorClasses(self.color, {\n        [mode]: true,\n        [`spinner-${spinnerName}`]: true,\n        'spinner-paused': self.paused || config.getBoolean('_testing'),\n      }), role: \"progressbar\", style: spinner.elmDuration ? { animationDuration: duration + 'ms' } : {} }, svgs));\n  }\n  static get is() { return \"ion-spinner\"; }\n  static get encapsulation() { return \"shadow\"; }\n  static get originalStyleUrls() {\n    return {\n      \"$\": [\"spinner.scss\"]\n    };\n  }\n  static get styleUrls() {\n    return {\n      \"$\": [\"spinner.css\"]\n    };\n  }\n  static get properties() {\n    return {\n      \"color\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"Color\",\n          \"resolved\": \"\\\"danger\\\" | \\\"dark\\\" | \\\"light\\\" | \\\"medium\\\" | \\\"primary\\\" | \\\"secondary\\\" | \\\"success\\\" | \\\"tertiary\\\" | \\\"warning\\\" | string & Record<never, never> | undefined\",\n          \"references\": {\n            \"Color\": {\n              \"location\": \"import\",\n              \"path\": \"../../interface\"\n            }\n          }\n        },\n        \"required\": false,\n        \"optional\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"The color to use from your application's color palette.\\nDefault options are: `\\\"primary\\\"`, `\\\"secondary\\\"`, `\\\"tertiary\\\"`, `\\\"success\\\"`, `\\\"warning\\\"`, `\\\"danger\\\"`, `\\\"light\\\"`, `\\\"medium\\\"`, and `\\\"dark\\\"`.\\nFor more information on colors, see [theming](/docs/theming/basics).\"\n        },\n        \"attribute\": \"color\",\n        \"reflect\": true\n      },\n      \"duration\": {\n        \"type\": \"number\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"number\",\n          \"resolved\": \"number | undefined\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Duration of the spinner animation in milliseconds. The default varies based on the spinner.\"\n        },\n        \"attribute\": \"duration\",\n        \"reflect\": false\n      },\n      \"name\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"SpinnerTypes\",\n          \"resolved\": \"\\\"bubbles\\\" | \\\"circles\\\" | \\\"circular\\\" | \\\"crescent\\\" | \\\"dots\\\" | \\\"lines\\\" | \\\"lines-sharp\\\" | \\\"lines-sharp-small\\\" | \\\"lines-small\\\" | undefined\",\n          \"references\": {\n            \"SpinnerTypes\": {\n              \"location\": \"import\",\n              \"path\": \"./spinner-configs\"\n            }\n          }\n        },\n        \"required\": false,\n        \"optional\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"The name of the SVG spinner to use. If a name is not provided, the platform's default\\nspinner will be used.\"\n        },\n        \"attribute\": \"name\",\n        \"reflect\": false\n      },\n      \"paused\": {\n        \"type\": \"boolean\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"boolean\",\n          \"resolved\": \"boolean\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"If `true`, the spinner's animation will be paused.\"\n        },\n        \"attribute\": \"paused\",\n        \"reflect\": false,\n        \"defaultValue\": \"false\"\n      }\n    };\n  }\n}\nconst buildCircle = (spinner, duration, index, total) => {\n  const data = spinner.fn(duration, index, total);\n  data.style['animation-duration'] = duration + 'ms';\n  return (h(\"svg\", { viewBox: data.viewBox || '0 0 64 64', style: data.style }, h(\"circle\", { transform: data.transform || 'translate(32,32)', cx: data.cx, cy: data.cy, r: data.r, style: spinner.elmDuration ? { animationDuration: duration + 'ms' } : {} })));\n};\nconst buildLine = (spinner, duration, index, total) => {\n  const data = spinner.fn(duration, index, total);\n  data.style['animation-duration'] = duration + 'ms';\n  return (h(\"svg\", { viewBox: data.viewBox || '0 0 64 64', style: data.style }, h(\"line\", { transform: \"translate(32,32)\", y1: data.y1, y2: data.y2 })));\n};\n"],"version":3}