{"version":3,"names":["getCounterText","value","maxLength","counterFormatter","valueLength","toString","length","defaultCounterText","defaultCounterFormatter","undefined","e","printIonError","maxlength"],"sources":["../../node_modules/@ionic/core/dist/collection/components/input/input.utils.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { printIonError } from '../../utils/logging';\nexport const getCounterText = (value, maxLength, counterFormatter) => {\n  const valueLength = value == null ? 0 : value.toString().length;\n  const defaultCounterText = defaultCounterFormatter(valueLength, maxLength);\n  /**\n   * If developers did not pass a custom formatter,\n   * use the default one.\n   */\n  if (counterFormatter === undefined) {\n    return defaultCounterText;\n  }\n  /**\n   * Otherwise, try to use the custom formatter\n   * and fallback to the default formatter if\n   * there was an error.\n   */\n  try {\n    return counterFormatter(valueLength, maxLength);\n  }\n  catch (e) {\n    printIonError('Exception in provided `counterFormatter`.', e);\n    return defaultCounterText;\n  }\n};\nconst defaultCounterFormatter = (length, maxlength) => {\n  return `${length} / ${maxlength}`;\n};\n"],"mappings":";;;GAIY,MAACA,EAAiB,CAACC,EAAOC,EAAWC,KAC/C,MAAMC,EAAcH,GAAS,KAAO,EAAIA,EAAMI,WAAWC,OACzD,MAAMC,EAAqBC,EAAwBJ,EAAaF,GAKhE,GAAIC,IAAqBM,UAAW,CAClC,OAAOF,CACX,CAME,IACE,OAAOJ,EAAiBC,EAAaF,EACzC,CACE,MAAOQ,GACLC,EAAc,4CAA6CD,GAC3D,OAAOH,CACX,GAEA,MAAMC,EAA0B,CAACF,EAAQM,IAChC,GAAGN,OAAYM,W"}