{"file":"ion-accordion-group.entry.js","mappings":"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","names":[],"sources":["../../node_modules/@ionic/core/dist/collection/components/accordion-group/accordion-group.ios.css?tag=ion-accordion-group&mode=ios&encapsulation=shadow","../../node_modules/@ionic/core/dist/collection/components/accordion-group/accordion-group.md.css?tag=ion-accordion-group&mode=md&encapsulation=shadow","../../node_modules/@ionic/core/dist/collection/components/accordion-group/accordion-group.js"],"sourcesContent":[":host {\n  display: block;\n}\n\n:host(.accordion-group-expand-inset) {\n  -webkit-margin-start: 16px;\n  margin-inline-start: 16px;\n  -webkit-margin-end: 16px;\n  margin-inline-end: 16px;\n  margin-top: 16px;\n  margin-bottom: 16px;\n}\n\n:host(.accordion-group-expand-inset) ::slotted(ion-accordion.accordion-expanding),\n:host(.accordion-group-expand-inset) ::slotted(ion-accordion.accordion-expanded) {\n  border-bottom: none;\n}",":host {\n  display: block;\n}\n\n:host(.accordion-group-expand-inset) {\n  -webkit-margin-start: 16px;\n  margin-inline-start: 16px;\n  -webkit-margin-end: 16px;\n  margin-inline-end: 16px;\n  margin-top: 16px;\n  margin-bottom: 16px;\n}\n\n:host(.accordion-group-expand-inset) ::slotted(ion-accordion) {\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n}\n\n:host(.accordion-group-expand-inset) ::slotted(ion-accordion.accordion-expanding),\n:host(.accordion-group-expand-inset) ::slotted(ion-accordion.accordion-expanded) {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 16px;\n  margin-bottom: 16px;\n  border-radius: 6px;\n}\n\n:host(.accordion-group-expand-inset) ::slotted(ion-accordion.accordion-previous) {\n  border-bottom-right-radius: 6px;\n  border-bottom-left-radius: 6px;\n}\n:host-context([dir=rtl]):host(.accordion-group-expand-inset) ::slotted(ion-accordion.accordion-previous), :host-context([dir=rtl]).accordion-group-expand-inset ::slotted(ion-accordion.accordion-previous) {\n  border-bottom-right-radius: 6px;\n  border-bottom-left-radius: 6px;\n}\n\n:host(.accordion-group-expand-inset) ::slotted(ion-accordion.accordion-next) {\n  border-top-left-radius: 6px;\n  border-top-right-radius: 6px;\n}\n:host-context([dir=rtl]):host(.accordion-group-expand-inset) ::slotted(ion-accordion.accordion-next), :host-context([dir=rtl]).accordion-group-expand-inset ::slotted(ion-accordion.accordion-next) {\n  border-top-left-radius: 6px;\n  border-top-right-radius: 6px;\n}\n\n:host(.accordion-group-expand-inset) ::slotted(ion-accordion):first-of-type,\n:host(.accordion-group-expand-inset) ::slotted(ion-accordion):first-of-type {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n}","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { Host, h } from '@stencil/core';\nimport { getIonMode } from '../../global/ionic-global';\nimport { printIonWarning } from '../../utils/logging';\n/**\n * @virtualProp {\"ios\" | \"md\"} mode - The mode determines which platform styles to use.\n */\nexport class AccordionGroup {\n  constructor() {\n    this.animated = true;\n    this.multiple = undefined;\n    this.value = undefined;\n    this.disabled = false;\n    this.readonly = false;\n    this.expand = 'compact';\n  }\n  valueChanged() {\n    const { value, multiple } = this;\n    if (!multiple && Array.isArray(value)) {\n      /**\n       * We do some processing on the `value` array so\n       * that it looks more like an array when logged to\n       * the console.\n       * Example given ['a', 'b']\n       * Default toString() behavior: a,b\n       * Custom behavior: ['a', 'b']\n       */\n      printIonWarning(`ion-accordion-group was passed an array of values, but multiple=\"false\". This is incorrect usage and may result in unexpected behaviors. To dismiss this warning, pass a string to the \"value\" property when multiple=\"false\".\n\n  Value Passed: [${value.map((v) => `'${v}'`).join(', ')}]\n`, this.el);\n    }\n    /**\n     * Do not use `value` here as that will be\n     * not account for the adjustment we make above.\n     */\n    this.ionValueChange.emit({ value: this.value });\n  }\n  async disabledChanged() {\n    const { disabled } = this;\n    const accordions = await this.getAccordions();\n    for (const accordion of accordions) {\n      accordion.disabled = disabled;\n    }\n  }\n  async readonlyChanged() {\n    const { readonly } = this;\n    const accordions = await this.getAccordions();\n    for (const accordion of accordions) {\n      accordion.readonly = readonly;\n    }\n  }\n  async onKeydown(ev) {\n    const activeElement = document.activeElement;\n    if (!activeElement) {\n      return;\n    }\n    /**\n     * Make sure focus is in the header, not the body, of the accordion. This ensures\n     * that if there are any interactable elements in the body, their keyboard\n     * interaction doesn't get stolen by the accordion. Example: using up/down keys\n     * in ion-textarea.\n     */\n    const activeAccordionHeader = activeElement.closest('ion-accordion [slot=\"header\"]');\n    if (!activeAccordionHeader) {\n      return;\n    }\n    const accordionEl = activeElement.tagName === 'ION-ACCORDION' ? activeElement : activeElement.closest('ion-accordion');\n    if (!accordionEl) {\n      return;\n    }\n    const closestGroup = accordionEl.closest('ion-accordion-group');\n    if (closestGroup !== this.el) {\n      return;\n    }\n    // If the active accordion is not in the current array of accordions, do not do anything\n    const accordions = await this.getAccordions();\n    const startingIndex = accordions.findIndex((a) => a === accordionEl);\n    if (startingIndex === -1) {\n      return;\n    }\n    let accordion;\n    if (ev.key === 'ArrowDown') {\n      accordion = this.findNextAccordion(accordions, startingIndex);\n    }\n    else if (ev.key === 'ArrowUp') {\n      accordion = this.findPreviousAccordion(accordions, startingIndex);\n    }\n    else if (ev.key === 'Home') {\n      accordion = accordions[0];\n    }\n    else if (ev.key === 'End') {\n      accordion = accordions[accordions.length - 1];\n    }\n    if (accordion !== undefined && accordion !== activeElement) {\n      accordion.focus();\n    }\n  }\n  async componentDidLoad() {\n    if (this.disabled) {\n      this.disabledChanged();\n    }\n    if (this.readonly) {\n      this.readonlyChanged();\n    }\n  }\n  /**\n   * Sets the value property and emits ionChange.\n   * This should only be called when the user interacts\n   * with the accordion and not for any update\n   * to the value property. The exception is when\n   * the app sets the value of a single-select\n   * accordion group to an array.\n   */\n  setValue(accordionValue) {\n    const value = (this.value = accordionValue);\n    this.ionChange.emit({ value });\n  }\n  /**\n   * This method is used to ensure that the value\n   * of ion-accordion-group is being set in a valid\n   * way. This method should only be called in\n   * response to a user generated action.\n   * @internal\n   */\n  async requestAccordionToggle(accordionValue, accordionExpand) {\n    const { multiple, value, readonly, disabled } = this;\n    if (readonly || disabled) {\n      return;\n    }\n    if (accordionExpand) {\n      /**\n       * If group accepts multiple values\n       * check to see if value is already in\n       * in values array. If not, add it\n       * to the array.\n       */\n      if (multiple) {\n        const groupValue = value !== null && value !== void 0 ? value : [];\n        const processedValue = Array.isArray(groupValue) ? groupValue : [groupValue];\n        const valueExists = processedValue.find((v) => v === accordionValue);\n        if (valueExists === undefined && accordionValue !== undefined) {\n          this.setValue([...processedValue, accordionValue]);\n        }\n      }\n      else {\n        this.setValue(accordionValue);\n      }\n    }\n    else {\n      /**\n       * If collapsing accordion, either filter the value\n       * out of the values array or unset the value.\n       */\n      if (multiple) {\n        const groupValue = value !== null && value !== void 0 ? value : [];\n        const processedValue = Array.isArray(groupValue) ? groupValue : [groupValue];\n        this.setValue(processedValue.filter((v) => v !== accordionValue));\n      }\n      else {\n        this.setValue(undefined);\n      }\n    }\n  }\n  findNextAccordion(accordions, startingIndex) {\n    const nextAccordion = accordions[startingIndex + 1];\n    if (nextAccordion === undefined) {\n      return accordions[0];\n    }\n    return nextAccordion;\n  }\n  findPreviousAccordion(accordions, startingIndex) {\n    const prevAccordion = accordions[startingIndex - 1];\n    if (prevAccordion === undefined) {\n      return accordions[accordions.length - 1];\n    }\n    return prevAccordion;\n  }\n  /**\n   * @internal\n   */\n  async getAccordions() {\n    return Array.from(this.el.querySelectorAll(':scope > ion-accordion'));\n  }\n  render() {\n    const { disabled, readonly, expand } = this;\n    const mode = getIonMode(this);\n    return (h(Host, { class: {\n        [mode]: true,\n        'accordion-group-disabled': disabled,\n        'accordion-group-readonly': readonly,\n        [`accordion-group-expand-${expand}`]: true,\n      }, role: \"presentation\" }, h(\"slot\", null)));\n  }\n  static get is() { return \"ion-accordion-group\"; }\n  static get encapsulation() { return \"shadow\"; }\n  static get originalStyleUrls() {\n    return {\n      \"ios\": [\"accordion-group.ios.scss\"],\n      \"md\": [\"accordion-group.md.scss\"]\n    };\n  }\n  static get styleUrls() {\n    return {\n      \"ios\": [\"accordion-group.ios.css\"],\n      \"md\": [\"accordion-group.md.css\"]\n    };\n  }\n  static get properties() {\n    return {\n      \"animated\": {\n        \"type\": \"boolean\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"boolean\",\n          \"resolved\": \"boolean\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"If `true`, all accordions inside of the\\naccordion group will animate when expanding\\nor collapsing.\"\n        },\n        \"attribute\": \"animated\",\n        \"reflect\": false,\n        \"defaultValue\": \"true\"\n      },\n      \"multiple\": {\n        \"type\": \"boolean\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"boolean\",\n          \"resolved\": \"boolean | undefined\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"If `true`, the accordion group can have multiple\\naccordion components expanded at the same time.\"\n        },\n        \"attribute\": \"multiple\",\n        \"reflect\": false\n      },\n      \"value\": {\n        \"type\": \"string\",\n        \"mutable\": true,\n        \"complexType\": {\n          \"original\": \"string | string[] | null\",\n          \"resolved\": \"null | string | string[] | undefined\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"The value of the accordion group. This controls which\\naccordions are expanded.\\nThis should be an array of strings only when `multiple=\\\"true\\\"`\"\n        },\n        \"attribute\": \"value\",\n        \"reflect\": false\n      },\n      \"disabled\": {\n        \"type\": \"boolean\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"boolean\",\n          \"resolved\": \"boolean\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"If `true`, the accordion group cannot be interacted with.\"\n        },\n        \"attribute\": \"disabled\",\n        \"reflect\": false,\n        \"defaultValue\": \"false\"\n      },\n      \"readonly\": {\n        \"type\": \"boolean\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"boolean\",\n          \"resolved\": \"boolean\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"If `true`, the accordion group cannot be interacted with,\\nbut does not alter the opacity.\"\n        },\n        \"attribute\": \"readonly\",\n        \"reflect\": false,\n        \"defaultValue\": \"false\"\n      },\n      \"expand\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"'compact' | 'inset'\",\n          \"resolved\": \"\\\"compact\\\" | \\\"inset\\\"\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Describes the expansion behavior for each accordion.\\nPossible values are `\\\"compact\\\"` and `\\\"inset\\\"`.\\nDefaults to `\\\"compact\\\"`.\"\n        },\n        \"attribute\": \"expand\",\n        \"reflect\": false,\n        \"defaultValue\": \"'compact'\"\n      }\n    };\n  }\n  static get events() {\n    return [{\n        \"method\": \"ionChange\",\n        \"name\": \"ionChange\",\n        \"bubbles\": true,\n        \"cancelable\": true,\n        \"composed\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Emitted when the value property has changed\\nas a result of a user action such as a click.\\nThis event will not emit when programmatically setting\\nthe value property.\"\n        },\n        \"complexType\": {\n          \"original\": \"AccordionGroupChangeEventDetail\",\n          \"resolved\": \"AccordionGroupChangeEventDetail<any>\",\n          \"references\": {\n            \"AccordionGroupChangeEventDetail\": {\n              \"location\": \"import\",\n              \"path\": \"./accordion-group-interface\"\n            }\n          }\n        }\n      }, {\n        \"method\": \"ionValueChange\",\n        \"name\": \"ionValueChange\",\n        \"bubbles\": true,\n        \"cancelable\": true,\n        \"composed\": true,\n        \"docs\": {\n          \"tags\": [{\n              \"name\": \"internal\",\n              \"text\": undefined\n            }],\n          \"text\": \"Emitted when the value property has changed.\\nThis is used to ensure that ion-accordion can respond\\nto any value property changes.\"\n        },\n        \"complexType\": {\n          \"original\": \"AccordionGroupChangeEventDetail\",\n          \"resolved\": \"AccordionGroupChangeEventDetail<any>\",\n          \"references\": {\n            \"AccordionGroupChangeEventDetail\": {\n              \"location\": \"import\",\n              \"path\": \"./accordion-group-interface\"\n            }\n          }\n        }\n      }];\n  }\n  static get methods() {\n    return {\n      \"requestAccordionToggle\": {\n        \"complexType\": {\n          \"signature\": \"(accordionValue: string | undefined, accordionExpand: boolean) => Promise<void>\",\n          \"parameters\": [{\n              \"tags\": [],\n              \"text\": \"\"\n            }, {\n              \"tags\": [],\n              \"text\": \"\"\n            }],\n          \"references\": {\n            \"Promise\": {\n              \"location\": \"global\"\n            }\n          },\n          \"return\": \"Promise<void>\"\n        },\n        \"docs\": {\n          \"text\": \"This method is used to ensure that the value\\nof ion-accordion-group is being set in a valid\\nway. This method should only be called in\\nresponse to a user generated action.\",\n          \"tags\": [{\n              \"name\": \"internal\",\n              \"text\": undefined\n            }]\n        }\n      },\n      \"getAccordions\": {\n        \"complexType\": {\n          \"signature\": \"() => Promise<HTMLIonAccordionElement[]>\",\n          \"parameters\": [],\n          \"references\": {\n            \"Promise\": {\n              \"location\": \"global\"\n            },\n            \"HTMLIonAccordionElement\": {\n              \"location\": \"global\"\n            }\n          },\n          \"return\": \"Promise<HTMLIonAccordionElement[]>\"\n        },\n        \"docs\": {\n          \"text\": \"\",\n          \"tags\": [{\n              \"name\": \"internal\",\n              \"text\": undefined\n            }]\n        }\n      }\n    };\n  }\n  static get elementRef() { return \"el\"; }\n  static get watchers() {\n    return [{\n        \"propName\": \"value\",\n        \"methodName\": \"valueChanged\"\n      }, {\n        \"propName\": \"disabled\",\n        \"methodName\": \"disabledChanged\"\n      }, {\n        \"propName\": \"readonly\",\n        \"methodName\": \"readonlyChanged\"\n      }];\n  }\n  static get listeners() {\n    return [{\n        \"name\": \"keydown\",\n        \"method\": \"onKeydown\",\n        \"target\": undefined,\n        \"capture\": false,\n        \"passive\": false\n      }];\n  }\n}\n"],"version":3}