{"file":"ion-menu-toggle.entry.cjs.js","mappings":";;;;;;;;;;;;;AAAA,MAAM,aAAa,GAAG,0CAA0C;;MCUnD,UAAU;EACrB;;IACE,IAAI,CAAC,OAAO,GAAG;MACb,OAAOA,sBAAc,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KACzC,CAAC;IACF,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;IACrB,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC;IACtB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;GACtB;EACD,iBAAiB;IACf,IAAI,CAAC,iBAAiB,EAAE,CAAC;GAC1B;EACD,MAAM,iBAAiB;IACrB,IAAI,CAAC,OAAO,GAAG,MAAMC,+BAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;GAClD;EACD,MAAM;IACJ,MAAM,IAAI,GAAGC,sBAAU,CAAC,IAAI,CAAC,CAAC;IAC9B,MAAM,MAAM,GAAG,IAAI,CAAC,QAAQ,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC;IAC9C,QAAQC,OAAC,CAACC,UAAI,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,aAAa,EAAE,MAAM,GAAG,MAAM,GAAG,IAAI,EAAE,KAAK,EAAE;QACnF,CAAC,IAAI,GAAG,IAAI;QACZ,oBAAoB,EAAE,MAAM;OAC7B,EAAE,EAAED,OAAC,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC,EAAE;GAC1B;;;;;;","names":["menuController","updateVisibility","getIonMode","h","Host"],"sources":["../../node_modules/@ionic/core/dist/collection/components/menu-toggle/menu-toggle.css?tag=ion-menu-toggle&encapsulation=shadow","../../node_modules/@ionic/core/dist/collection/components/menu-toggle/menu-toggle.js"],"sourcesContent":[":host(.menu-toggle-hidden) {\n  display: none;\n}","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { Host, h } from '@stencil/core';\nimport { getIonMode } from '../../global/ionic-global';\nimport { menuController } from '../../utils/menu-controller';\nimport { updateVisibility } from './menu-toggle-util';\n/**\n * @slot - Content is placed inside the toggle to act as the click target.\n */\nexport class MenuToggle {\n  constructor() {\n    this.onClick = () => {\n      return menuController.toggle(this.menu);\n    };\n    this.visible = false;\n    this.menu = undefined;\n    this.autoHide = true;\n  }\n  connectedCallback() {\n    this.visibilityChanged();\n  }\n  async visibilityChanged() {\n    this.visible = await updateVisibility(this.menu);\n  }\n  render() {\n    const mode = getIonMode(this);\n    const hidden = this.autoHide && !this.visible;\n    return (h(Host, { onClick: this.onClick, \"aria-hidden\": hidden ? 'true' : null, class: {\n        [mode]: true,\n        'menu-toggle-hidden': hidden,\n      } }, h(\"slot\", null)));\n  }\n  static get is() { return \"ion-menu-toggle\"; }\n  static get encapsulation() { return \"shadow\"; }\n  static get originalStyleUrls() {\n    return {\n      \"$\": [\"menu-toggle.scss\"]\n    };\n  }\n  static get styleUrls() {\n    return {\n      \"$\": [\"menu-toggle.css\"]\n    };\n  }\n  static get properties() {\n    return {\n      \"menu\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string | undefined\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Optional property that maps to a Menu's `menuId` prop.\\nCan also be `start` or `end` for the menu side.\\nThis is used to find the correct menu to toggle.\\n\\nIf this property is not used, `ion-menu-toggle` will toggle the\\nfirst menu that is active.\"\n        },\n        \"attribute\": \"menu\",\n        \"reflect\": false\n      },\n      \"autoHide\": {\n        \"type\": \"boolean\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"boolean\",\n          \"resolved\": \"boolean\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Automatically hides the content when the corresponding menu is not active.\\n\\nBy default, it's `true`. Change it to `false` in order to\\nkeep `ion-menu-toggle` always visible regardless the state of the menu.\"\n        },\n        \"attribute\": \"auto-hide\",\n        \"reflect\": false,\n        \"defaultValue\": \"true\"\n      }\n    };\n  }\n  static get states() {\n    return {\n      \"visible\": {}\n    };\n  }\n  static get listeners() {\n    return [{\n        \"name\": \"ionMenuChange\",\n        \"method\": \"visibilityChanged\",\n        \"target\": \"body\",\n        \"capture\": false,\n        \"passive\": false\n      }, {\n        \"name\": \"ionSplitPaneVisible\",\n        \"method\": \"visibilityChanged\",\n        \"target\": \"body\",\n        \"capture\": false,\n        \"passive\": false\n      }];\n  }\n}\n"],"version":3}