{"version":3,"names":["KEYBOARD_DID_OPEN","KEYBOARD_DID_CLOSE","KEYBOARD_THRESHOLD","previousVisualViewport","currentVisualViewport","keyboardOpen","resetKeyboardAssist","startKeyboardAssist","win","startNativeListeners","visualViewport","copyVisualViewport","onresize","trackViewportChanges","keyboardDidOpen","keyboardDidResize","setKeyboardOpen","keyboardDidClose","setKeyboardClose","addEventListener","ev","fireKeyboardOpenEvent","fireKeyboardCloseEvent","scaledHeightDifference","height","scale","width","innerHeight","nativeEv","keyboardHeight","CustomEvent","detail","dispatchEvent","Object","assign","Math","round","offsetTop","offsetLeft","pageTop","pageLeft"],"sources":["../../node_modules/@ionic/core/dist/collection/utils/keyboard/keyboard.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nexport const KEYBOARD_DID_OPEN = 'ionKeyboardDidShow';\nexport const KEYBOARD_DID_CLOSE = 'ionKeyboardDidHide';\nconst KEYBOARD_THRESHOLD = 150;\n// TODO(FW-2832): types\nlet previousVisualViewport = {};\nlet currentVisualViewport = {};\nlet keyboardOpen = false;\n/**\n * This is only used for tests\n */\nexport const resetKeyboardAssist = () => {\n  previousVisualViewport = {};\n  currentVisualViewport = {};\n  keyboardOpen = false;\n};\nexport const startKeyboardAssist = (win) => {\n  startNativeListeners(win);\n  if (!win.visualViewport) {\n    return;\n  }\n  currentVisualViewport = copyVisualViewport(win.visualViewport);\n  win.visualViewport.onresize = () => {\n    trackViewportChanges(win);\n    if (keyboardDidOpen() || keyboardDidResize(win)) {\n      setKeyboardOpen(win);\n    }\n    else if (keyboardDidClose(win)) {\n      setKeyboardClose(win);\n    }\n  };\n};\n/**\n * Listen for events fired by native keyboard plugin\n * in Capacitor/Cordova so devs only need to listen\n * in one place.\n */\nconst startNativeListeners = (win) => {\n  win.addEventListener('keyboardDidShow', (ev) => setKeyboardOpen(win, ev));\n  win.addEventListener('keyboardDidHide', () => setKeyboardClose(win));\n};\nexport const setKeyboardOpen = (win, ev) => {\n  fireKeyboardOpenEvent(win, ev);\n  keyboardOpen = true;\n};\nexport const setKeyboardClose = (win) => {\n  fireKeyboardCloseEvent(win);\n  keyboardOpen = false;\n};\n/**\n * Returns `true` if the `keyboardOpen` flag is not\n * set, the previous visual viewport width equal the current\n * visual viewport width, and if the scaled difference\n * of the previous visual viewport height minus the current\n * visual viewport height is greater than KEYBOARD_THRESHOLD\n *\n * We need to be able to accommodate users who have zooming\n * enabled in their browser (or have zoomed in manually) which\n * is why we take into account the current visual viewport's\n * scale value.\n */\nexport const keyboardDidOpen = () => {\n  const scaledHeightDifference = (previousVisualViewport.height - currentVisualViewport.height) * currentVisualViewport.scale;\n  return (!keyboardOpen &&\n    previousVisualViewport.width === currentVisualViewport.width &&\n    scaledHeightDifference > KEYBOARD_THRESHOLD);\n};\n/**\n * Returns `true` if the keyboard is open,\n * but the keyboard did not close\n */\nexport const keyboardDidResize = (win) => {\n  return keyboardOpen && !keyboardDidClose(win);\n};\n/**\n * Determine if the keyboard was closed\n * Returns `true` if the `keyboardOpen` flag is set and\n * the current visual viewport height equals the\n * layout viewport height.\n */\nexport const keyboardDidClose = (win) => {\n  return keyboardOpen && currentVisualViewport.height === win.innerHeight;\n};\n/**\n * Dispatch a keyboard open event\n */\nconst fireKeyboardOpenEvent = (win, nativeEv) => {\n  const keyboardHeight = nativeEv ? nativeEv.keyboardHeight : win.innerHeight - currentVisualViewport.height;\n  const ev = new CustomEvent(KEYBOARD_DID_OPEN, {\n    detail: { keyboardHeight },\n  });\n  win.dispatchEvent(ev);\n};\n/**\n * Dispatch a keyboard close event\n */\nconst fireKeyboardCloseEvent = (win) => {\n  const ev = new CustomEvent(KEYBOARD_DID_CLOSE);\n  win.dispatchEvent(ev);\n};\n/**\n * Given a window object, create a copy of\n * the current visual and layout viewport states\n * while also preserving the previous visual and\n * layout viewport states\n */\nexport const trackViewportChanges = (win) => {\n  previousVisualViewport = Object.assign({}, currentVisualViewport);\n  currentVisualViewport = copyVisualViewport(win.visualViewport);\n};\n/**\n * Creates a deep copy of the visual viewport\n * at a given state\n */\nexport const copyVisualViewport = (visualViewport) => {\n  return {\n    width: Math.round(visualViewport.width),\n    height: Math.round(visualViewport.height),\n    offsetTop: visualViewport.offsetTop,\n    offsetLeft: visualViewport.offsetLeft,\n    pageTop: visualViewport.pageTop,\n    pageLeft: visualViewport.pageLeft,\n    scale: visualViewport.scale,\n  };\n};\n"],"mappings":";;;AAGY,MAACA,EAAoB,qBACrB,MAACC,EAAqB,qBAClC,MAAMC,EAAqB,IAE3B,IAAIC,EAAyB,GAC7B,IAAIC,EAAwB,GAC5B,IAAIC,EAAe,MAIP,MAACC,EAAsB,KACjCH,EAAyB,GACzBC,EAAwB,GACxBC,EAAe,KAAK,EAEV,MAACE,EAAuBC,IAClCC,EAAqBD,GACrB,IAAKA,EAAIE,eAAgB,CACvB,MACJ,CACEN,EAAwBO,EAAmBH,EAAIE,gBAC/CF,EAAIE,eAAeE,SAAW,KAC5BC,EAAqBL,GACrB,GAAIM,KAAqBC,EAAkBP,GAAM,CAC/CQ,EAAgBR,EACtB,MACS,GAAIS,EAAiBT,GAAM,CAC9BU,EAAiBV,EACvB,EACG,EAOH,MAAMC,EAAwBD,IAC5BA,EAAIW,iBAAiB,mBAAoBC,GAAOJ,EAAgBR,EAAKY,KACrEZ,EAAIW,iBAAiB,mBAAmB,IAAMD,EAAiBV,IAAK,EAE1D,MAACQ,EAAkB,CAACR,EAAKY,KACnCC,EAAsBb,EAAKY,GAC3Bf,EAAe,IAAI,EAET,MAACa,EAAoBV,IAC/Bc,EAAuBd,GACvBH,EAAe,KAAK,EAcV,MAACS,EAAkB,KAC7B,MAAMS,GAA0BpB,EAAuBqB,OAASpB,EAAsBoB,QAAUpB,EAAsBqB,MACtH,OAASpB,GACPF,EAAuBuB,QAAUtB,EAAsBsB,OACvDH,EAAyBrB,CAAkB,EAMnC,MAACa,EAAqBP,GACzBH,IAAiBY,EAAiBT,GAQ/B,MAACS,EAAoBT,GACxBH,GAAgBD,EAAsBoB,SAAWhB,EAAImB,YAK9D,MAAMN,EAAwB,CAACb,EAAKoB,KAClC,MAAMC,EAAiBD,EAAWA,EAASC,eAAiBrB,EAAImB,YAAcvB,EAAsBoB,OACpG,MAAMJ,EAAK,IAAIU,YAAY9B,EAAmB,CAC5C+B,OAAQ,CAAEF,oBAEZrB,EAAIwB,cAAcZ,EAAG,EAKvB,MAAME,EAA0Bd,IAC9B,MAAMY,EAAK,IAAIU,YAAY7B,GAC3BO,EAAIwB,cAAcZ,EAAG,EAQX,MAACP,EAAwBL,IACnCL,EAAyB8B,OAAOC,OAAO,GAAI9B,GAC3CA,EAAwBO,EAAmBH,EAAIE,eAAe,EAMpD,MAACC,EAAsBD,IAC1B,CACLgB,MAAOS,KAAKC,MAAM1B,EAAegB,OACjCF,OAAQW,KAAKC,MAAM1B,EAAec,QAClCa,UAAW3B,EAAe2B,UAC1BC,WAAY5B,EAAe4B,WAC3BC,QAAS7B,EAAe6B,QACxBC,SAAU9B,EAAe8B,SACzBf,MAAOf,EAAee,e"}