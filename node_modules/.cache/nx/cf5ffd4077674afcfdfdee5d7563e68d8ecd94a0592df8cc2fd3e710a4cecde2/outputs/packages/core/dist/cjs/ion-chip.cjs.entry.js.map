{"file":"ion-chip.entry.cjs.js","mappings":";;;;;;;;AAAA,MAAM,OAAO,GAAG,kuFAAkuF;;MCSruF,IAAI;EACf;;IACE,IAAI,CAAC,KAAK,GAAG,SAAS,CAAC;IACvB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;IACrB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;GACvB;EACD,MAAM;IACJ,MAAM,IAAI,GAAGA,sBAAU,CAAC,IAAI,CAAC,CAAC;IAC9B,QAAQC,OAAC,CAACC,UAAI,EAAE,EAAE,eAAe,EAAE,IAAI,CAAC,QAAQ,GAAG,MAAM,GAAG,IAAI,EAAE,KAAK,EAAEC,wBAAkB,CAAC,IAAI,CAAC,KAAK,EAAE;QACpG,CAAC,IAAI,GAAG,IAAI;QACZ,cAAc,EAAE,IAAI,CAAC,OAAO;QAC5B,eAAe,EAAE,IAAI,CAAC,QAAQ;QAC9B,iBAAiB,EAAE,IAAI;OACxB,CAAC,EAAE,EAAEF,OAAC,CAAC,MAAM,EAAE,IAAI,CAAC,EAAE,IAAI,KAAK,IAAI,IAAIA,OAAC,CAAC,mBAAmB,EAAE,IAAI,CAAC,CAAC,EAAE;GAC1E;;;;;;","names":["getIonMode","h","Host","createColorClasses"],"sources":["../../node_modules/@ionic/core/dist/collection/components/chip/chip.css?tag=ion-chip&encapsulation=shadow","../../node_modules/@ionic/core/dist/collection/components/chip/chip.js"],"sourcesContent":[":host {\n  /**\n   * @prop --background: Background of the chip\n   * @prop --color: Color of the chip\n   */\n  --background: rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.12);\n  --color: rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.87);\n  border-radius: 16px;\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  -webkit-margin-start: 4px;\n  margin-inline-start: 4px;\n  -webkit-margin-end: 4px;\n  margin-inline-end: 4px;\n  margin-top: 4px;\n  margin-bottom: 4px;\n  -webkit-padding-start: 12px;\n  padding-inline-start: 12px;\n  -webkit-padding-end: 12px;\n  padding-inline-end: 12px;\n  padding-top: 7px;\n  padding-bottom: 7px;\n  display: inline-flex;\n  position: relative;\n  align-items: center;\n  height: 32px;\n  background: var(--background);\n  color: var(--color);\n  font-family: var(--ion-font-family, inherit);\n  font-size: 14px;\n  cursor: pointer;\n  overflow: hidden;\n  vertical-align: middle;\n  box-sizing: border-box;\n}\n\n:host(.chip-disabled) {\n  cursor: default;\n  opacity: 0.4;\n  pointer-events: none;\n}\n\n:host(.ion-color) {\n  background: rgba(var(--ion-color-base-rgb), 0.08);\n  color: var(--ion-color-shade);\n}\n\n:host(.ion-color:focus) {\n  background: rgba(var(--ion-color-base-rgb), 0.12);\n}\n\n:host(.ion-color.ion-activated) {\n  background: rgba(var(--ion-color-base-rgb), 0.16);\n}\n\n:host(.chip-outline) {\n  border-width: 1px;\n  border-style: solid;\n}\n\n:host(.chip-outline) {\n  border-color: rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.32);\n  background: transparent;\n}\n\n:host(.chip-outline.ion-color) {\n  border-color: rgba(var(--ion-color-base-rgb), 0.32);\n}\n\n:host(.chip-outline:not(.ion-color):focus) {\n  background: rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.04);\n}\n\n:host(.chip-outline.ion-activated:not(.ion-color)) {\n  background: rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.08);\n}\n\n::slotted(ion-icon) {\n  font-size: 20px;\n}\n\n:host(:not(.ion-color)) ::slotted(ion-icon) {\n  color: rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.54);\n}\n\n::slotted(ion-icon:first-child) {\n  -webkit-margin-start: -4px;\n  margin-inline-start: -4px;\n  -webkit-margin-end: 8px;\n  margin-inline-end: 8px;\n  margin-top: -4px;\n  margin-bottom: -4px;\n}\n\n::slotted(ion-icon:last-child) {\n  -webkit-margin-start: 8px;\n  margin-inline-start: 8px;\n  -webkit-margin-end: -4px;\n  margin-inline-end: -4px;\n  margin-top: -4px;\n  margin-bottom: -4px;\n}\n\n::slotted(ion-avatar) {\n  width: 24px;\n  height: 24px;\n}\n\n::slotted(ion-avatar:first-child) {\n  -webkit-margin-start: -8px;\n  margin-inline-start: -8px;\n  -webkit-margin-end: 8px;\n  margin-inline-end: 8px;\n  margin-top: -4px;\n  margin-bottom: -4px;\n}\n\n::slotted(ion-avatar:last-child) {\n  -webkit-margin-start: 8px;\n  margin-inline-start: 8px;\n  -webkit-margin-end: -8px;\n  margin-inline-end: -8px;\n  margin-top: -4px;\n  margin-bottom: -4px;\n}\n\n:host(:focus) {\n  outline: none;\n}\n\n:host(:focus) {\n  --background: rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.16);\n}\n\n:host(.ion-activated) {\n  --background: rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.2);\n}\n\n@media (any-hover: hover) {\n  :host(:hover) {\n    --background: rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.16);\n  }\n  :host(.ion-color:hover) {\n    background: rgba(var(--ion-color-base-rgb), 0.12);\n  }\n  :host(.chip-outline:not(.ion-color):hover) {\n    background: rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.04);\n  }\n}","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { Host, h } from '@stencil/core';\nimport { getIonMode } from '../../global/ionic-global';\nimport { createColorClasses } from '../../utils/theme';\n/**\n * @virtualProp {\"ios\" | \"md\"} mode - The mode determines which platform styles to use.\n */\nexport class Chip {\n  constructor() {\n    this.color = undefined;\n    this.outline = false;\n    this.disabled = false;\n  }\n  render() {\n    const mode = getIonMode(this);\n    return (h(Host, { \"aria-disabled\": this.disabled ? 'true' : null, class: createColorClasses(this.color, {\n        [mode]: true,\n        'chip-outline': this.outline,\n        'chip-disabled': this.disabled,\n        'ion-activatable': true,\n      }) }, h(\"slot\", null), mode === 'md' && h(\"ion-ripple-effect\", null)));\n  }\n  static get is() { return \"ion-chip\"; }\n  static get encapsulation() { return \"shadow\"; }\n  static get originalStyleUrls() {\n    return {\n      \"$\": [\"chip.scss\"]\n    };\n  }\n  static get styleUrls() {\n    return {\n      \"$\": [\"chip.css\"]\n    };\n  }\n  static get properties() {\n    return {\n      \"color\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"Color\",\n          \"resolved\": \"\\\"danger\\\" | \\\"dark\\\" | \\\"light\\\" | \\\"medium\\\" | \\\"primary\\\" | \\\"secondary\\\" | \\\"success\\\" | \\\"tertiary\\\" | \\\"warning\\\" | string & Record<never, never> | undefined\",\n          \"references\": {\n            \"Color\": {\n              \"location\": \"import\",\n              \"path\": \"../../interface\"\n            }\n          }\n        },\n        \"required\": false,\n        \"optional\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"The color to use from your application's color palette.\\nDefault options are: `\\\"primary\\\"`, `\\\"secondary\\\"`, `\\\"tertiary\\\"`, `\\\"success\\\"`, `\\\"warning\\\"`, `\\\"danger\\\"`, `\\\"light\\\"`, `\\\"medium\\\"`, and `\\\"dark\\\"`.\\nFor more information on colors, see [theming](/docs/theming/basics).\"\n        },\n        \"attribute\": \"color\",\n        \"reflect\": true\n      },\n      \"outline\": {\n        \"type\": \"boolean\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"boolean\",\n          \"resolved\": \"boolean\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Display an outline style button.\"\n        },\n        \"attribute\": \"outline\",\n        \"reflect\": false,\n        \"defaultValue\": \"false\"\n      },\n      \"disabled\": {\n        \"type\": \"boolean\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"boolean\",\n          \"resolved\": \"boolean\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"If `true`, the user cannot interact with the chip.\"\n        },\n        \"attribute\": \"disabled\",\n        \"reflect\": false,\n        \"defaultValue\": \"false\"\n      }\n    };\n  }\n}\n"],"version":3}