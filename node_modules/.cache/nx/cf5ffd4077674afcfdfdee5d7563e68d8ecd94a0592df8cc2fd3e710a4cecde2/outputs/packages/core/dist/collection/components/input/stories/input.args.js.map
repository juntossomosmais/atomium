{"version":3,"file":"input.args.js","sourceRoot":"","sources":["../../../../../../../src/components/input/stories/input.args.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,WAAW,EAAE,MAAM,oCAAoC,CAAA;AAEhE,MAAM,CAAC,MAAM,cAAc,GAAG;EAC5B,UAAU,EAAE;IACV,OAAO,EAAE;MACP,OAAO,EAAE,CAAC,YAAY,EAAE,WAAW,EAAE,UAAU,CAAC;KACjD;GACF;EACD,UAAU,EAAE,CAAC,WAAW,CAAC;EACzB,QAAQ,EAAE;IACR,KAAK,EAAE;MACL,OAAO,EAAE,MAAM;KAChB;IACD,cAAc,EAAE;MACd,OAAO,EAAE,QAAQ;MACjB,OAAO,EAAE,CAAC,OAAO,EAAE,SAAS,EAAE,UAAU,CAAC;KAC1C;IACD,WAAW,EAAE;MACX,OAAO,EAAE,MAAM;KAChB;IACD,KAAK,EAAE;MACL,OAAO,EAAE,QAAQ;MACjB,OAAO,EAAE,CAAC,SAAS,EAAE,SAAS,EAAE,WAAW,CAAC;KAC7C;IACD,IAAI,EAAE;MACJ,OAAO,EAAE,QAAQ;MACjB,OAAO,EAAE,CAAC,SAAS,EAAE,OAAO,CAAC;KAC9B;IACD,QAAQ,EAAE;MACR,OAAO,EAAE,SAAS;KACnB;IACD,IAAI,EAAE;MACJ,OAAO,EAAE,cAAc;MACvB,OAAO,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,UAAU,EAAE;KAChD;IACD,IAAI,EAAE;MACJ,OAAO,EAAE,QAAQ;MACjB,OAAO,EAAE,CAAC,KAAK,EAAE,IAAI,CAAC;KACvB;IACD,UAAU,EAAE;MACV,OAAO,EAAE,SAAS;KACnB;IACD,WAAW,EAAE;MACX,OAAO,EAAE,SAAS;KACnB;IACD,OAAO,EAAE;MACP,OAAO,EAAE,MAAM;KAChB;IACD,QAAQ,EAAE;MACR,OAAO,EAAE,SAAS;KACnB;IACD,SAAS,EAAE;MACT,OAAO,EAAE,QAAQ;MACjB,OAAO,EAAE;QACP,MAAM;QACN,SAAS;QACT,SAAS;QACT,KAAK;QACL,QAAQ;QACR,MAAM;QACN,KAAK;QACL,OAAO;OACR;KACF;GACF;CACF,CAAA;AAED,MAAM,CAAC,MAAM,kBAAkB,GAAG;EAChC,KAAK,EAAE,eAAe;EACtB,cAAc,EAAE,UAAU;EAC1B,IAAI,EAAE,SAAS;EACf,KAAK,EAAE,SAAS;EAChB,IAAI,EAAE,IAAI;EACV,QAAQ,EAAE,KAAK;EACf,WAAW,EAAE,aAAa;EAC1B,UAAU,EAAE,KAAK;EACjB,WAAW,EAAE,KAAK;CACnB,CAAA","sourcesContent":["import { withActions } from '@storybook/addon-actions/decorator'\n\nexport const InputStoryArgs = {\n  parameters: {\n    actions: {\n      handles: ['atomChange', 'atomFocus', 'atomBlur'],\n    },\n  },\n  decorators: [withActions],\n  argTypes: {\n    label: {\n      control: 'text',\n    },\n    labelPlacement: {\n      control: 'select',\n      options: ['fixed', 'stacked', 'floating'],\n    },\n    placeholder: {\n      control: 'text',\n    },\n    color: {\n      control: 'select',\n      options: ['default', 'primary', 'secondary'],\n    },\n    fill: {\n      control: 'select',\n      options: ['outline', 'solid'],\n    },\n    disabled: {\n      control: 'boolean',\n    },\n    type: {\n      control: 'inline-radio',\n      options: { text: 'text', password: 'password' },\n    },\n    mode: {\n      control: 'select',\n      options: ['ios', 'md'],\n    },\n    clearInput: {\n      control: 'boolean',\n    },\n    clearOnEdit: {\n      control: 'boolean',\n    },\n    pattern: {\n      control: 'text',\n    },\n    required: {\n      control: 'boolean',\n    },\n    inputmode: {\n      control: 'select',\n      options: [\n        'none',\n        'decimal',\n        'numeric',\n        'tel',\n        'search',\n        'text',\n        'url',\n        'email',\n      ],\n    },\n  },\n}\n\nexport const InputComponentArgs = {\n  label: 'Example input',\n  labelPlacement: 'floating',\n  fill: 'outline',\n  color: undefined,\n  mode: 'md',\n  disabled: false,\n  placeholder: 'Placeholder',\n  clearInput: false,\n  clearOnEdit: false,\n}\n"]}