{"file":"ion-item-divider.entry.js","mappings":";;;;AAAA,MAAM,iBAAiB,GAAG,yzFAAyzF;;ACAn1F,MAAM,gBAAgB,GAAG,2yHAA2yH;;MCavzH,WAAW;EACtB;;IACE,IAAI,CAAC,KAAK,GAAG,SAAS,CAAC;IACvB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;GACrB;EACD,MAAM;IACJ,MAAM,IAAI,GAAG,UAAU,CAAC,IAAI,CAAC,CAAC;IAC9B,QAAQ,CAAC,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,kBAAkB,CAAC,IAAI,CAAC,KAAK,EAAE;QACpD,CAAC,IAAI,GAAG,IAAI;QACZ,qBAAqB,EAAE,IAAI,CAAC,MAAM;QAClC,IAAI,EAAE,IAAI;OACX,CAAC,EAAE,EAAE,CAAC,CAAC,MAAM,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,EAAE,EAAE,KAAK,EAAE,oBAAoB,EAAE,EAAE,CAAC,CAAC,KAAK,EAAE,EAAE,KAAK,EAAE,sBAAsB,EAAE,EAAE,CAAC,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,MAAM,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,EAAE;GAC7K;;;;;;;;;;","names":[],"sources":["../../node_modules/@ionic/core/dist/collection/components/item-divider/item-divider.ios.css?tag=ion-item-divider&mode=ios&encapsulation=shadow","../../node_modules/@ionic/core/dist/collection/components/item-divider/item-divider.md.css?tag=ion-item-divider&mode=md&encapsulation=shadow","../../node_modules/@ionic/core/dist/collection/components/item-divider/item-divider.js"],"sourcesContent":[":host {\n  /**\n   * @prop --background: Background of the item divider\n   *\n   * @prop --color: Color of the item divider\n   *\n   * @prop --padding-top: Top padding of the item divider\n   * @prop --padding-end: Right padding if direction is left-to-right, and left padding if direction is right-to-left of the item divider\n   * @prop --padding-bottom: Bottom padding of the item divider\n   * @prop --padding-start: Left padding if direction is left-to-right, and right padding if direction is right-to-left of the item divider\n   *\n   * @prop --inner-padding-top: Top inner padding of the item divider\n   * @prop --inner-padding-end: End inner padding of the item divider\n   * @prop --inner-padding-bottom: Bottom inner padding of the item divider\n   * @prop --inner-padding-start: Start inner padding of the item divider\n   */\n  --padding-top: 0px;\n  --padding-end: 0px;\n  --padding-bottom: 0px;\n  --padding-start: 0px;\n  --inner-padding-top: 0px;\n  --inner-padding-end: 0px;\n  --inner-padding-bottom: 0px;\n  --inner-padding-start: 0px;\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n  -webkit-padding-start: calc(var(--padding-start) + var(--ion-safe-area-left, 0px));\n  padding-inline-start: calc(var(--padding-start) + var(--ion-safe-area-left, 0px));\n  -webkit-padding-end: var(--padding-end);\n  padding-inline-end: var(--padding-end);\n  padding-top: var(--padding-top);\n  padding-bottom: var(--padding-bottom);\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  width: 100%;\n  background: var(--background);\n  color: var(--color);\n  font-family: var(--ion-font-family, inherit);\n  overflow: hidden;\n  z-index: 100;\n  box-sizing: border-box;\n}\n\n:host(.ion-color) {\n  background: var(--ion-color-base);\n  color: var(--ion-color-contrast);\n}\n\n:host(.item-divider-sticky) {\n  position: sticky;\n  top: 0;\n}\n\n.item-divider-inner {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n  -webkit-padding-start: var(--inner-padding-start);\n  padding-inline-start: var(--inner-padding-start);\n  -webkit-padding-end: calc(var(--ion-safe-area-right, 0px) + var(--inner-padding-end));\n  padding-inline-end: calc(var(--ion-safe-area-right, 0px) + var(--inner-padding-end));\n  padding-top: var(--inner-padding-top);\n  padding-bottom: var(--inner-padding-bottom);\n  display: flex;\n  flex: 1;\n  flex-direction: inherit;\n  align-items: inherit;\n  align-self: stretch;\n  min-height: inherit;\n  border: 0;\n  overflow: hidden;\n}\n\n.item-divider-wrapper {\n  display: flex;\n  flex: 1;\n  flex-direction: inherit;\n  align-items: inherit;\n  align-self: stretch;\n  text-overflow: ellipsis;\n  overflow: hidden;\n}\n\n:host {\n  --background: var(--ion-color-step-100, #e6e6e6);\n  --color: var(--ion-color-step-850, #262626);\n  --padding-start: 16px;\n  --inner-padding-end: 8px;\n  border-radius: 0;\n  position: relative;\n  min-height: 28px;\n  font-size: 17px;\n  font-weight: 600;\n}\n\n:host([slot=start]) {\n  -webkit-margin-start: 0;\n  margin-inline-start: 0;\n  -webkit-margin-end: 16px;\n  margin-inline-end: 16px;\n  margin-top: 2px;\n  margin-bottom: 2px;\n}\n\n::slotted(ion-icon[slot=start]),\n::slotted(ion-icon[slot=end]) {\n  margin-top: 7px;\n  margin-bottom: 7px;\n}\n\n::slotted(h1) {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 2px;\n  font-size: 24px;\n  font-weight: normal;\n}\n\n::slotted(h2) {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 2px;\n  font-size: 17px;\n  font-weight: normal;\n}\n\n::slotted(h3),\n::slotted(h4),\n::slotted(h5),\n::slotted(h6) {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 3px;\n  font-size: 14px;\n  font-weight: normal;\n  line-height: normal;\n}\n\n::slotted(p) {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 2px;\n  color: rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.4);\n  font-size: 14px;\n  line-height: normal;\n  text-overflow: inherit;\n  overflow: inherit;\n}\n\n::slotted(h2:last-child) ::slotted(h3:last-child),\n::slotted(h4:last-child),\n::slotted(h5:last-child),\n::slotted(h6:last-child),\n::slotted(p:last-child) {\n  margin-bottom: 0;\n}",":host {\n  /**\n   * @prop --background: Background of the item divider\n   *\n   * @prop --color: Color of the item divider\n   *\n   * @prop --padding-top: Top padding of the item divider\n   * @prop --padding-end: Right padding if direction is left-to-right, and left padding if direction is right-to-left of the item divider\n   * @prop --padding-bottom: Bottom padding of the item divider\n   * @prop --padding-start: Left padding if direction is left-to-right, and right padding if direction is right-to-left of the item divider\n   *\n   * @prop --inner-padding-top: Top inner padding of the item divider\n   * @prop --inner-padding-end: End inner padding of the item divider\n   * @prop --inner-padding-bottom: Bottom inner padding of the item divider\n   * @prop --inner-padding-start: Start inner padding of the item divider\n   */\n  --padding-top: 0px;\n  --padding-end: 0px;\n  --padding-bottom: 0px;\n  --padding-start: 0px;\n  --inner-padding-top: 0px;\n  --inner-padding-end: 0px;\n  --inner-padding-bottom: 0px;\n  --inner-padding-start: 0px;\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n  -webkit-padding-start: calc(var(--padding-start) + var(--ion-safe-area-left, 0px));\n  padding-inline-start: calc(var(--padding-start) + var(--ion-safe-area-left, 0px));\n  -webkit-padding-end: var(--padding-end);\n  padding-inline-end: var(--padding-end);\n  padding-top: var(--padding-top);\n  padding-bottom: var(--padding-bottom);\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  width: 100%;\n  background: var(--background);\n  color: var(--color);\n  font-family: var(--ion-font-family, inherit);\n  overflow: hidden;\n  z-index: 100;\n  box-sizing: border-box;\n}\n\n:host(.ion-color) {\n  background: var(--ion-color-base);\n  color: var(--ion-color-contrast);\n}\n\n:host(.item-divider-sticky) {\n  position: sticky;\n  top: 0;\n}\n\n.item-divider-inner {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n  -webkit-padding-start: var(--inner-padding-start);\n  padding-inline-start: var(--inner-padding-start);\n  -webkit-padding-end: calc(var(--ion-safe-area-right, 0px) + var(--inner-padding-end));\n  padding-inline-end: calc(var(--ion-safe-area-right, 0px) + var(--inner-padding-end));\n  padding-top: var(--inner-padding-top);\n  padding-bottom: var(--inner-padding-bottom);\n  display: flex;\n  flex: 1;\n  flex-direction: inherit;\n  align-items: inherit;\n  align-self: stretch;\n  min-height: inherit;\n  border: 0;\n  overflow: hidden;\n}\n\n.item-divider-wrapper {\n  display: flex;\n  flex: 1;\n  flex-direction: inherit;\n  align-items: inherit;\n  align-self: stretch;\n  text-overflow: ellipsis;\n  overflow: hidden;\n}\n\n:host {\n  --background: var(--ion-background-color, #fff);\n  --color: var(--ion-color-step-400, #999999);\n  --padding-start: 16px;\n  --inner-padding-end: 16px;\n  min-height: 30px;\n  border-bottom: 1px solid var(--ion-item-border-color, var(--ion-border-color, var(--ion-color-step-150, rgba(0, 0, 0, 0.13))));\n  font-size: 14px;\n}\n\n::slotted([slot=start]) {\n  -webkit-margin-end: 32px;\n  margin-inline-end: 32px;\n}\n\n::slotted([slot=end]) {\n  -webkit-margin-start: 32px;\n  margin-inline-start: 32px;\n}\n\n::slotted(ion-label) {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 13px;\n  margin-bottom: 10px;\n}\n\n::slotted(ion-icon) {\n  color: rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.54);\n  font-size: 24px;\n}\n\n:host(.ion-color) ::slotted(ion-icon) {\n  color: var(--ion-color-contrast);\n}\n\n::slotted(ion-icon[slot]) {\n  margin-top: 12px;\n  margin-bottom: 12px;\n}\n\n::slotted(ion-icon[slot=start]) {\n  -webkit-margin-end: 32px;\n  margin-inline-end: 32px;\n}\n\n::slotted(ion-icon[slot=end]) {\n  -webkit-margin-start: 16px;\n  margin-inline-start: 16px;\n}\n\n::slotted(ion-note) {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n  align-self: flex-start;\n  font-size: 11px;\n}\n\n::slotted(ion-note[slot]) {\n  padding-left: 0;\n  padding-right: 0;\n  padding-top: 18px;\n  padding-bottom: 10px;\n}\n\n::slotted(ion-note[slot=start]) {\n  -webkit-padding-end: 16px;\n  padding-inline-end: 16px;\n}\n\n::slotted(ion-note[slot=end]) {\n  -webkit-padding-start: 16px;\n  padding-inline-start: 16px;\n}\n\n::slotted(ion-avatar) {\n  width: 40px;\n  height: 40px;\n}\n\n::slotted(ion-thumbnail) {\n  --size: 56px;\n}\n\n::slotted(ion-avatar),\n::slotted(ion-thumbnail) {\n  margin-top: 8px;\n  margin-bottom: 8px;\n}\n\n::slotted(ion-avatar[slot=start]),\n::slotted(ion-thumbnail[slot=start]) {\n  -webkit-margin-end: 16px;\n  margin-inline-end: 16px;\n}\n\n::slotted(ion-avatar[slot=end]),\n::slotted(ion-thumbnail[slot=end]) {\n  -webkit-margin-start: 16px;\n  margin-inline-start: 16px;\n}\n\n::slotted(h1) {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 2px;\n  font-size: 24px;\n  font-weight: normal;\n}\n\n::slotted(h2) {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 2px;\n  margin-bottom: 2px;\n  font-size: 16px;\n  font-weight: normal;\n}\n\n::slotted(h3, h4, h5, h6) {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 2px;\n  margin-bottom: 2px;\n  font-size: 14px;\n  font-weight: normal;\n  line-height: normal;\n}\n\n::slotted(p) {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 2px;\n  color: var(--ion-color-step-600, #666666);\n  font-size: 14px;\n  line-height: normal;\n  text-overflow: inherit;\n  overflow: inherit;\n}","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { Host, h } from '@stencil/core';\nimport { getIonMode } from '../../global/ionic-global';\nimport { createColorClasses } from '../../utils/theme';\n/**\n * @virtualProp {\"ios\" | \"md\"} mode - The mode determines which platform styles to use.\n *\n * @slot - Content is placed between the named slots if provided without a slot.\n * @slot start - Content is placed to the left of the divider text in LTR, and to the right in RTL.\n * @slot end - Content is placed to the right of the divider text in LTR, and to the left in RTL.\n */\nexport class ItemDivider {\n  constructor() {\n    this.color = undefined;\n    this.sticky = false;\n  }\n  render() {\n    const mode = getIonMode(this);\n    return (h(Host, { class: createColorClasses(this.color, {\n        [mode]: true,\n        'item-divider-sticky': this.sticky,\n        item: true,\n      }) }, h(\"slot\", { name: \"start\" }), h(\"div\", { class: \"item-divider-inner\" }, h(\"div\", { class: \"item-divider-wrapper\" }, h(\"slot\", null)), h(\"slot\", { name: \"end\" }))));\n  }\n  static get is() { return \"ion-item-divider\"; }\n  static get encapsulation() { return \"shadow\"; }\n  static get originalStyleUrls() {\n    return {\n      \"ios\": [\"item-divider.ios.scss\"],\n      \"md\": [\"item-divider.md.scss\"]\n    };\n  }\n  static get styleUrls() {\n    return {\n      \"ios\": [\"item-divider.ios.css\"],\n      \"md\": [\"item-divider.md.css\"]\n    };\n  }\n  static get properties() {\n    return {\n      \"color\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"Color\",\n          \"resolved\": \"\\\"danger\\\" | \\\"dark\\\" | \\\"light\\\" | \\\"medium\\\" | \\\"primary\\\" | \\\"secondary\\\" | \\\"success\\\" | \\\"tertiary\\\" | \\\"warning\\\" | string & Record<never, never> | undefined\",\n          \"references\": {\n            \"Color\": {\n              \"location\": \"import\",\n              \"path\": \"../../interface\"\n            }\n          }\n        },\n        \"required\": false,\n        \"optional\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"The color to use from your application's color palette.\\nDefault options are: `\\\"primary\\\"`, `\\\"secondary\\\"`, `\\\"tertiary\\\"`, `\\\"success\\\"`, `\\\"warning\\\"`, `\\\"danger\\\"`, `\\\"light\\\"`, `\\\"medium\\\"`, and `\\\"dark\\\"`.\\nFor more information on colors, see [theming](/docs/theming/basics).\"\n        },\n        \"attribute\": \"color\",\n        \"reflect\": true\n      },\n      \"sticky\": {\n        \"type\": \"boolean\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"boolean\",\n          \"resolved\": \"boolean\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"When it's set to `true`, the item-divider will stay visible when it reaches the top\\nof the viewport until the next `ion-item-divider` replaces it.\\n\\nThis feature relies in `position:sticky`:\\nhttps://caniuse.com/#feat=css-sticky\"\n        },\n        \"attribute\": \"sticky\",\n        \"reflect\": false,\n        \"defaultValue\": \"false\"\n      }\n    };\n  }\n  static get elementRef() { return \"el\"; }\n}\n"],"version":3}