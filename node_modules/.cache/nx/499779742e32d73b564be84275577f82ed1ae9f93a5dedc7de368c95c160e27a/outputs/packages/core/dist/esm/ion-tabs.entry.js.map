{"file":"ion-tabs.entry.js","mappings":";;AAAA,MAAM,OAAO,GAAG,qNAAqN;;MCSxN,IAAI;EACf;;;;;IACE,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;IAC3B,IAAI,CAAC,YAAY,GAAG,CAAC,EAAE;MACrB,MAAM,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,MAAM,CAAC;MAChC,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,KAAK,SAAS,EAAE;QACxC,MAAM,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC;QACpD,IAAI,MAAM,EAAE;UACV,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SACnB;OACF;WACI;QACH,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;OAClB;KACF,CAAC;IACF,IAAI,CAAC,WAAW,GAAG,SAAS,CAAC;IAC7B,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;GACxB;EACD,MAAM,iBAAiB;IACrB,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;MACnB,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC,QAAQ,CAAC,aAAa,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;KAC5F;IACD,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;MACnB,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;MACvB,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;QACnB,MAAM,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;OAC5B;KACF;IACD,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;GAC5B;EACD,mBAAmB;IACjB,MAAM,MAAM,GAAG,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,aAAa,CAAC,CAAC;IACpD,IAAI,MAAM,EAAE;MACV,MAAM,GAAG,GAAG,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG,GAAG,SAAS,CAAC;MAChE,MAAM,CAAC,WAAW,GAAG,GAAG,CAAC;KAC1B;GACF;EAMD,MAAM,MAAM,CAAC,GAAG;IACd,MAAM,WAAW,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;IAC3C,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,EAAE;MACnC,OAAO,KAAK,CAAC;KACd;IACD,MAAM,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;IAClC,MAAM,IAAI,CAAC,YAAY,EAAE,CAAC;IAC1B,IAAI,CAAC,SAAS,EAAE,CAAC;IACjB,OAAO,IAAI,CAAC;GACb;EAMD,MAAM,MAAM,CAAC,GAAG;IACd,OAAO,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;GAC/B;EAID,WAAW;IACT,OAAO,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG,GAAG,SAAS,CAAC,CAAC;GAC7E;EAED,MAAM,UAAU,CAAC,EAAE;IACjB,MAAM,WAAW,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;IAC1C,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,EAAE;MACnC,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,IAAI,CAAC,WAAW,EAAE,CAAC;KACtD;IACD,MAAM,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;IAClC,OAAO;MACL,OAAO,EAAE,IAAI;MACb,OAAO,EAAE,IAAI,CAAC,WAAW;MACzB,WAAW,EAAE,MAAM,IAAI,CAAC,SAAS,EAAE;KACpC,CAAC;GACH;EAED,MAAM,UAAU;IACd,IAAI,EAAE,CAAC;IACP,MAAM,KAAK,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,WAAW,MAAM,IAAI,IAAI,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC;IAClF,OAAO,KAAK,KAAK,SAAS,GAAG,EAAE,EAAE,EAAE,KAAK,EAAE,OAAO,EAAE,IAAI,CAAC,WAAW,EAAE,GAAG,SAAS,CAAC;GACnF;EACD,SAAS,CAAC,WAAW;IACnB,IAAI,IAAI,CAAC,aAAa,EAAE;MACtB,OAAO,OAAO,CAAC,MAAM,CAAC,iCAAiC,CAAC,CAAC;KAC1D;IACD,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;IAC1B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC;IACnC,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;IAC/B,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,WAAW,CAAC,GAAG,EAAE,CAAC,CAAC;IACtD,WAAW,CAAC,MAAM,GAAG,IAAI,CAAC;IAC1B,OAAO,OAAO,CAAC,OAAO,EAAE,CAAC;GAC1B;EACD,SAAS;IACP,MAAM,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;IACrC,MAAM,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;IACnC,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;IAC5B,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;IAC3B,IAAI,CAAC,WAAW,EAAE;MAChB,OAAO;KACR;IACD,IAAI,UAAU,KAAK,WAAW,EAAE;MAC9B,IAAI,UAAU,EAAE;QACd,UAAU,CAAC,MAAM,GAAG,KAAK,CAAC;OAC3B;MACD,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,WAAW,CAAC,GAAG,EAAE,CAAC,CAAC;KACtD;GACF;EACD,YAAY;IACV,IAAI,IAAI,CAAC,SAAS,EAAE;MAClB,MAAM,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC;MACpD,IAAI,MAAM,EAAE;QACV,OAAO,MAAM,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;OACrC;KACF;IACD,OAAO,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;GAC/B;EACD,YAAY,CAAC,WAAW;IACtB,MAAM,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC;IACpC,OAAO,WAAW,KAAK,SAAS,IAAI,WAAW,KAAK,UAAU,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC;GACvF;EACD,IAAI,IAAI;IACN,OAAO,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,gBAAgB,CAAC,SAAS,CAAC,CAAC,CAAC;GACxD;EACD,MAAM;IACJ,QAAQ,CAAC,CAAC,IAAI,EAAE,EAAE,mBAAmB,EAAE,IAAI,CAAC,YAAY,EAAE,EAAE,CAAC,CAAC,MAAM,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,EAAE,EAAE,KAAK,EAAE,YAAY,EAAE,EAAE,CAAC,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,MAAM,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,CAAC,CAAC,EAAE;GAC7K;;;AA6NH,MAAM,MAAM,GAAG,CAAC,IAAI,EAAE,GAAG;EACvB,MAAM,KAAK,GAAG,OAAO,GAAG,KAAK,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,GAAG,CAAC,GAAG,GAAG,CAAC;EAC9E,IAAI,CAAC,KAAK,EAAE;IACV,OAAO,CAAC,KAAK,CAAC,iBAAiB,KAAK,kBAAkB,CAAC,CAAC;GACzD;EACD,OAAO,KAAK,CAAC;AACf,CAAC,CAAC;;;;;","names":[],"sources":["../../node_modules/@ionic/core/dist/collection/components/tabs/tabs.css?tag=ion-tabs&encapsulation=shadow","../../node_modules/@ionic/core/dist/collection/components/tabs/tabs.js"],"sourcesContent":[":host {\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  display: flex;\n  position: absolute;\n  flex-direction: column;\n  width: 100%;\n  height: 100%;\n  contain: layout size style;\n  z-index: 0;\n}\n\n.tabs-inner {\n  position: relative;\n  flex: 1;\n  contain: layout size style;\n}","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { Host, h } from '@stencil/core';\n/**\n * @slot - Content is placed between the named slots if provided without a slot.\n * @slot top - Content is placed at the top of the screen.\n * @slot bottom - Content is placed at the bottom of the screen.\n */\nexport class Tabs {\n  constructor() {\n    this.transitioning = false;\n    this.onTabClicked = (ev) => {\n      const { href, tab } = ev.detail;\n      if (this.useRouter && href !== undefined) {\n        const router = document.querySelector('ion-router');\n        if (router) {\n          router.push(href);\n        }\n      }\n      else {\n        this.select(tab);\n      }\n    };\n    this.selectedTab = undefined;\n    this.useRouter = false;\n  }\n  async componentWillLoad() {\n    if (!this.useRouter) {\n      this.useRouter = !!document.querySelector('ion-router') && !this.el.closest('[no-router]');\n    }\n    if (!this.useRouter) {\n      const tabs = this.tabs;\n      if (tabs.length > 0) {\n        await this.select(tabs[0]);\n      }\n    }\n    this.ionNavWillLoad.emit();\n  }\n  componentWillRender() {\n    const tabBar = this.el.querySelector('ion-tab-bar');\n    if (tabBar) {\n      const tab = this.selectedTab ? this.selectedTab.tab : undefined;\n      tabBar.selectedTab = tab;\n    }\n  }\n  /**\n   * Select a tab by the value of its `tab` property or an element reference.\n   *\n   * @param tab The tab instance to select. If passed a string, it should be the value of the tab's `tab` property.\n   */\n  async select(tab) {\n    const selectedTab = getTab(this.tabs, tab);\n    if (!this.shouldSwitch(selectedTab)) {\n      return false;\n    }\n    await this.setActive(selectedTab);\n    await this.notifyRouter();\n    this.tabSwitch();\n    return true;\n  }\n  /**\n   * Get a specific tab by the value of its `tab` property or an element reference.\n   *\n   * @param tab The tab instance to select. If passed a string, it should be the value of the tab's `tab` property.\n   */\n  async getTab(tab) {\n    return getTab(this.tabs, tab);\n  }\n  /**\n   * Get the currently selected tab.\n   */\n  getSelected() {\n    return Promise.resolve(this.selectedTab ? this.selectedTab.tab : undefined);\n  }\n  /** @internal */\n  async setRouteId(id) {\n    const selectedTab = getTab(this.tabs, id);\n    if (!this.shouldSwitch(selectedTab)) {\n      return { changed: false, element: this.selectedTab };\n    }\n    await this.setActive(selectedTab);\n    return {\n      changed: true,\n      element: this.selectedTab,\n      markVisible: () => this.tabSwitch(),\n    };\n  }\n  /** @internal */\n  async getRouteId() {\n    var _a;\n    const tabId = (_a = this.selectedTab) === null || _a === void 0 ? void 0 : _a.tab;\n    return tabId !== undefined ? { id: tabId, element: this.selectedTab } : undefined;\n  }\n  setActive(selectedTab) {\n    if (this.transitioning) {\n      return Promise.reject('transitioning already happening');\n    }\n    this.transitioning = true;\n    this.leavingTab = this.selectedTab;\n    this.selectedTab = selectedTab;\n    this.ionTabsWillChange.emit({ tab: selectedTab.tab });\n    selectedTab.active = true;\n    return Promise.resolve();\n  }\n  tabSwitch() {\n    const selectedTab = this.selectedTab;\n    const leavingTab = this.leavingTab;\n    this.leavingTab = undefined;\n    this.transitioning = false;\n    if (!selectedTab) {\n      return;\n    }\n    if (leavingTab !== selectedTab) {\n      if (leavingTab) {\n        leavingTab.active = false;\n      }\n      this.ionTabsDidChange.emit({ tab: selectedTab.tab });\n    }\n  }\n  notifyRouter() {\n    if (this.useRouter) {\n      const router = document.querySelector('ion-router');\n      if (router) {\n        return router.navChanged('forward');\n      }\n    }\n    return Promise.resolve(false);\n  }\n  shouldSwitch(selectedTab) {\n    const leavingTab = this.selectedTab;\n    return selectedTab !== undefined && selectedTab !== leavingTab && !this.transitioning;\n  }\n  get tabs() {\n    return Array.from(this.el.querySelectorAll('ion-tab'));\n  }\n  render() {\n    return (h(Host, { onIonTabButtonClick: this.onTabClicked }, h(\"slot\", { name: \"top\" }), h(\"div\", { class: \"tabs-inner\" }, h(\"slot\", null)), h(\"slot\", { name: \"bottom\" })));\n  }\n  static get is() { return \"ion-tabs\"; }\n  static get encapsulation() { return \"shadow\"; }\n  static get originalStyleUrls() {\n    return {\n      \"$\": [\"tabs.scss\"]\n    };\n  }\n  static get styleUrls() {\n    return {\n      \"$\": [\"tabs.css\"]\n    };\n  }\n  static get properties() {\n    return {\n      \"useRouter\": {\n        \"type\": \"boolean\",\n        \"mutable\": true,\n        \"complexType\": {\n          \"original\": \"boolean\",\n          \"resolved\": \"boolean\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [{\n              \"name\": \"internal\",\n              \"text\": undefined\n            }],\n          \"text\": \"\"\n        },\n        \"attribute\": \"use-router\",\n        \"reflect\": false,\n        \"defaultValue\": \"false\"\n      }\n    };\n  }\n  static get states() {\n    return {\n      \"selectedTab\": {}\n    };\n  }\n  static get events() {\n    return [{\n        \"method\": \"ionNavWillLoad\",\n        \"name\": \"ionNavWillLoad\",\n        \"bubbles\": true,\n        \"cancelable\": true,\n        \"composed\": true,\n        \"docs\": {\n          \"tags\": [{\n              \"name\": \"internal\",\n              \"text\": undefined\n            }],\n          \"text\": \"Emitted when the navigation will load a component.\"\n        },\n        \"complexType\": {\n          \"original\": \"void\",\n          \"resolved\": \"void\",\n          \"references\": {}\n        }\n      }, {\n        \"method\": \"ionTabsWillChange\",\n        \"name\": \"ionTabsWillChange\",\n        \"bubbles\": false,\n        \"cancelable\": true,\n        \"composed\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Emitted when the navigation is about to transition to a new component.\"\n        },\n        \"complexType\": {\n          \"original\": \"{ tab: string }\",\n          \"resolved\": \"{ tab: string; }\",\n          \"references\": {}\n        }\n      }, {\n        \"method\": \"ionTabsDidChange\",\n        \"name\": \"ionTabsDidChange\",\n        \"bubbles\": false,\n        \"cancelable\": true,\n        \"composed\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Emitted when the navigation has finished transitioning to a new component.\"\n        },\n        \"complexType\": {\n          \"original\": \"{ tab: string }\",\n          \"resolved\": \"{ tab: string; }\",\n          \"references\": {}\n        }\n      }];\n  }\n  static get methods() {\n    return {\n      \"select\": {\n        \"complexType\": {\n          \"signature\": \"(tab: string | HTMLIonTabElement) => Promise<boolean>\",\n          \"parameters\": [{\n              \"tags\": [{\n                  \"name\": \"param\",\n                  \"text\": \"tab The tab instance to select. If passed a string, it should be the value of the tab's `tab` property.\"\n                }],\n              \"text\": \"The tab instance to select. If passed a string, it should be the value of the tab's `tab` property.\"\n            }],\n          \"references\": {\n            \"Promise\": {\n              \"location\": \"global\"\n            },\n            \"HTMLIonTabElement\": {\n              \"location\": \"global\"\n            }\n          },\n          \"return\": \"Promise<boolean>\"\n        },\n        \"docs\": {\n          \"text\": \"Select a tab by the value of its `tab` property or an element reference.\",\n          \"tags\": [{\n              \"name\": \"param\",\n              \"text\": \"tab The tab instance to select. If passed a string, it should be the value of the tab's `tab` property.\"\n            }]\n        }\n      },\n      \"getTab\": {\n        \"complexType\": {\n          \"signature\": \"(tab: string | HTMLIonTabElement) => Promise<HTMLIonTabElement | undefined>\",\n          \"parameters\": [{\n              \"tags\": [{\n                  \"name\": \"param\",\n                  \"text\": \"tab The tab instance to select. If passed a string, it should be the value of the tab's `tab` property.\"\n                }],\n              \"text\": \"The tab instance to select. If passed a string, it should be the value of the tab's `tab` property.\"\n            }],\n          \"references\": {\n            \"Promise\": {\n              \"location\": \"global\"\n            },\n            \"HTMLIonTabElement\": {\n              \"location\": \"global\"\n            }\n          },\n          \"return\": \"Promise<HTMLIonTabElement | undefined>\"\n        },\n        \"docs\": {\n          \"text\": \"Get a specific tab by the value of its `tab` property or an element reference.\",\n          \"tags\": [{\n              \"name\": \"param\",\n              \"text\": \"tab The tab instance to select. If passed a string, it should be the value of the tab's `tab` property.\"\n            }]\n        }\n      },\n      \"getSelected\": {\n        \"complexType\": {\n          \"signature\": \"() => Promise<string | undefined>\",\n          \"parameters\": [],\n          \"references\": {\n            \"Promise\": {\n              \"location\": \"global\"\n            }\n          },\n          \"return\": \"Promise<string | undefined>\"\n        },\n        \"docs\": {\n          \"text\": \"Get the currently selected tab.\",\n          \"tags\": []\n        }\n      },\n      \"setRouteId\": {\n        \"complexType\": {\n          \"signature\": \"(id: string) => Promise<RouteWrite>\",\n          \"parameters\": [{\n              \"tags\": [],\n              \"text\": \"\"\n            }],\n          \"references\": {\n            \"Promise\": {\n              \"location\": \"global\"\n            },\n            \"RouteWrite\": {\n              \"location\": \"import\",\n              \"path\": \"../router/utils/interface\"\n            }\n          },\n          \"return\": \"Promise<RouteWrite>\"\n        },\n        \"docs\": {\n          \"text\": \"\",\n          \"tags\": [{\n              \"name\": \"internal\",\n              \"text\": undefined\n            }]\n        }\n      },\n      \"getRouteId\": {\n        \"complexType\": {\n          \"signature\": \"() => Promise<RouteID | undefined>\",\n          \"parameters\": [],\n          \"references\": {\n            \"Promise\": {\n              \"location\": \"global\"\n            },\n            \"RouteID\": {\n              \"location\": \"import\",\n              \"path\": \"../router/utils/interface\"\n            }\n          },\n          \"return\": \"Promise<RouteID | undefined>\"\n        },\n        \"docs\": {\n          \"text\": \"\",\n          \"tags\": [{\n              \"name\": \"internal\",\n              \"text\": undefined\n            }]\n        }\n      }\n    };\n  }\n  static get elementRef() { return \"el\"; }\n}\nconst getTab = (tabs, tab) => {\n  const tabEl = typeof tab === 'string' ? tabs.find((t) => t.tab === tab) : tab;\n  if (!tabEl) {\n    console.error(`tab with id: \"${tabEl}\" does not exist`);\n  }\n  return tabEl;\n};\n"],"version":3}