{"version":3,"file":"button.js","sourceRoot":"","sources":["../../../../../../src/components/button/button.tsx"],"names":[],"mappings":"AACA,OAAO,EAAE,SAAS,EAAE,KAAK,EAAgB,CAAC,EAAE,IAAI,EAAE,MAAM,eAAe,CAAA;AAOvE,MAAM,OAAO,UAAU;;IAYb,gBAAW,GAAG,GAAG,EAAE;MACzB,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAA;IACvB,CAAC,CAAA;iBAbwC,SAAS;gBACJ,OAAO;gBACP,SAAS;;;;gBAIT,QAAQ;gBACjC,IAAI;;EAQzB,MAAM;IACJ,OAAO,CACL,kBACE,KAAK,EAAE,IAAI,CAAC,KAAK,EACjB,IAAI,EAAE,IAAI,CAAC,IAAI,EACf,KAAK,EAAE,IAAI,CAAC,KAAK,EACjB,QAAQ,EAAE,IAAI,CAAC,QAAQ,EACvB,IAAI,EAAE,IAAI,CAAC,IAAI,EACf,OAAO,EAAE,IAAI,CAAC,WAAW;MAEzB,eAAQ,CACG,CACd,CAAA;EACH,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACF","sourcesContent":["import { Mode } from '@ionic/core'\nimport { Component, Event, EventEmitter, h, Prop } from '@stencil/core'\n\n@Component({\n  tag: 'atom-button',\n  styleUrl: 'button.scss',\n  shadow: true,\n})\nexport class AtomButton {\n  @Prop() color: 'primary' | 'secondary' = 'primary'\n  @Prop() fill: 'clear' | 'outline' | 'solid' = 'solid'\n  @Prop() size: 'small' | 'default' | 'large' = 'default'\n  @Prop() expand?: 'block' | 'full'\n  @Prop() shape?: 'round'\n  @Prop() disabled?: boolean\n  @Prop() type: 'submit' | 'reset' | 'button' = 'button'\n  @Prop() mode: Mode = 'md'\n\n  @Event() atomClick: EventEmitter\n\n  private handleClick = () => {\n    this.atomClick.emit()\n  }\n\n  render() {\n    return (\n      <ion-button\n        color={this.color}\n        fill={this.fill}\n        shape={this.shape}\n        disabled={this.disabled}\n        type={this.type}\n        onClick={this.handleClick}\n      >\n        <slot />\n      </ion-button>\n    )\n  }\n}\n"]}