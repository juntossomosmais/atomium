{"version":3,"names":["buttonCss","AtomButton","this","handleClick","atomClick","emit","render","h","color","fill","shape","disabled","type","onClick"],"sources":["./src/components/button/button.scss?tag=atom-button&encapsulation=shadow","./src/components/button/button.tsx"],"sourcesContent":[":host {\n  display: inline-block;\n}\n","import { Mode } from '@ionic/core'\nimport { Component, Event, EventEmitter, h, Prop } from '@stencil/core'\n\n@Component({\n  tag: 'atom-button',\n  styleUrl: 'button.scss',\n  shadow: true,\n})\nexport class AtomButton {\n  @Prop() color: 'primary' | 'secondary' = 'primary'\n  @Prop() fill: 'clear' | 'outline' | 'solid' = 'solid'\n  @Prop() size: 'small' | 'default' | 'large' = 'default'\n  @Prop() expand?: 'block' | 'full'\n  @Prop() shape?: 'round'\n  @Prop() disabled?: boolean\n  @Prop() type: 'submit' | 'reset' | 'button' = 'button'\n  @Prop() mode: Mode = 'md'\n\n  @Event() atomClick: EventEmitter\n\n  private handleClick = () => {\n    this.atomClick.emit()\n  }\n\n  render() {\n    return (\n      <ion-button\n        color={this.color}\n        fill={this.fill}\n        shape={this.shape}\n        disabled={this.disabled}\n        type={this.type}\n        onClick={this.handleClick}\n      >\n        <slot />\n      </ion-button>\n    )\n  }\n}\n"],"mappings":"kDAAA,MAAMA,EAAY,urQ,MCQLC,EAAU,M,8DAYbC,KAAAC,YAAc,KACpBD,KAAKE,UAAUC,MAAM,E,WAZkB,U,UACK,Q,UACA,U,6EAIA,S,UACzB,I,CAQrBC,SACE,OACEC,EAAA,cACEC,MAAON,KAAKM,MACZC,KAAMP,KAAKO,KACXC,MAAOR,KAAKQ,MACZC,SAAUT,KAAKS,SACfC,KAAMV,KAAKU,KACXC,QAASX,KAAKC,aAEdI,EAAA,a"}