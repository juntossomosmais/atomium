{"version":3,"file":"mapperTab.js","sources":["../../node_modules/zod/lib/helpers/util.js","../../node_modules/zod/lib/ZodError.js","../../node_modules/zod/lib/helpers/parseUtil.js","../../node_modules/zod/lib/helpers/typeAliases.js","../../node_modules/zod/lib/helpers/errorUtil.js","../../node_modules/zod/lib/types.js","../../node_modules/zod/lib/external.js","../../node_modules/zod/lib/index.js","../cjs/protocol/protocol.js","../cjs/protocol-parser/protocol-parser.js","../cjs/utils/EventEmitter.js","../../node_modules/mitt/dist/mitt.js","../cjs/utils/log.js","../cjs/utils/processingQueue.js","../cjs/utils/unitConversions.js","../cjs/utils/deferred.js","../cjs/bidiMapper/domains/script/scriptEvaluator.js","../cjs/bidiMapper/domains/script/realm.js","../cjs/bidiMapper/domains/context/browsingContextImpl.js","../cjs/bidiMapper/domains/log/logHelper.js","../cjs/bidiMapper/domains/log/logManager.js","../cjs/bidiMapper/domains/network/networkRequest.js","../cjs/bidiMapper/domains/network/networkProcessor.js","../cjs/bidiMapper/domains/context/cdpTarget.js","../cjs/bidiMapper/domains/context/browsingContextProcessor.js","../cjs/bidiMapper/OutgoingBidiMessage.js","../cjs/bidiMapper/CommandProcessor.js","../cjs/bidiMapper/domains/context/browsingContextStorage.js","../cjs/utils/buffer.js","../cjs/utils/idWrapper.js","../cjs/bidiMapper/domains/events/SubscriptionManager.js","../cjs/bidiMapper/domains/events/EventManager.js","../cjs/bidiMapper/domains/script/realmStorage.js","../cjs/bidiMapper/BidiServer.js","../cjs/cdp/cdpClient.js","../cjs/cdp/cdpConnection.js","../cjs/utils/websocketTransport.js","../cjs/cdp/index.js","../cjs/bidiTab/mapperTabPage.js","../cjs/bidiTab/bidiTab.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getParsedType = exports.ZodParsedType = exports.util = void 0;\nvar util;\n(function (util) {\n    function assertNever(_x) {\n        throw new Error();\n    }\n    util.assertNever = assertNever;\n    util.arrayToEnum = (items) => {\n        const obj = {};\n        for (const item of items) {\n            obj[item] = item;\n        }\n        return obj;\n    };\n    util.getValidEnumValues = (obj) => {\n        const validKeys = util.objectKeys(obj).filter((k) => typeof obj[obj[k]] !== \"number\");\n        const filtered = {};\n        for (const k of validKeys) {\n            filtered[k] = obj[k];\n        }\n        return util.objectValues(filtered);\n    };\n    util.objectValues = (obj) => {\n        return util.objectKeys(obj).map(function (e) {\n            return obj[e];\n        });\n    };\n    util.objectKeys = typeof Object.keys === \"function\" // eslint-disable-line ban/ban\n        ? (obj) => Object.keys(obj) // eslint-disable-line ban/ban\n        : (object) => {\n            const keys = [];\n            for (const key in object) {\n                if (Object.prototype.hasOwnProperty.call(object, key)) {\n                    keys.push(key);\n                }\n            }\n            return keys;\n        };\n    util.find = (arr, checker) => {\n        for (const item of arr) {\n            if (checker(item))\n                return item;\n        }\n        return undefined;\n    };\n    util.isInteger = typeof Number.isInteger === \"function\"\n        ? (val) => Number.isInteger(val) // eslint-disable-line ban/ban\n        : (val) => typeof val === \"number\" && isFinite(val) && Math.floor(val) === val;\n    function joinValues(array, separator = \" | \") {\n        return array\n            .map((val) => (typeof val === \"string\" ? `'${val}'` : val))\n            .join(separator);\n    }\n    util.joinValues = joinValues;\n})(util = exports.util || (exports.util = {}));\nexports.ZodParsedType = util.arrayToEnum([\n    \"string\",\n    \"nan\",\n    \"number\",\n    \"integer\",\n    \"float\",\n    \"boolean\",\n    \"date\",\n    \"bigint\",\n    \"symbol\",\n    \"function\",\n    \"undefined\",\n    \"null\",\n    \"array\",\n    \"object\",\n    \"unknown\",\n    \"promise\",\n    \"void\",\n    \"never\",\n    \"map\",\n    \"set\",\n]);\nconst getParsedType = (data) => {\n    const t = typeof data;\n    switch (t) {\n        case \"undefined\":\n            return exports.ZodParsedType.undefined;\n        case \"string\":\n            return exports.ZodParsedType.string;\n        case \"number\":\n            return isNaN(data) ? exports.ZodParsedType.nan : exports.ZodParsedType.number;\n        case \"boolean\":\n            return exports.ZodParsedType.boolean;\n        case \"function\":\n            return exports.ZodParsedType.function;\n        case \"bigint\":\n            return exports.ZodParsedType.bigint;\n        case \"object\":\n            if (Array.isArray(data)) {\n                return exports.ZodParsedType.array;\n            }\n            if (data === null) {\n                return exports.ZodParsedType.null;\n            }\n            if (data.then &&\n                typeof data.then === \"function\" &&\n                data.catch &&\n                typeof data.catch === \"function\") {\n                return exports.ZodParsedType.promise;\n            }\n            if (typeof Map !== \"undefined\" && data instanceof Map) {\n                return exports.ZodParsedType.map;\n            }\n            if (typeof Set !== \"undefined\" && data instanceof Set) {\n                return exports.ZodParsedType.set;\n            }\n            if (typeof Date !== \"undefined\" && data instanceof Date) {\n                return exports.ZodParsedType.date;\n            }\n            return exports.ZodParsedType.object;\n        default:\n            return exports.ZodParsedType.unknown;\n    }\n};\nexports.getParsedType = getParsedType;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.setErrorMap = exports.overrideErrorMap = exports.defaultErrorMap = exports.ZodError = exports.quotelessJson = exports.ZodIssueCode = void 0;\nconst util_1 = require(\"./helpers/util\");\nexports.ZodIssueCode = util_1.util.arrayToEnum([\n    \"invalid_type\",\n    \"invalid_literal\",\n    \"custom\",\n    \"invalid_union\",\n    \"invalid_union_discriminator\",\n    \"invalid_enum_value\",\n    \"unrecognized_keys\",\n    \"invalid_arguments\",\n    \"invalid_return_type\",\n    \"invalid_date\",\n    \"invalid_string\",\n    \"too_small\",\n    \"too_big\",\n    \"invalid_intersection_types\",\n    \"not_multiple_of\",\n]);\nconst quotelessJson = (obj) => {\n    const json = JSON.stringify(obj, null, 2);\n    return json.replace(/\"([^\"]+)\":/g, \"$1:\");\n};\nexports.quotelessJson = quotelessJson;\nclass ZodError extends Error {\n    constructor(issues) {\n        super();\n        this.issues = [];\n        this.addIssue = (sub) => {\n            this.issues = [...this.issues, sub];\n        };\n        this.addIssues = (subs = []) => {\n            this.issues = [...this.issues, ...subs];\n        };\n        const actualProto = new.target.prototype;\n        if (Object.setPrototypeOf) {\n            // eslint-disable-next-line ban/ban\n            Object.setPrototypeOf(this, actualProto);\n        }\n        else {\n            this.__proto__ = actualProto;\n        }\n        this.name = \"ZodError\";\n        this.issues = issues;\n    }\n    get errors() {\n        return this.issues;\n    }\n    format(_mapper) {\n        const mapper = _mapper ||\n            function (issue) {\n                return issue.message;\n            };\n        const fieldErrors = { _errors: [] };\n        const processError = (error) => {\n            for (const issue of error.issues) {\n                if (issue.code === \"invalid_union\") {\n                    issue.unionErrors.map(processError);\n                }\n                else if (issue.code === \"invalid_return_type\") {\n                    processError(issue.returnTypeError);\n                }\n                else if (issue.code === \"invalid_arguments\") {\n                    processError(issue.argumentsError);\n                }\n                else if (issue.path.length === 0) {\n                    fieldErrors._errors.push(mapper(issue));\n                }\n                else {\n                    let curr = fieldErrors;\n                    let i = 0;\n                    while (i < issue.path.length) {\n                        const el = issue.path[i];\n                        const terminal = i === issue.path.length - 1;\n                        if (!terminal) {\n                            curr[el] = curr[el] || { _errors: [] };\n                            // if (typeof el === \"string\") {\n                            //   curr[el] = curr[el] || { _errors: [] };\n                            // } else if (typeof el === \"number\") {\n                            //   const errorArray: any = [];\n                            //   errorArray._errors = [];\n                            //   curr[el] = curr[el] || errorArray;\n                            // }\n                        }\n                        else {\n                            curr[el] = curr[el] || { _errors: [] };\n                            curr[el]._errors.push(mapper(issue));\n                        }\n                        curr = curr[el];\n                        i++;\n                    }\n                }\n            }\n        };\n        processError(this);\n        return fieldErrors;\n    }\n    toString() {\n        return this.message;\n    }\n    get message() {\n        return JSON.stringify(this.issues, null, 2);\n    }\n    get isEmpty() {\n        return this.issues.length === 0;\n    }\n    flatten(mapper = (issue) => issue.message) {\n        const fieldErrors = {};\n        const formErrors = [];\n        for (const sub of this.issues) {\n            if (sub.path.length > 0) {\n                fieldErrors[sub.path[0]] = fieldErrors[sub.path[0]] || [];\n                fieldErrors[sub.path[0]].push(mapper(sub));\n            }\n            else {\n                formErrors.push(mapper(sub));\n            }\n        }\n        return { formErrors, fieldErrors };\n    }\n    get formErrors() {\n        return this.flatten();\n    }\n}\nexports.ZodError = ZodError;\nZodError.create = (issues) => {\n    const error = new ZodError(issues);\n    return error;\n};\nconst defaultErrorMap = (issue, _ctx) => {\n    let message;\n    switch (issue.code) {\n        case exports.ZodIssueCode.invalid_type:\n            if (issue.received === util_1.ZodParsedType.undefined) {\n                message = \"Required\";\n            }\n            else {\n                message = `Expected ${issue.expected}, received ${issue.received}`;\n            }\n            break;\n        case exports.ZodIssueCode.invalid_literal:\n            message = `Invalid literal value, expected ${JSON.stringify(issue.expected)}`;\n            break;\n        case exports.ZodIssueCode.unrecognized_keys:\n            message = `Unrecognized key(s) in object: ${util_1.util.joinValues(issue.keys, \", \")}`;\n            break;\n        case exports.ZodIssueCode.invalid_union:\n            message = `Invalid input`;\n            break;\n        case exports.ZodIssueCode.invalid_union_discriminator:\n            message = `Invalid discriminator value. Expected ${util_1.util.joinValues(issue.options)}`;\n            break;\n        case exports.ZodIssueCode.invalid_enum_value:\n            message = `Invalid enum value. Expected ${util_1.util.joinValues(issue.options)}, received '${issue.received}'`;\n            break;\n        case exports.ZodIssueCode.invalid_arguments:\n            message = `Invalid function arguments`;\n            break;\n        case exports.ZodIssueCode.invalid_return_type:\n            message = `Invalid function return type`;\n            break;\n        case exports.ZodIssueCode.invalid_date:\n            message = `Invalid date`;\n            break;\n        case exports.ZodIssueCode.invalid_string:\n            if (issue.validation !== \"regex\")\n                message = `Invalid ${issue.validation}`;\n            else\n                message = \"Invalid\";\n            break;\n        case exports.ZodIssueCode.too_small:\n            if (issue.type === \"array\")\n                message = `Array must contain ${issue.inclusive ? `at least` : `more than`} ${issue.minimum} element(s)`;\n            else if (issue.type === \"string\")\n                message = `String must contain ${issue.inclusive ? `at least` : `over`} ${issue.minimum} character(s)`;\n            else if (issue.type === \"number\")\n                message = `Number must be greater than ${issue.inclusive ? `or equal to ` : ``}${issue.minimum}`;\n            else\n                message = \"Invalid input\";\n            break;\n        case exports.ZodIssueCode.too_big:\n            if (issue.type === \"array\")\n                message = `Array must contain ${issue.inclusive ? `at most` : `less than`} ${issue.maximum} element(s)`;\n            else if (issue.type === \"string\")\n                message = `String must contain ${issue.inclusive ? `at most` : `under`} ${issue.maximum} character(s)`;\n            else if (issue.type === \"number\")\n                message = `Number must be less than ${issue.inclusive ? `or equal to ` : ``}${issue.maximum}`;\n            else\n                message = \"Invalid input\";\n            break;\n        case exports.ZodIssueCode.custom:\n            message = `Invalid input`;\n            break;\n        case exports.ZodIssueCode.invalid_intersection_types:\n            message = `Intersection results could not be merged`;\n            break;\n        case exports.ZodIssueCode.not_multiple_of:\n            message = `Number must be a multiple of ${issue.multipleOf}`;\n            break;\n        default:\n            message = _ctx.defaultError;\n            util_1.util.assertNever(issue);\n    }\n    return { message };\n};\nexports.defaultErrorMap = defaultErrorMap;\nexports.overrideErrorMap = exports.defaultErrorMap;\nconst setErrorMap = (map) => {\n    exports.overrideErrorMap = map;\n};\nexports.setErrorMap = setErrorMap;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isAsync = exports.isValid = exports.isDirty = exports.isAborted = exports.OK = exports.DIRTY = exports.INVALID = exports.ParseStatus = exports.addIssueToContext = exports.EMPTY_PATH = exports.makeIssue = void 0;\nconst ZodError_1 = require(\"../ZodError\");\nconst makeIssue = (params) => {\n    const { data, path, errorMaps, issueData } = params;\n    const fullPath = [...path, ...(issueData.path || [])];\n    const fullIssue = {\n        ...issueData,\n        path: fullPath,\n    };\n    let errorMessage = \"\";\n    const maps = errorMaps\n        .filter((m) => !!m)\n        .slice()\n        .reverse();\n    for (const map of maps) {\n        errorMessage = map(fullIssue, { data, defaultError: errorMessage }).message;\n    }\n    return {\n        ...issueData,\n        path: fullPath,\n        message: issueData.message || errorMessage,\n    };\n};\nexports.makeIssue = makeIssue;\nexports.EMPTY_PATH = [];\nfunction addIssueToContext(ctx, issueData) {\n    const issue = exports.makeIssue({\n        issueData: issueData,\n        data: ctx.data,\n        path: ctx.path,\n        errorMaps: [\n            ctx.common.contextualErrorMap,\n            ctx.schemaErrorMap,\n            ZodError_1.overrideErrorMap,\n            ZodError_1.defaultErrorMap,\n        ].filter((x) => !!x),\n    });\n    ctx.common.issues.push(issue);\n}\nexports.addIssueToContext = addIssueToContext;\nclass ParseStatus {\n    constructor() {\n        this.value = \"valid\";\n    }\n    dirty() {\n        if (this.value === \"valid\")\n            this.value = \"dirty\";\n    }\n    abort() {\n        if (this.value !== \"aborted\")\n            this.value = \"aborted\";\n    }\n    static mergeArray(status, results) {\n        const arrayValue = [];\n        for (const s of results) {\n            if (s.status === \"aborted\")\n                return exports.INVALID;\n            if (s.status === \"dirty\")\n                status.dirty();\n            arrayValue.push(s.value);\n        }\n        return { status: status.value, value: arrayValue };\n    }\n    static async mergeObjectAsync(status, pairs) {\n        const syncPairs = [];\n        for (const pair of pairs) {\n            syncPairs.push({\n                key: await pair.key,\n                value: await pair.value,\n            });\n        }\n        return ParseStatus.mergeObjectSync(status, syncPairs);\n    }\n    static mergeObjectSync(status, pairs) {\n        const finalObject = {};\n        for (const pair of pairs) {\n            const { key, value } = pair;\n            if (key.status === \"aborted\")\n                return exports.INVALID;\n            if (value.status === \"aborted\")\n                return exports.INVALID;\n            if (key.status === \"dirty\")\n                status.dirty();\n            if (value.status === \"dirty\")\n                status.dirty();\n            if (typeof value.value !== \"undefined\" || pair.alwaysSet) {\n                finalObject[key.value] = value.value;\n            }\n        }\n        return { status: status.value, value: finalObject };\n    }\n}\nexports.ParseStatus = ParseStatus;\nexports.INVALID = Object.freeze({\n    status: \"aborted\",\n});\nconst DIRTY = (value) => ({ status: \"dirty\", value });\nexports.DIRTY = DIRTY;\nconst OK = (value) => ({ status: \"valid\", value });\nexports.OK = OK;\nconst isAborted = (x) => x.status === \"aborted\";\nexports.isAborted = isAborted;\nconst isDirty = (x) => x.status === \"dirty\";\nexports.isDirty = isDirty;\nconst isValid = (x) => x.status === \"valid\";\nexports.isValid = isValid;\nconst isAsync = (x) => typeof Promise !== undefined && x instanceof Promise;\nexports.isAsync = isAsync;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.errorUtil = void 0;\nvar errorUtil;\n(function (errorUtil) {\n    errorUtil.errToObj = (message) => typeof message === \"string\" ? { message } : message || {};\n    errorUtil.toString = (message) => typeof message === \"string\" ? message : message === null || message === void 0 ? void 0 : message.message;\n})(errorUtil = exports.errorUtil || (exports.errorUtil = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.intersection = exports.instanceof = exports.function = exports.enum = exports.effect = exports.discriminatedUnion = exports.date = exports.boolean = exports.bigint = exports.array = exports.any = exports.ZodFirstPartyTypeKind = exports.late = exports.ZodSchema = exports.Schema = exports.custom = exports.ZodNaN = exports.ZodDefault = exports.ZodNullable = exports.ZodOptional = exports.ZodTransformer = exports.ZodEffects = exports.ZodPromise = exports.ZodNativeEnum = exports.ZodEnum = exports.ZodLiteral = exports.ZodLazy = exports.ZodFunction = exports.ZodSet = exports.ZodMap = exports.ZodRecord = exports.ZodTuple = exports.ZodIntersection = exports.ZodDiscriminatedUnion = exports.ZodUnion = exports.ZodObject = exports.objectUtil = exports.ZodArray = exports.ZodVoid = exports.ZodNever = exports.ZodUnknown = exports.ZodAny = exports.ZodNull = exports.ZodUndefined = exports.ZodDate = exports.ZodBoolean = exports.ZodBigInt = exports.ZodNumber = exports.ZodString = exports.ZodType = void 0;\nexports.void = exports.unknown = exports.union = exports.undefined = exports.tuple = exports.transformer = exports.string = exports.strictObject = exports.set = exports.record = exports.promise = exports.preprocess = exports.ostring = exports.optional = exports.onumber = exports.oboolean = exports.object = exports.number = exports.nullable = exports.null = exports.never = exports.nativeEnum = exports.nan = exports.map = exports.literal = exports.lazy = void 0;\nconst errorUtil_1 = require(\"./helpers/errorUtil\");\nconst parseUtil_1 = require(\"./helpers/parseUtil\");\nconst util_1 = require(\"./helpers/util\");\nconst ZodError_1 = require(\"./ZodError\");\nclass ParseInputLazyPath {\n    constructor(parent, value, path, key) {\n        this.parent = parent;\n        this.data = value;\n        this._path = path;\n        this._key = key;\n    }\n    get path() {\n        return this._path.concat(this._key);\n    }\n}\nconst handleResult = (ctx, result) => {\n    if (parseUtil_1.isValid(result)) {\n        return { success: true, data: result.value };\n    }\n    else {\n        if (!ctx.common.issues.length) {\n            throw new Error(\"Validation failed but no issues detected.\");\n        }\n        const error = new ZodError_1.ZodError(ctx.common.issues);\n        return { success: false, error };\n    }\n};\nfunction processCreateParams(params) {\n    if (!params)\n        return {};\n    const { errorMap, invalid_type_error, required_error, description } = params;\n    if (errorMap && (invalid_type_error || required_error)) {\n        throw new Error(`Can't use \"invalid\" or \"required\" in conjunction with custom error map.`);\n    }\n    if (errorMap)\n        return { errorMap: errorMap, description };\n    const customMap = (iss, ctx) => {\n        if (iss.code !== \"invalid_type\")\n            return { message: ctx.defaultError };\n        if (typeof ctx.data === \"undefined\" && required_error)\n            return { message: required_error };\n        if (params.invalid_type_error)\n            return { message: params.invalid_type_error };\n        return { message: ctx.defaultError };\n    };\n    return { errorMap: customMap, description };\n}\nclass ZodType {\n    constructor(def) {\n        /** Alias of safeParseAsync */\n        this.spa = this.safeParseAsync;\n        this.superRefine = this._refinement;\n        this._def = def;\n        this.parse = this.parse.bind(this);\n        this.safeParse = this.safeParse.bind(this);\n        this.parseAsync = this.parseAsync.bind(this);\n        this.safeParseAsync = this.safeParseAsync.bind(this);\n        this.spa = this.spa.bind(this);\n        this.refine = this.refine.bind(this);\n        this.refinement = this.refinement.bind(this);\n        this.superRefine = this.superRefine.bind(this);\n        this.optional = this.optional.bind(this);\n        this.nullable = this.nullable.bind(this);\n        this.nullish = this.nullish.bind(this);\n        this.array = this.array.bind(this);\n        this.promise = this.promise.bind(this);\n        this.or = this.or.bind(this);\n        this.and = this.and.bind(this);\n        this.transform = this.transform.bind(this);\n        this.default = this.default.bind(this);\n        this.describe = this.describe.bind(this);\n        this.isNullable = this.isNullable.bind(this);\n        this.isOptional = this.isOptional.bind(this);\n    }\n    get description() {\n        return this._def.description;\n    }\n    _getType(input) {\n        return util_1.getParsedType(input.data);\n    }\n    _getOrReturnCtx(input, ctx) {\n        return (ctx || {\n            common: input.parent.common,\n            data: input.data,\n            parsedType: util_1.getParsedType(input.data),\n            schemaErrorMap: this._def.errorMap,\n            path: input.path,\n            parent: input.parent,\n        });\n    }\n    _processInputParams(input) {\n        return {\n            status: new parseUtil_1.ParseStatus(),\n            ctx: {\n                common: input.parent.common,\n                data: input.data,\n                parsedType: util_1.getParsedType(input.data),\n                schemaErrorMap: this._def.errorMap,\n                path: input.path,\n                parent: input.parent,\n            },\n        };\n    }\n    _parseSync(input) {\n        const result = this._parse(input);\n        if (parseUtil_1.isAsync(result)) {\n            throw new Error(\"Synchronous parse encountered promise.\");\n        }\n        return result;\n    }\n    _parseAsync(input) {\n        const result = this._parse(input);\n        return Promise.resolve(result);\n    }\n    parse(data, params) {\n        const result = this.safeParse(data, params);\n        if (result.success)\n            return result.data;\n        throw result.error;\n    }\n    safeParse(data, params) {\n        var _a;\n        const ctx = {\n            common: {\n                issues: [],\n                async: (_a = params === null || params === void 0 ? void 0 : params.async) !== null && _a !== void 0 ? _a : false,\n                contextualErrorMap: params === null || params === void 0 ? void 0 : params.errorMap,\n            },\n            path: (params === null || params === void 0 ? void 0 : params.path) || [],\n            schemaErrorMap: this._def.errorMap,\n            parent: null,\n            data,\n            parsedType: util_1.getParsedType(data),\n        };\n        const result = this._parseSync({ data, path: ctx.path, parent: ctx });\n        return handleResult(ctx, result);\n    }\n    async parseAsync(data, params) {\n        const result = await this.safeParseAsync(data, params);\n        if (result.success)\n            return result.data;\n        throw result.error;\n    }\n    async safeParseAsync(data, params) {\n        const ctx = {\n            common: {\n                issues: [],\n                contextualErrorMap: params === null || params === void 0 ? void 0 : params.errorMap,\n                async: true,\n            },\n            path: (params === null || params === void 0 ? void 0 : params.path) || [],\n            schemaErrorMap: this._def.errorMap,\n            parent: null,\n            data,\n            parsedType: util_1.getParsedType(data),\n        };\n        const maybeAsyncResult = this._parse({ data, path: [], parent: ctx });\n        const result = await (parseUtil_1.isAsync(maybeAsyncResult)\n            ? maybeAsyncResult\n            : Promise.resolve(maybeAsyncResult));\n        return handleResult(ctx, result);\n    }\n    refine(check, message) {\n        const getIssueProperties = (val) => {\n            if (typeof message === \"string\" || typeof message === \"undefined\") {\n                return { message };\n            }\n            else if (typeof message === \"function\") {\n                return message(val);\n            }\n            else {\n                return message;\n            }\n        };\n        return this._refinement((val, ctx) => {\n            const result = check(val);\n            const setError = () => ctx.addIssue({\n                code: ZodError_1.ZodIssueCode.custom,\n                ...getIssueProperties(val),\n            });\n            if (typeof Promise !== \"undefined\" && result instanceof Promise) {\n                return result.then((data) => {\n                    if (!data) {\n                        setError();\n                        return false;\n                    }\n                    else {\n                        return true;\n                    }\n                });\n            }\n            if (!result) {\n                setError();\n                return false;\n            }\n            else {\n                return true;\n            }\n        });\n    }\n    refinement(check, refinementData) {\n        return this._refinement((val, ctx) => {\n            if (!check(val)) {\n                ctx.addIssue(typeof refinementData === \"function\"\n                    ? refinementData(val, ctx)\n                    : refinementData);\n                return false;\n            }\n            else {\n                return true;\n            }\n        });\n    }\n    _refinement(refinement) {\n        return new ZodEffects({\n            schema: this,\n            typeName: ZodFirstPartyTypeKind.ZodEffects,\n            effect: { type: \"refinement\", refinement },\n        });\n    }\n    optional() {\n        return ZodOptional.create(this);\n    }\n    nullable() {\n        return ZodNullable.create(this);\n    }\n    nullish() {\n        return this.optional().nullable();\n    }\n    array() {\n        return ZodArray.create(this);\n    }\n    promise() {\n        return ZodPromise.create(this);\n    }\n    or(option) {\n        return ZodUnion.create([this, option]);\n    }\n    and(incoming) {\n        return ZodIntersection.create(this, incoming);\n    }\n    transform(transform) {\n        return new ZodEffects({\n            schema: this,\n            typeName: ZodFirstPartyTypeKind.ZodEffects,\n            effect: { type: \"transform\", transform },\n        });\n    }\n    default(def) {\n        const defaultValueFunc = typeof def === \"function\" ? def : () => def;\n        return new ZodDefault({\n            innerType: this,\n            defaultValue: defaultValueFunc,\n            typeName: ZodFirstPartyTypeKind.ZodDefault,\n        });\n    }\n    describe(description) {\n        const This = this.constructor;\n        return new This({\n            ...this._def,\n            description,\n        });\n    }\n    isOptional() {\n        return this.safeParse(undefined).success;\n    }\n    isNullable() {\n        return this.safeParse(null).success;\n    }\n}\nexports.ZodType = ZodType;\nexports.Schema = ZodType;\nexports.ZodSchema = ZodType;\nconst cuidRegex = /^c[^\\s-]{8,}$/i;\nconst uuidRegex = /^([a-f0-9]{8}-[a-f0-9]{4}-[1-5][a-f0-9]{3}-[a-f0-9]{4}-[a-f0-9]{12}|00000000-0000-0000-0000-000000000000)$/i;\n// from https://stackoverflow.com/a/46181/1550155\n// old version: too slow, didn't support unicode\n// const emailRegex = /^((([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*)|((\\x22)((((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|\\x21|[\\x23-\\x5b]|[\\x5d-\\x7e]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(\\\\([\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))))*(((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(\\x22)))@((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))$/i;\n// eslint-disable-next-line\nconst emailRegex = /^(([^<>()[\\]\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i;\nclass ZodString extends ZodType {\n    constructor() {\n        super(...arguments);\n        this._regex = (regex, validation, message) => this.refinement((data) => regex.test(data), {\n            validation,\n            code: ZodError_1.ZodIssueCode.invalid_string,\n            ...errorUtil_1.errorUtil.errToObj(message),\n        });\n        /**\n         * @deprecated Use z.string().min(1) instead.\n         * @see {@link ZodString.min}\n         */\n        this.nonempty = (message) => this.min(1, errorUtil_1.errorUtil.errToObj(message));\n        this.trim = () => new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, { kind: \"trim\" }],\n        });\n    }\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== util_1.ZodParsedType.string) {\n            const ctx = this._getOrReturnCtx(input);\n            parseUtil_1.addIssueToContext(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.string,\n                received: ctx.parsedType,\n            }\n            //\n            );\n            return parseUtil_1.INVALID;\n        }\n        const status = new parseUtil_1.ParseStatus();\n        let ctx = undefined;\n        for (const check of this._def.checks) {\n            if (check.kind === \"min\") {\n                if (input.data.length < check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    parseUtil_1.addIssueToContext(ctx, {\n                        code: ZodError_1.ZodIssueCode.too_small,\n                        minimum: check.value,\n                        type: \"string\",\n                        inclusive: true,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                if (input.data.length > check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    parseUtil_1.addIssueToContext(ctx, {\n                        code: ZodError_1.ZodIssueCode.too_big,\n                        maximum: check.value,\n                        type: \"string\",\n                        inclusive: true,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"email\") {\n                if (!emailRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    parseUtil_1.addIssueToContext(ctx, {\n                        validation: \"email\",\n                        code: ZodError_1.ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"uuid\") {\n                if (!uuidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    parseUtil_1.addIssueToContext(ctx, {\n                        validation: \"uuid\",\n                        code: ZodError_1.ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"cuid\") {\n                if (!cuidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    parseUtil_1.addIssueToContext(ctx, {\n                        validation: \"cuid\",\n                        code: ZodError_1.ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"url\") {\n                try {\n                    new URL(input.data);\n                }\n                catch (_a) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    parseUtil_1.addIssueToContext(ctx, {\n                        validation: \"url\",\n                        code: ZodError_1.ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"regex\") {\n                check.regex.lastIndex = 0;\n                const testResult = check.regex.test(input.data);\n                if (!testResult) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    parseUtil_1.addIssueToContext(ctx, {\n                        validation: \"regex\",\n                        code: ZodError_1.ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"trim\") {\n                input.data = input.data.trim();\n            }\n            else {\n                util_1.util.assertNever(check);\n            }\n        }\n        return { status: status.value, value: input.data };\n    }\n    _addCheck(check) {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    email(message) {\n        return this._addCheck({ kind: \"email\", ...errorUtil_1.errorUtil.errToObj(message) });\n    }\n    url(message) {\n        return this._addCheck({ kind: \"url\", ...errorUtil_1.errorUtil.errToObj(message) });\n    }\n    uuid(message) {\n        return this._addCheck({ kind: \"uuid\", ...errorUtil_1.errorUtil.errToObj(message) });\n    }\n    cuid(message) {\n        return this._addCheck({ kind: \"cuid\", ...errorUtil_1.errorUtil.errToObj(message) });\n    }\n    regex(regex, message) {\n        return this._addCheck({\n            kind: \"regex\",\n            regex: regex,\n            ...errorUtil_1.errorUtil.errToObj(message),\n        });\n    }\n    min(minLength, message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: minLength,\n            ...errorUtil_1.errorUtil.errToObj(message),\n        });\n    }\n    max(maxLength, message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: maxLength,\n            ...errorUtil_1.errorUtil.errToObj(message),\n        });\n    }\n    length(len, message) {\n        return this.min(len, message).max(len, message);\n    }\n    get isEmail() {\n        return !!this._def.checks.find((ch) => ch.kind === \"email\");\n    }\n    get isURL() {\n        return !!this._def.checks.find((ch) => ch.kind === \"url\");\n    }\n    get isUUID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"uuid\");\n    }\n    get isCUID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"cuid\");\n    }\n    get minLength() {\n        let min = -Infinity;\n        this._def.checks.map((ch) => {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min) {\n                    min = ch.value;\n                }\n            }\n        });\n        return min;\n    }\n    get maxLength() {\n        let max = null;\n        this._def.checks.map((ch) => {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max) {\n                    max = ch.value;\n                }\n            }\n        });\n        return max;\n    }\n}\nexports.ZodString = ZodString;\nZodString.create = (params) => {\n    return new ZodString({\n        checks: [],\n        typeName: ZodFirstPartyTypeKind.ZodString,\n        ...processCreateParams(params),\n    });\n};\n// https://stackoverflow.com/questions/3966484/why-does-modulus-operator-return-fractional-number-in-javascript/31711034#31711034\nfunction floatSafeRemainder(val, step) {\n    const valDecCount = (val.toString().split(\".\")[1] || \"\").length;\n    const stepDecCount = (step.toString().split(\".\")[1] || \"\").length;\n    const decCount = valDecCount > stepDecCount ? valDecCount : stepDecCount;\n    const valInt = parseInt(val.toFixed(decCount).replace(\".\", \"\"));\n    const stepInt = parseInt(step.toFixed(decCount).replace(\".\", \"\"));\n    return (valInt % stepInt) / Math.pow(10, decCount);\n}\nclass ZodNumber extends ZodType {\n    constructor() {\n        super(...arguments);\n        this.min = this.gte;\n        this.max = this.lte;\n        this.step = this.multipleOf;\n    }\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== util_1.ZodParsedType.number) {\n            const ctx = this._getOrReturnCtx(input);\n            parseUtil_1.addIssueToContext(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.number,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        let ctx = undefined;\n        const status = new parseUtil_1.ParseStatus();\n        for (const check of this._def.checks) {\n            if (check.kind === \"int\") {\n                if (!util_1.util.isInteger(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    parseUtil_1.addIssueToContext(ctx, {\n                        code: ZodError_1.ZodIssueCode.invalid_type,\n                        expected: \"integer\",\n                        received: \"float\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"min\") {\n                const tooSmall = check.inclusive\n                    ? input.data < check.value\n                    : input.data <= check.value;\n                if (tooSmall) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    parseUtil_1.addIssueToContext(ctx, {\n                        code: ZodError_1.ZodIssueCode.too_small,\n                        minimum: check.value,\n                        type: \"number\",\n                        inclusive: check.inclusive,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                const tooBig = check.inclusive\n                    ? input.data > check.value\n                    : input.data >= check.value;\n                if (tooBig) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    parseUtil_1.addIssueToContext(ctx, {\n                        code: ZodError_1.ZodIssueCode.too_big,\n                        maximum: check.value,\n                        type: \"number\",\n                        inclusive: check.inclusive,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"multipleOf\") {\n                if (floatSafeRemainder(input.data, check.value) !== 0) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    parseUtil_1.addIssueToContext(ctx, {\n                        code: ZodError_1.ZodIssueCode.not_multiple_of,\n                        multipleOf: check.value,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util_1.util.assertNever(check);\n            }\n        }\n        return { status: status.value, value: input.data };\n    }\n    gte(value, message) {\n        return this.setLimit(\"min\", value, true, errorUtil_1.errorUtil.toString(message));\n    }\n    gt(value, message) {\n        return this.setLimit(\"min\", value, false, errorUtil_1.errorUtil.toString(message));\n    }\n    lte(value, message) {\n        return this.setLimit(\"max\", value, true, errorUtil_1.errorUtil.toString(message));\n    }\n    lt(value, message) {\n        return this.setLimit(\"max\", value, false, errorUtil_1.errorUtil.toString(message));\n    }\n    setLimit(kind, value, inclusive, message) {\n        return new ZodNumber({\n            ...this._def,\n            checks: [\n                ...this._def.checks,\n                {\n                    kind,\n                    value,\n                    inclusive,\n                    message: errorUtil_1.errorUtil.toString(message),\n                },\n            ],\n        });\n    }\n    _addCheck(check) {\n        return new ZodNumber({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    int(message) {\n        return this._addCheck({\n            kind: \"int\",\n            message: errorUtil_1.errorUtil.toString(message),\n        });\n    }\n    positive(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: 0,\n            inclusive: false,\n            message: errorUtil_1.errorUtil.toString(message),\n        });\n    }\n    negative(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: 0,\n            inclusive: false,\n            message: errorUtil_1.errorUtil.toString(message),\n        });\n    }\n    nonpositive(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: 0,\n            inclusive: true,\n            message: errorUtil_1.errorUtil.toString(message),\n        });\n    }\n    nonnegative(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: 0,\n            inclusive: true,\n            message: errorUtil_1.errorUtil.toString(message),\n        });\n    }\n    multipleOf(value, message) {\n        return this._addCheck({\n            kind: \"multipleOf\",\n            value: value,\n            message: errorUtil_1.errorUtil.toString(message),\n        });\n    }\n    get minValue() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min;\n    }\n    get maxValue() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max;\n    }\n    get isInt() {\n        return !!this._def.checks.find((ch) => ch.kind === \"int\");\n    }\n}\nexports.ZodNumber = ZodNumber;\nZodNumber.create = (params) => {\n    return new ZodNumber({\n        checks: [],\n        typeName: ZodFirstPartyTypeKind.ZodNumber,\n        ...processCreateParams(params),\n    });\n};\nclass ZodBigInt extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== util_1.ZodParsedType.bigint) {\n            const ctx = this._getOrReturnCtx(input);\n            parseUtil_1.addIssueToContext(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.bigint,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        return parseUtil_1.OK(input.data);\n    }\n}\nexports.ZodBigInt = ZodBigInt;\nZodBigInt.create = (params) => {\n    return new ZodBigInt({\n        typeName: ZodFirstPartyTypeKind.ZodBigInt,\n        ...processCreateParams(params),\n    });\n};\nclass ZodBoolean extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== util_1.ZodParsedType.boolean) {\n            const ctx = this._getOrReturnCtx(input);\n            parseUtil_1.addIssueToContext(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.boolean,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        return parseUtil_1.OK(input.data);\n    }\n}\nexports.ZodBoolean = ZodBoolean;\nZodBoolean.create = (params) => {\n    return new ZodBoolean({\n        typeName: ZodFirstPartyTypeKind.ZodBoolean,\n        ...processCreateParams(params),\n    });\n};\nclass ZodDate extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== util_1.ZodParsedType.date) {\n            const ctx = this._getOrReturnCtx(input);\n            parseUtil_1.addIssueToContext(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.date,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        if (isNaN(input.data.getTime())) {\n            const ctx = this._getOrReturnCtx(input);\n            parseUtil_1.addIssueToContext(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_date,\n            });\n            return parseUtil_1.INVALID;\n        }\n        return {\n            status: \"valid\",\n            value: new Date(input.data.getTime()),\n        };\n    }\n}\nexports.ZodDate = ZodDate;\nZodDate.create = (params) => {\n    return new ZodDate({\n        typeName: ZodFirstPartyTypeKind.ZodDate,\n        ...processCreateParams(params),\n    });\n};\nclass ZodUndefined extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== util_1.ZodParsedType.undefined) {\n            const ctx = this._getOrReturnCtx(input);\n            parseUtil_1.addIssueToContext(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.undefined,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        return parseUtil_1.OK(input.data);\n    }\n}\nexports.ZodUndefined = ZodUndefined;\nZodUndefined.create = (params) => {\n    return new ZodUndefined({\n        typeName: ZodFirstPartyTypeKind.ZodUndefined,\n        ...processCreateParams(params),\n    });\n};\nclass ZodNull extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== util_1.ZodParsedType.null) {\n            const ctx = this._getOrReturnCtx(input);\n            parseUtil_1.addIssueToContext(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.null,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        return parseUtil_1.OK(input.data);\n    }\n}\nexports.ZodNull = ZodNull;\nZodNull.create = (params) => {\n    return new ZodNull({\n        typeName: ZodFirstPartyTypeKind.ZodNull,\n        ...processCreateParams(params),\n    });\n};\nclass ZodAny extends ZodType {\n    constructor() {\n        super(...arguments);\n        // to prevent instances of other classes from extending ZodAny. this causes issues with catchall in ZodObject.\n        this._any = true;\n    }\n    _parse(input) {\n        return parseUtil_1.OK(input.data);\n    }\n}\nexports.ZodAny = ZodAny;\nZodAny.create = (params) => {\n    return new ZodAny({\n        typeName: ZodFirstPartyTypeKind.ZodAny,\n        ...processCreateParams(params),\n    });\n};\nclass ZodUnknown extends ZodType {\n    constructor() {\n        super(...arguments);\n        // required\n        this._unknown = true;\n    }\n    _parse(input) {\n        return parseUtil_1.OK(input.data);\n    }\n}\nexports.ZodUnknown = ZodUnknown;\nZodUnknown.create = (params) => {\n    return new ZodUnknown({\n        typeName: ZodFirstPartyTypeKind.ZodUnknown,\n        ...processCreateParams(params),\n    });\n};\nclass ZodNever extends ZodType {\n    _parse(input) {\n        const ctx = this._getOrReturnCtx(input);\n        parseUtil_1.addIssueToContext(ctx, {\n            code: ZodError_1.ZodIssueCode.invalid_type,\n            expected: util_1.ZodParsedType.never,\n            received: ctx.parsedType,\n        });\n        return parseUtil_1.INVALID;\n    }\n}\nexports.ZodNever = ZodNever;\nZodNever.create = (params) => {\n    return new ZodNever({\n        typeName: ZodFirstPartyTypeKind.ZodNever,\n        ...processCreateParams(params),\n    });\n};\nclass ZodVoid extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== util_1.ZodParsedType.undefined) {\n            const ctx = this._getOrReturnCtx(input);\n            parseUtil_1.addIssueToContext(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.void,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        return parseUtil_1.OK(input.data);\n    }\n}\nexports.ZodVoid = ZodVoid;\nZodVoid.create = (params) => {\n    return new ZodVoid({\n        typeName: ZodFirstPartyTypeKind.ZodVoid,\n        ...processCreateParams(params),\n    });\n};\nclass ZodArray extends ZodType {\n    _parse(input) {\n        const { ctx, status } = this._processInputParams(input);\n        const def = this._def;\n        if (ctx.parsedType !== util_1.ZodParsedType.array) {\n            parseUtil_1.addIssueToContext(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.array,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        if (def.minLength !== null) {\n            if (ctx.data.length < def.minLength.value) {\n                parseUtil_1.addIssueToContext(ctx, {\n                    code: ZodError_1.ZodIssueCode.too_small,\n                    minimum: def.minLength.value,\n                    type: \"array\",\n                    inclusive: true,\n                    message: def.minLength.message,\n                });\n                status.dirty();\n            }\n        }\n        if (def.maxLength !== null) {\n            if (ctx.data.length > def.maxLength.value) {\n                parseUtil_1.addIssueToContext(ctx, {\n                    code: ZodError_1.ZodIssueCode.too_big,\n                    maximum: def.maxLength.value,\n                    type: \"array\",\n                    inclusive: true,\n                    message: def.maxLength.message,\n                });\n                status.dirty();\n            }\n        }\n        if (ctx.common.async) {\n            return Promise.all(ctx.data.map((item, i) => {\n                return def.type._parseAsync(new ParseInputLazyPath(ctx, item, ctx.path, i));\n            })).then((result) => {\n                return parseUtil_1.ParseStatus.mergeArray(status, result);\n            });\n        }\n        const result = ctx.data.map((item, i) => {\n            return def.type._parseSync(new ParseInputLazyPath(ctx, item, ctx.path, i));\n        });\n        return parseUtil_1.ParseStatus.mergeArray(status, result);\n    }\n    get element() {\n        return this._def.type;\n    }\n    min(minLength, message) {\n        return new ZodArray({\n            ...this._def,\n            minLength: { value: minLength, message: errorUtil_1.errorUtil.toString(message) },\n        });\n    }\n    max(maxLength, message) {\n        return new ZodArray({\n            ...this._def,\n            maxLength: { value: maxLength, message: errorUtil_1.errorUtil.toString(message) },\n        });\n    }\n    length(len, message) {\n        return this.min(len, message).max(len, message);\n    }\n    nonempty(message) {\n        return this.min(1, message);\n    }\n}\nexports.ZodArray = ZodArray;\nZodArray.create = (schema, params) => {\n    return new ZodArray({\n        type: schema,\n        minLength: null,\n        maxLength: null,\n        typeName: ZodFirstPartyTypeKind.ZodArray,\n        ...processCreateParams(params),\n    });\n};\n/////////////////////////////////////////\n/////////////////////////////////////////\n//////////                     //////////\n//////////      ZodObject      //////////\n//////////                     //////////\n/////////////////////////////////////////\n/////////////////////////////////////////\nvar objectUtil;\n(function (objectUtil) {\n    objectUtil.mergeShapes = (first, second) => {\n        return {\n            ...first,\n            ...second,\n        };\n    };\n})(objectUtil = exports.objectUtil || (exports.objectUtil = {}));\nconst AugmentFactory = (def) => (augmentation) => {\n    return new ZodObject({\n        ...def,\n        shape: () => ({\n            ...def.shape(),\n            ...augmentation,\n        }),\n    });\n};\nfunction deepPartialify(schema) {\n    if (schema instanceof ZodObject) {\n        const newShape = {};\n        for (const key in schema.shape) {\n            const fieldSchema = schema.shape[key];\n            newShape[key] = ZodOptional.create(deepPartialify(fieldSchema));\n        }\n        return new ZodObject({\n            ...schema._def,\n            shape: () => newShape,\n        });\n    }\n    else if (schema instanceof ZodArray) {\n        return ZodArray.create(deepPartialify(schema.element));\n    }\n    else if (schema instanceof ZodOptional) {\n        return ZodOptional.create(deepPartialify(schema.unwrap()));\n    }\n    else if (schema instanceof ZodNullable) {\n        return ZodNullable.create(deepPartialify(schema.unwrap()));\n    }\n    else if (schema instanceof ZodTuple) {\n        return ZodTuple.create(schema.items.map((item) => deepPartialify(item)));\n    }\n    else {\n        return schema;\n    }\n}\nclass ZodObject extends ZodType {\n    constructor() {\n        super(...arguments);\n        this._cached = null;\n        /**\n         * @deprecated In most cases, this is no longer needed - unknown properties are now silently stripped.\n         * If you want to pass through unknown properties, use `.passthrough()` instead.\n         */\n        this.nonstrict = this.passthrough;\n        this.augment = AugmentFactory(this._def);\n        this.extend = AugmentFactory(this._def);\n    }\n    _getCached() {\n        if (this._cached !== null)\n            return this._cached;\n        const shape = this._def.shape();\n        const keys = util_1.util.objectKeys(shape);\n        return (this._cached = { shape, keys });\n    }\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== util_1.ZodParsedType.object) {\n            const ctx = this._getOrReturnCtx(input);\n            parseUtil_1.addIssueToContext(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.object,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        const { status, ctx } = this._processInputParams(input);\n        const { shape, keys: shapeKeys } = this._getCached();\n        const extraKeys = [];\n        for (const key in ctx.data) {\n            if (!shapeKeys.includes(key)) {\n                extraKeys.push(key);\n            }\n        }\n        const pairs = [];\n        for (const key of shapeKeys) {\n            const keyValidator = shape[key];\n            const value = ctx.data[key];\n            pairs.push({\n                key: { status: \"valid\", value: key },\n                value: keyValidator._parse(new ParseInputLazyPath(ctx, value, ctx.path, key)),\n                alwaysSet: key in ctx.data,\n            });\n        }\n        if (this._def.catchall instanceof ZodNever) {\n            const unknownKeys = this._def.unknownKeys;\n            if (unknownKeys === \"passthrough\") {\n                for (const key of extraKeys) {\n                    pairs.push({\n                        key: { status: \"valid\", value: key },\n                        value: { status: \"valid\", value: ctx.data[key] },\n                    });\n                }\n            }\n            else if (unknownKeys === \"strict\") {\n                if (extraKeys.length > 0) {\n                    parseUtil_1.addIssueToContext(ctx, {\n                        code: ZodError_1.ZodIssueCode.unrecognized_keys,\n                        keys: extraKeys,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (unknownKeys === \"strip\") {\n            }\n            else {\n                throw new Error(`Internal ZodObject error: invalid unknownKeys value.`);\n            }\n        }\n        else {\n            // run catchall validation\n            const catchall = this._def.catchall;\n            for (const key of extraKeys) {\n                const value = ctx.data[key];\n                pairs.push({\n                    key: { status: \"valid\", value: key },\n                    value: catchall._parse(new ParseInputLazyPath(ctx, value, ctx.path, key) //, ctx.child(key), value, getParsedType(value)\n                    ),\n                    alwaysSet: key in ctx.data,\n                });\n            }\n        }\n        if (ctx.common.async) {\n            return Promise.resolve()\n                .then(async () => {\n                const syncPairs = [];\n                for (const pair of pairs) {\n                    const key = await pair.key;\n                    syncPairs.push({\n                        key,\n                        value: await pair.value,\n                        alwaysSet: pair.alwaysSet,\n                    });\n                }\n                return syncPairs;\n            })\n                .then((syncPairs) => {\n                return parseUtil_1.ParseStatus.mergeObjectSync(status, syncPairs);\n            });\n        }\n        else {\n            return parseUtil_1.ParseStatus.mergeObjectSync(status, pairs);\n        }\n    }\n    get shape() {\n        return this._def.shape();\n    }\n    strict(message) {\n        errorUtil_1.errorUtil.errToObj;\n        return new ZodObject({\n            ...this._def,\n            unknownKeys: \"strict\",\n            ...(message !== undefined\n                ? {\n                    errorMap: (issue, ctx) => {\n                        var _a, _b, _c, _d;\n                        const defaultError = (_c = (_b = (_a = this._def).errorMap) === null || _b === void 0 ? void 0 : _b.call(_a, issue, ctx).message) !== null && _c !== void 0 ? _c : ctx.defaultError;\n                        if (issue.code === \"unrecognized_keys\")\n                            return {\n                                message: (_d = errorUtil_1.errorUtil.errToObj(message).message) !== null && _d !== void 0 ? _d : defaultError,\n                            };\n                        return {\n                            message: defaultError,\n                        };\n                    },\n                }\n                : {}),\n        });\n    }\n    strip() {\n        return new ZodObject({\n            ...this._def,\n            unknownKeys: \"strip\",\n        });\n    }\n    passthrough() {\n        return new ZodObject({\n            ...this._def,\n            unknownKeys: \"passthrough\",\n        });\n    }\n    setKey(key, schema) {\n        return this.augment({ [key]: schema });\n    }\n    /**\n     * Prior to zod@1.0.12 there was a bug in the\n     * inferred type of merged objects. Please\n     * upgrade if you are experiencing issues.\n     */\n    merge(merging) {\n        // const mergedShape = objectUtil.mergeShapes(\n        //   this._def.shape(),\n        //   merging._def.shape()\n        // );\n        const merged = new ZodObject({\n            unknownKeys: merging._def.unknownKeys,\n            catchall: merging._def.catchall,\n            shape: () => objectUtil.mergeShapes(this._def.shape(), merging._def.shape()),\n            typeName: ZodFirstPartyTypeKind.ZodObject,\n        });\n        return merged;\n    }\n    catchall(index) {\n        return new ZodObject({\n            ...this._def,\n            catchall: index,\n        });\n    }\n    pick(mask) {\n        const shape = {};\n        util_1.util.objectKeys(mask).map((key) => {\n            // only add to shape if key corresponds to an element of the current shape\n            if (this.shape[key])\n                shape[key] = this.shape[key];\n        });\n        return new ZodObject({\n            ...this._def,\n            shape: () => shape,\n        });\n    }\n    omit(mask) {\n        const shape = {};\n        util_1.util.objectKeys(this.shape).map((key) => {\n            if (util_1.util.objectKeys(mask).indexOf(key) === -1) {\n                shape[key] = this.shape[key];\n            }\n        });\n        return new ZodObject({\n            ...this._def,\n            shape: () => shape,\n        });\n    }\n    deepPartial() {\n        return deepPartialify(this);\n    }\n    partial(mask) {\n        const newShape = {};\n        if (mask) {\n            util_1.util.objectKeys(this.shape).map((key) => {\n                if (util_1.util.objectKeys(mask).indexOf(key) === -1) {\n                    newShape[key] = this.shape[key];\n                }\n                else {\n                    newShape[key] = this.shape[key].optional();\n                }\n            });\n            return new ZodObject({\n                ...this._def,\n                shape: () => newShape,\n            });\n        }\n        else {\n            for (const key in this.shape) {\n                const fieldSchema = this.shape[key];\n                newShape[key] = fieldSchema.optional();\n            }\n        }\n        return new ZodObject({\n            ...this._def,\n            shape: () => newShape,\n        });\n    }\n    required() {\n        const newShape = {};\n        for (const key in this.shape) {\n            const fieldSchema = this.shape[key];\n            let newField = fieldSchema;\n            while (newField instanceof ZodOptional) {\n                newField = newField._def.innerType;\n            }\n            newShape[key] = newField;\n        }\n        return new ZodObject({\n            ...this._def,\n            shape: () => newShape,\n        });\n    }\n}\nexports.ZodObject = ZodObject;\nZodObject.create = (shape, params) => {\n    return new ZodObject({\n        shape: () => shape,\n        unknownKeys: \"strip\",\n        catchall: ZodNever.create(),\n        typeName: ZodFirstPartyTypeKind.ZodObject,\n        ...processCreateParams(params),\n    });\n};\nZodObject.strictCreate = (shape, params) => {\n    return new ZodObject({\n        shape: () => shape,\n        unknownKeys: \"strict\",\n        catchall: ZodNever.create(),\n        typeName: ZodFirstPartyTypeKind.ZodObject,\n        ...processCreateParams(params),\n    });\n};\nZodObject.lazycreate = (shape, params) => {\n    return new ZodObject({\n        shape,\n        unknownKeys: \"strip\",\n        catchall: ZodNever.create(),\n        typeName: ZodFirstPartyTypeKind.ZodObject,\n        ...processCreateParams(params),\n    });\n};\nclass ZodUnion extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        const options = this._def.options;\n        function handleResults(results) {\n            // return first issue-free validation if it exists\n            for (const result of results) {\n                if (result.result.status === \"valid\") {\n                    return result.result;\n                }\n            }\n            for (const result of results) {\n                if (result.result.status === \"dirty\") {\n                    // add issues from dirty option\n                    ctx.common.issues.push(...result.ctx.common.issues);\n                    return result.result;\n                }\n            }\n            // return invalid\n            const unionErrors = results.map((result) => new ZodError_1.ZodError(result.ctx.common.issues));\n            parseUtil_1.addIssueToContext(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_union,\n                unionErrors,\n            });\n            return parseUtil_1.INVALID;\n        }\n        if (ctx.common.async) {\n            return Promise.all(options.map(async (option) => {\n                const childCtx = {\n                    ...ctx,\n                    common: {\n                        ...ctx.common,\n                        issues: [],\n                    },\n                    parent: null,\n                };\n                return {\n                    result: await option._parseAsync({\n                        data: ctx.data,\n                        path: ctx.path,\n                        parent: childCtx,\n                    }),\n                    ctx: childCtx,\n                };\n            })).then(handleResults);\n        }\n        else {\n            let dirty = undefined;\n            const issues = [];\n            for (const option of options) {\n                const childCtx = {\n                    ...ctx,\n                    common: {\n                        ...ctx.common,\n                        issues: [],\n                    },\n                    parent: null,\n                };\n                const result = option._parseSync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: childCtx,\n                });\n                if (result.status === \"valid\") {\n                    return result;\n                }\n                else if (result.status === \"dirty\" && !dirty) {\n                    dirty = { result, ctx: childCtx };\n                }\n                if (childCtx.common.issues.length) {\n                    issues.push(childCtx.common.issues);\n                }\n            }\n            if (dirty) {\n                ctx.common.issues.push(...dirty.ctx.common.issues);\n                return dirty.result;\n            }\n            const unionErrors = issues.map((issues) => new ZodError_1.ZodError(issues));\n            parseUtil_1.addIssueToContext(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_union,\n                unionErrors,\n            });\n            return parseUtil_1.INVALID;\n        }\n    }\n    get options() {\n        return this._def.options;\n    }\n}\nexports.ZodUnion = ZodUnion;\nZodUnion.create = (types, params) => {\n    return new ZodUnion({\n        options: types,\n        typeName: ZodFirstPartyTypeKind.ZodUnion,\n        ...processCreateParams(params),\n    });\n};\nclass ZodDiscriminatedUnion extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== util_1.ZodParsedType.object) {\n            parseUtil_1.addIssueToContext(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.object,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        const discriminator = this.discriminator;\n        const discriminatorValue = ctx.data[discriminator];\n        const option = this.options.get(discriminatorValue);\n        if (!option) {\n            parseUtil_1.addIssueToContext(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_union_discriminator,\n                options: this.validDiscriminatorValues,\n                path: [discriminator],\n            });\n            return parseUtil_1.INVALID;\n        }\n        if (ctx.common.async) {\n            return option._parseAsync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            });\n        }\n        else {\n            return option._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            });\n        }\n    }\n    get discriminator() {\n        return this._def.discriminator;\n    }\n    get validDiscriminatorValues() {\n        return Array.from(this.options.keys());\n    }\n    get options() {\n        return this._def.options;\n    }\n    /**\n     * The constructor of the discriminated union schema. Its behaviour is very similar to that of the normal z.union() constructor.\n     * However, it only allows a union of objects, all of which need to share a discriminator property. This property must\n     * have a different value for each object in the union.\n     * @param discriminator the name of the discriminator property\n     * @param types an array of object schemas\n     * @param params\n     */\n    static create(discriminator, types, params) {\n        // Get all the valid discriminator values\n        const options = new Map();\n        try {\n            types.forEach((type) => {\n                const discriminatorValue = type.shape[discriminator].value;\n                options.set(discriminatorValue, type);\n            });\n        }\n        catch (e) {\n            throw new Error(\"The discriminator value could not be extracted from all the provided schemas\");\n        }\n        // Assert that all the discriminator values are unique\n        if (options.size !== types.length) {\n            throw new Error(\"Some of the discriminator values are not unique\");\n        }\n        return new ZodDiscriminatedUnion({\n            typeName: ZodFirstPartyTypeKind.ZodDiscriminatedUnion,\n            discriminator,\n            options,\n            ...processCreateParams(params),\n        });\n    }\n}\nexports.ZodDiscriminatedUnion = ZodDiscriminatedUnion;\nfunction mergeValues(a, b) {\n    const aType = util_1.getParsedType(a);\n    const bType = util_1.getParsedType(b);\n    if (a === b) {\n        return { valid: true, data: a };\n    }\n    else if (aType === util_1.ZodParsedType.object && bType === util_1.ZodParsedType.object) {\n        const bKeys = util_1.util.objectKeys(b);\n        const sharedKeys = util_1.util\n            .objectKeys(a)\n            .filter((key) => bKeys.indexOf(key) !== -1);\n        const newObj = { ...a, ...b };\n        for (const key of sharedKeys) {\n            const sharedValue = mergeValues(a[key], b[key]);\n            if (!sharedValue.valid) {\n                return { valid: false };\n            }\n            newObj[key] = sharedValue.data;\n        }\n        return { valid: true, data: newObj };\n    }\n    else if (aType === util_1.ZodParsedType.array && bType === util_1.ZodParsedType.array) {\n        if (a.length !== b.length) {\n            return { valid: false };\n        }\n        const newArray = [];\n        for (let index = 0; index < a.length; index++) {\n            const itemA = a[index];\n            const itemB = b[index];\n            const sharedValue = mergeValues(itemA, itemB);\n            if (!sharedValue.valid) {\n                return { valid: false };\n            }\n            newArray.push(sharedValue.data);\n        }\n        return { valid: true, data: newArray };\n    }\n    else if (aType === util_1.ZodParsedType.date &&\n        bType === util_1.ZodParsedType.date &&\n        +a === +b) {\n        return { valid: true, data: a };\n    }\n    else {\n        return { valid: false };\n    }\n}\nclass ZodIntersection extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        const handleParsed = (parsedLeft, parsedRight) => {\n            if (parseUtil_1.isAborted(parsedLeft) || parseUtil_1.isAborted(parsedRight)) {\n                return parseUtil_1.INVALID;\n            }\n            const merged = mergeValues(parsedLeft.value, parsedRight.value);\n            if (!merged.valid) {\n                parseUtil_1.addIssueToContext(ctx, {\n                    code: ZodError_1.ZodIssueCode.invalid_intersection_types,\n                });\n                return parseUtil_1.INVALID;\n            }\n            if (parseUtil_1.isDirty(parsedLeft) || parseUtil_1.isDirty(parsedRight)) {\n                status.dirty();\n            }\n            return { status: status.value, value: merged.data };\n        };\n        if (ctx.common.async) {\n            return Promise.all([\n                this._def.left._parseAsync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                }),\n                this._def.right._parseAsync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                }),\n            ]).then(([left, right]) => handleParsed(left, right));\n        }\n        else {\n            return handleParsed(this._def.left._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            }), this._def.right._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            }));\n        }\n    }\n}\nexports.ZodIntersection = ZodIntersection;\nZodIntersection.create = (left, right, params) => {\n    return new ZodIntersection({\n        left: left,\n        right: right,\n        typeName: ZodFirstPartyTypeKind.ZodIntersection,\n        ...processCreateParams(params),\n    });\n};\nclass ZodTuple extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== util_1.ZodParsedType.array) {\n            parseUtil_1.addIssueToContext(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.array,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        if (ctx.data.length < this._def.items.length) {\n            parseUtil_1.addIssueToContext(ctx, {\n                code: ZodError_1.ZodIssueCode.too_small,\n                minimum: this._def.items.length,\n                inclusive: true,\n                type: \"array\",\n            });\n            return parseUtil_1.INVALID;\n        }\n        const rest = this._def.rest;\n        if (!rest && ctx.data.length > this._def.items.length) {\n            parseUtil_1.addIssueToContext(ctx, {\n                code: ZodError_1.ZodIssueCode.too_big,\n                maximum: this._def.items.length,\n                inclusive: true,\n                type: \"array\",\n            });\n            status.dirty();\n        }\n        const items = ctx.data\n            .map((item, itemIndex) => {\n            const schema = this._def.items[itemIndex] || this._def.rest;\n            if (!schema)\n                return null;\n            return schema._parse(new ParseInputLazyPath(ctx, item, ctx.path, itemIndex));\n        })\n            .filter((x) => !!x); // filter nulls\n        if (ctx.common.async) {\n            return Promise.all(items).then((results) => {\n                return parseUtil_1.ParseStatus.mergeArray(status, results);\n            });\n        }\n        else {\n            return parseUtil_1.ParseStatus.mergeArray(status, items);\n        }\n    }\n    get items() {\n        return this._def.items;\n    }\n    rest(rest) {\n        return new ZodTuple({\n            ...this._def,\n            rest,\n        });\n    }\n}\nexports.ZodTuple = ZodTuple;\nZodTuple.create = (schemas, params) => {\n    return new ZodTuple({\n        items: schemas,\n        typeName: ZodFirstPartyTypeKind.ZodTuple,\n        rest: null,\n        ...processCreateParams(params),\n    });\n};\nclass ZodRecord extends ZodType {\n    get keySchema() {\n        return this._def.keyType;\n    }\n    get valueSchema() {\n        return this._def.valueType;\n    }\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== util_1.ZodParsedType.object) {\n            parseUtil_1.addIssueToContext(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.object,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        const pairs = [];\n        const keyType = this._def.keyType;\n        const valueType = this._def.valueType;\n        for (const key in ctx.data) {\n            pairs.push({\n                key: keyType._parse(new ParseInputLazyPath(ctx, key, ctx.path, key)),\n                value: valueType._parse(new ParseInputLazyPath(ctx, ctx.data[key], ctx.path, key)),\n            });\n        }\n        if (ctx.common.async) {\n            return parseUtil_1.ParseStatus.mergeObjectAsync(status, pairs);\n        }\n        else {\n            return parseUtil_1.ParseStatus.mergeObjectSync(status, pairs);\n        }\n    }\n    get element() {\n        return this._def.valueType;\n    }\n    static create(first, second, third) {\n        if (second instanceof ZodType) {\n            return new ZodRecord({\n                keyType: first,\n                valueType: second,\n                typeName: ZodFirstPartyTypeKind.ZodRecord,\n                ...processCreateParams(third),\n            });\n        }\n        return new ZodRecord({\n            keyType: ZodString.create(),\n            valueType: first,\n            typeName: ZodFirstPartyTypeKind.ZodRecord,\n            ...processCreateParams(second),\n        });\n    }\n}\nexports.ZodRecord = ZodRecord;\nclass ZodMap extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== util_1.ZodParsedType.map) {\n            parseUtil_1.addIssueToContext(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.map,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        const keyType = this._def.keyType;\n        const valueType = this._def.valueType;\n        const pairs = [...ctx.data.entries()].map(([key, value], index) => {\n            return {\n                key: keyType._parse(new ParseInputLazyPath(ctx, key, ctx.path, [index, \"key\"])),\n                value: valueType._parse(new ParseInputLazyPath(ctx, value, ctx.path, [index, \"value\"])),\n            };\n        });\n        if (ctx.common.async) {\n            const finalMap = new Map();\n            return Promise.resolve().then(async () => {\n                for (const pair of pairs) {\n                    const key = await pair.key;\n                    const value = await pair.value;\n                    if (key.status === \"aborted\" || value.status === \"aborted\") {\n                        return parseUtil_1.INVALID;\n                    }\n                    if (key.status === \"dirty\" || value.status === \"dirty\") {\n                        status.dirty();\n                    }\n                    finalMap.set(key.value, value.value);\n                }\n                return { status: status.value, value: finalMap };\n            });\n        }\n        else {\n            const finalMap = new Map();\n            for (const pair of pairs) {\n                const key = pair.key;\n                const value = pair.value;\n                if (key.status === \"aborted\" || value.status === \"aborted\") {\n                    return parseUtil_1.INVALID;\n                }\n                if (key.status === \"dirty\" || value.status === \"dirty\") {\n                    status.dirty();\n                }\n                finalMap.set(key.value, value.value);\n            }\n            return { status: status.value, value: finalMap };\n        }\n    }\n}\nexports.ZodMap = ZodMap;\nZodMap.create = (keyType, valueType, params) => {\n    return new ZodMap({\n        valueType,\n        keyType,\n        typeName: ZodFirstPartyTypeKind.ZodMap,\n        ...processCreateParams(params),\n    });\n};\nclass ZodSet extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== util_1.ZodParsedType.set) {\n            parseUtil_1.addIssueToContext(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.set,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        const def = this._def;\n        if (def.minSize !== null) {\n            if (ctx.data.size < def.minSize.value) {\n                parseUtil_1.addIssueToContext(ctx, {\n                    code: ZodError_1.ZodIssueCode.too_small,\n                    minimum: def.minSize.value,\n                    type: \"set\",\n                    inclusive: true,\n                    message: def.minSize.message,\n                });\n                status.dirty();\n            }\n        }\n        if (def.maxSize !== null) {\n            if (ctx.data.size > def.maxSize.value) {\n                parseUtil_1.addIssueToContext(ctx, {\n                    code: ZodError_1.ZodIssueCode.too_big,\n                    maximum: def.maxSize.value,\n                    type: \"set\",\n                    inclusive: true,\n                    message: def.maxSize.message,\n                });\n                status.dirty();\n            }\n        }\n        const valueType = this._def.valueType;\n        function finalizeSet(elements) {\n            const parsedSet = new Set();\n            for (const element of elements) {\n                if (element.status === \"aborted\")\n                    return parseUtil_1.INVALID;\n                if (element.status === \"dirty\")\n                    status.dirty();\n                parsedSet.add(element.value);\n            }\n            return { status: status.value, value: parsedSet };\n        }\n        const elements = [...ctx.data.values()].map((item, i) => valueType._parse(new ParseInputLazyPath(ctx, item, ctx.path, i)));\n        if (ctx.common.async) {\n            return Promise.all(elements).then((elements) => finalizeSet(elements));\n        }\n        else {\n            return finalizeSet(elements);\n        }\n    }\n    min(minSize, message) {\n        return new ZodSet({\n            ...this._def,\n            minSize: { value: minSize, message: errorUtil_1.errorUtil.toString(message) },\n        });\n    }\n    max(maxSize, message) {\n        return new ZodSet({\n            ...this._def,\n            maxSize: { value: maxSize, message: errorUtil_1.errorUtil.toString(message) },\n        });\n    }\n    size(size, message) {\n        return this.min(size, message).max(size, message);\n    }\n    nonempty(message) {\n        return this.min(1, message);\n    }\n}\nexports.ZodSet = ZodSet;\nZodSet.create = (valueType, params) => {\n    return new ZodSet({\n        valueType,\n        minSize: null,\n        maxSize: null,\n        typeName: ZodFirstPartyTypeKind.ZodSet,\n        ...processCreateParams(params),\n    });\n};\nclass ZodFunction extends ZodType {\n    constructor() {\n        super(...arguments);\n        this.validate = this.implement;\n    }\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== util_1.ZodParsedType.function) {\n            parseUtil_1.addIssueToContext(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.function,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        function makeArgsIssue(args, error) {\n            return parseUtil_1.makeIssue({\n                data: args,\n                path: ctx.path,\n                errorMaps: [\n                    ctx.common.contextualErrorMap,\n                    ctx.schemaErrorMap,\n                    ZodError_1.overrideErrorMap,\n                    ZodError_1.defaultErrorMap,\n                ].filter((x) => !!x),\n                issueData: {\n                    code: ZodError_1.ZodIssueCode.invalid_arguments,\n                    argumentsError: error,\n                },\n            });\n        }\n        function makeReturnsIssue(returns, error) {\n            return parseUtil_1.makeIssue({\n                data: returns,\n                path: ctx.path,\n                errorMaps: [\n                    ctx.common.contextualErrorMap,\n                    ctx.schemaErrorMap,\n                    ZodError_1.overrideErrorMap,\n                    ZodError_1.defaultErrorMap,\n                ].filter((x) => !!x),\n                issueData: {\n                    code: ZodError_1.ZodIssueCode.invalid_return_type,\n                    returnTypeError: error,\n                },\n            });\n        }\n        const params = { errorMap: ctx.common.contextualErrorMap };\n        const fn = ctx.data;\n        if (this._def.returns instanceof ZodPromise) {\n            return parseUtil_1.OK(async (...args) => {\n                const error = new ZodError_1.ZodError([]);\n                const parsedArgs = await this._def.args\n                    .parseAsync(args, params)\n                    .catch((e) => {\n                    error.addIssue(makeArgsIssue(args, e));\n                    throw error;\n                });\n                const result = await fn(...parsedArgs);\n                const parsedReturns = await this._def.returns._def.type\n                    .parseAsync(result, params)\n                    .catch((e) => {\n                    error.addIssue(makeReturnsIssue(result, e));\n                    throw error;\n                });\n                return parsedReturns;\n            });\n        }\n        else {\n            return parseUtil_1.OK((...args) => {\n                const parsedArgs = this._def.args.safeParse(args, params);\n                if (!parsedArgs.success) {\n                    throw new ZodError_1.ZodError([makeArgsIssue(args, parsedArgs.error)]);\n                }\n                const result = fn(...parsedArgs.data);\n                const parsedReturns = this._def.returns.safeParse(result, params);\n                if (!parsedReturns.success) {\n                    throw new ZodError_1.ZodError([makeReturnsIssue(result, parsedReturns.error)]);\n                }\n                return parsedReturns.data;\n            });\n        }\n    }\n    parameters() {\n        return this._def.args;\n    }\n    returnType() {\n        return this._def.returns;\n    }\n    args(...items) {\n        return new ZodFunction({\n            ...this._def,\n            args: ZodTuple.create(items).rest(ZodUnknown.create()),\n        });\n    }\n    returns(returnType) {\n        return new ZodFunction({\n            ...this._def,\n            returns: returnType,\n        });\n    }\n    implement(func) {\n        const validatedFunc = this.parse(func);\n        return validatedFunc;\n    }\n    strictImplement(func) {\n        const validatedFunc = this.parse(func);\n        return validatedFunc;\n    }\n}\nexports.ZodFunction = ZodFunction;\nZodFunction.create = (args, returns, params) => {\n    return new ZodFunction({\n        args: (args\n            ? args.rest(ZodUnknown.create())\n            : ZodTuple.create([]).rest(ZodUnknown.create())),\n        returns: returns || ZodUnknown.create(),\n        typeName: ZodFirstPartyTypeKind.ZodFunction,\n        ...processCreateParams(params),\n    });\n};\nclass ZodLazy extends ZodType {\n    get schema() {\n        return this._def.getter();\n    }\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        const lazySchema = this._def.getter();\n        return lazySchema._parse({ data: ctx.data, path: ctx.path, parent: ctx });\n    }\n}\nexports.ZodLazy = ZodLazy;\nZodLazy.create = (getter, params) => {\n    return new ZodLazy({\n        getter: getter,\n        typeName: ZodFirstPartyTypeKind.ZodLazy,\n        ...processCreateParams(params),\n    });\n};\nclass ZodLiteral extends ZodType {\n    _parse(input) {\n        if (input.data !== this._def.value) {\n            const ctx = this._getOrReturnCtx(input);\n            parseUtil_1.addIssueToContext(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_literal,\n                expected: this._def.value,\n            });\n            return parseUtil_1.INVALID;\n        }\n        return { status: \"valid\", value: input.data };\n    }\n    get value() {\n        return this._def.value;\n    }\n}\nexports.ZodLiteral = ZodLiteral;\nZodLiteral.create = (value, params) => {\n    return new ZodLiteral({\n        value: value,\n        typeName: ZodFirstPartyTypeKind.ZodLiteral,\n        ...processCreateParams(params),\n    });\n};\nfunction createZodEnum(values, params) {\n    return new ZodEnum({\n        values: values,\n        typeName: ZodFirstPartyTypeKind.ZodEnum,\n        ...processCreateParams(params),\n    });\n}\nclass ZodEnum extends ZodType {\n    _parse(input) {\n        if (typeof input.data !== \"string\") {\n            const ctx = this._getOrReturnCtx(input);\n            const expectedValues = this._def.values;\n            parseUtil_1.addIssueToContext(ctx, {\n                expected: util_1.util.joinValues(expectedValues),\n                received: ctx.parsedType,\n                code: ZodError_1.ZodIssueCode.invalid_type,\n            });\n            return parseUtil_1.INVALID;\n        }\n        if (this._def.values.indexOf(input.data) === -1) {\n            const ctx = this._getOrReturnCtx(input);\n            const expectedValues = this._def.values;\n            parseUtil_1.addIssueToContext(ctx, {\n                received: ctx.data,\n                code: ZodError_1.ZodIssueCode.invalid_enum_value,\n                options: expectedValues,\n            });\n            return parseUtil_1.INVALID;\n        }\n        return parseUtil_1.OK(input.data);\n    }\n    get options() {\n        return this._def.values;\n    }\n    get enum() {\n        const enumValues = {};\n        for (const val of this._def.values) {\n            enumValues[val] = val;\n        }\n        return enumValues;\n    }\n    get Values() {\n        const enumValues = {};\n        for (const val of this._def.values) {\n            enumValues[val] = val;\n        }\n        return enumValues;\n    }\n    get Enum() {\n        const enumValues = {};\n        for (const val of this._def.values) {\n            enumValues[val] = val;\n        }\n        return enumValues;\n    }\n}\nexports.ZodEnum = ZodEnum;\nZodEnum.create = createZodEnum;\nclass ZodNativeEnum extends ZodType {\n    _parse(input) {\n        const nativeEnumValues = util_1.util.getValidEnumValues(this._def.values);\n        const ctx = this._getOrReturnCtx(input);\n        if (ctx.parsedType !== util_1.ZodParsedType.string &&\n            ctx.parsedType !== util_1.ZodParsedType.number) {\n            const expectedValues = util_1.util.objectValues(nativeEnumValues);\n            parseUtil_1.addIssueToContext(ctx, {\n                expected: util_1.util.joinValues(expectedValues),\n                received: ctx.parsedType,\n                code: ZodError_1.ZodIssueCode.invalid_type,\n            });\n            return parseUtil_1.INVALID;\n        }\n        if (nativeEnumValues.indexOf(input.data) === -1) {\n            const expectedValues = util_1.util.objectValues(nativeEnumValues);\n            parseUtil_1.addIssueToContext(ctx, {\n                received: ctx.data,\n                code: ZodError_1.ZodIssueCode.invalid_enum_value,\n                options: expectedValues,\n            });\n            return parseUtil_1.INVALID;\n        }\n        return parseUtil_1.OK(input.data);\n    }\n    get enum() {\n        return this._def.values;\n    }\n}\nexports.ZodNativeEnum = ZodNativeEnum;\nZodNativeEnum.create = (values, params) => {\n    return new ZodNativeEnum({\n        values: values,\n        typeName: ZodFirstPartyTypeKind.ZodNativeEnum,\n        ...processCreateParams(params),\n    });\n};\nclass ZodPromise extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== util_1.ZodParsedType.promise &&\n            ctx.common.async === false) {\n            parseUtil_1.addIssueToContext(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.promise,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        const promisified = ctx.parsedType === util_1.ZodParsedType.promise\n            ? ctx.data\n            : Promise.resolve(ctx.data);\n        return parseUtil_1.OK(promisified.then((data) => {\n            return this._def.type.parseAsync(data, {\n                path: ctx.path,\n                errorMap: ctx.common.contextualErrorMap,\n            });\n        }));\n    }\n}\nexports.ZodPromise = ZodPromise;\nZodPromise.create = (schema, params) => {\n    return new ZodPromise({\n        type: schema,\n        typeName: ZodFirstPartyTypeKind.ZodPromise,\n        ...processCreateParams(params),\n    });\n};\nclass ZodEffects extends ZodType {\n    innerType() {\n        return this._def.schema;\n    }\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        const effect = this._def.effect || null;\n        if (effect.type === \"preprocess\") {\n            const processed = effect.transform(ctx.data);\n            if (ctx.common.async) {\n                return Promise.resolve(processed).then((processed) => {\n                    return this._def.schema._parseAsync({\n                        data: processed,\n                        path: ctx.path,\n                        parent: ctx,\n                    });\n                });\n            }\n            else {\n                return this._def.schema._parseSync({\n                    data: processed,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n            }\n        }\n        const checkCtx = {\n            addIssue: (arg) => {\n                parseUtil_1.addIssueToContext(ctx, arg);\n                if (arg.fatal) {\n                    status.abort();\n                }\n                else {\n                    status.dirty();\n                }\n            },\n            get path() {\n                return ctx.path;\n            },\n        };\n        checkCtx.addIssue = checkCtx.addIssue.bind(checkCtx);\n        if (effect.type === \"refinement\") {\n            const executeRefinement = (acc\n            // effect: RefinementEffect<any>\n            ) => {\n                const result = effect.refinement(acc, checkCtx);\n                if (ctx.common.async) {\n                    return Promise.resolve(result);\n                }\n                if (result instanceof Promise) {\n                    throw new Error(\"Async refinement encountered during synchronous parse operation. Use .parseAsync instead.\");\n                }\n                return acc;\n            };\n            if (ctx.common.async === false) {\n                const inner = this._def.schema._parseSync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (inner.status === \"aborted\")\n                    return parseUtil_1.INVALID;\n                if (inner.status === \"dirty\")\n                    status.dirty();\n                // return value is ignored\n                executeRefinement(inner.value);\n                return { status: status.value, value: inner.value };\n            }\n            else {\n                return this._def.schema\n                    ._parseAsync({ data: ctx.data, path: ctx.path, parent: ctx })\n                    .then((inner) => {\n                    if (inner.status === \"aborted\")\n                        return parseUtil_1.INVALID;\n                    if (inner.status === \"dirty\")\n                        status.dirty();\n                    return executeRefinement(inner.value).then(() => {\n                        return { status: status.value, value: inner.value };\n                    });\n                });\n            }\n        }\n        if (effect.type === \"transform\") {\n            if (ctx.common.async === false) {\n                const base = this._def.schema._parseSync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                // if (base.status === \"aborted\") return INVALID;\n                // if (base.status === \"dirty\") {\n                //   return { status: \"dirty\", value: base.value };\n                // }\n                if (!parseUtil_1.isValid(base))\n                    return base;\n                const result = effect.transform(base.value, checkCtx);\n                if (result instanceof Promise) {\n                    throw new Error(`Asynchronous transform encountered during synchronous parse operation. Use .parseAsync instead.`);\n                }\n                return { status: status.value, value: result };\n            }\n            else {\n                return this._def.schema\n                    ._parseAsync({ data: ctx.data, path: ctx.path, parent: ctx })\n                    .then((base) => {\n                    if (!parseUtil_1.isValid(base))\n                        return base;\n                    // if (base.status === \"aborted\") return INVALID;\n                    // if (base.status === \"dirty\") {\n                    //   return { status: \"dirty\", value: base.value };\n                    // }\n                    return Promise.resolve(effect.transform(base.value, checkCtx)).then((result) => ({ status: status.value, value: result }));\n                });\n            }\n        }\n        util_1.util.assertNever(effect);\n    }\n}\nexports.ZodEffects = ZodEffects;\nexports.ZodTransformer = ZodEffects;\nZodEffects.create = (schema, effect, params) => {\n    return new ZodEffects({\n        schema,\n        typeName: ZodFirstPartyTypeKind.ZodEffects,\n        effect,\n        ...processCreateParams(params),\n    });\n};\nZodEffects.createWithPreprocess = (preprocess, schema, params) => {\n    return new ZodEffects({\n        schema,\n        effect: { type: \"preprocess\", transform: preprocess },\n        typeName: ZodFirstPartyTypeKind.ZodEffects,\n        ...processCreateParams(params),\n    });\n};\nclass ZodOptional extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType === util_1.ZodParsedType.undefined) {\n            return parseUtil_1.OK(undefined);\n        }\n        return this._def.innerType._parse(input);\n    }\n    unwrap() {\n        return this._def.innerType;\n    }\n}\nexports.ZodOptional = ZodOptional;\nZodOptional.create = (type, params) => {\n    return new ZodOptional({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodOptional,\n        ...processCreateParams(params),\n    });\n};\nclass ZodNullable extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType === util_1.ZodParsedType.null) {\n            return parseUtil_1.OK(null);\n        }\n        return this._def.innerType._parse(input);\n    }\n    unwrap() {\n        return this._def.innerType;\n    }\n}\nexports.ZodNullable = ZodNullable;\nZodNullable.create = (type, params) => {\n    return new ZodNullable({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodNullable,\n        ...processCreateParams(params),\n    });\n};\nclass ZodDefault extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        let data = ctx.data;\n        if (ctx.parsedType === util_1.ZodParsedType.undefined) {\n            data = this._def.defaultValue();\n        }\n        return this._def.innerType._parse({\n            data,\n            path: ctx.path,\n            parent: ctx,\n        });\n    }\n    removeDefault() {\n        return this._def.innerType;\n    }\n}\nexports.ZodDefault = ZodDefault;\nZodDefault.create = (type, params) => {\n    return new ZodOptional({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodOptional,\n        ...processCreateParams(params),\n    });\n};\nclass ZodNaN extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== util_1.ZodParsedType.nan) {\n            const ctx = this._getOrReturnCtx(input);\n            parseUtil_1.addIssueToContext(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.nan,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        return { status: \"valid\", value: input.data };\n    }\n}\nexports.ZodNaN = ZodNaN;\nZodNaN.create = (params) => {\n    return new ZodNaN({\n        typeName: ZodFirstPartyTypeKind.ZodNaN,\n        ...processCreateParams(params),\n    });\n};\nconst custom = (check, params = {}, fatal) => {\n    if (check)\n        return ZodAny.create().superRefine((data, ctx) => {\n            if (!check(data)) {\n                const p = typeof params === \"function\" ? params(data) : params;\n                const p2 = typeof p === \"string\" ? { message: p } : p;\n                ctx.addIssue({ code: \"custom\", ...p2, fatal });\n            }\n        });\n    return ZodAny.create();\n};\nexports.custom = custom;\nexports.late = {\n    object: ZodObject.lazycreate,\n};\nvar ZodFirstPartyTypeKind;\n(function (ZodFirstPartyTypeKind) {\n    ZodFirstPartyTypeKind[\"ZodString\"] = \"ZodString\";\n    ZodFirstPartyTypeKind[\"ZodNumber\"] = \"ZodNumber\";\n    ZodFirstPartyTypeKind[\"ZodNaN\"] = \"ZodNaN\";\n    ZodFirstPartyTypeKind[\"ZodBigInt\"] = \"ZodBigInt\";\n    ZodFirstPartyTypeKind[\"ZodBoolean\"] = \"ZodBoolean\";\n    ZodFirstPartyTypeKind[\"ZodDate\"] = \"ZodDate\";\n    ZodFirstPartyTypeKind[\"ZodUndefined\"] = \"ZodUndefined\";\n    ZodFirstPartyTypeKind[\"ZodNull\"] = \"ZodNull\";\n    ZodFirstPartyTypeKind[\"ZodAny\"] = \"ZodAny\";\n    ZodFirstPartyTypeKind[\"ZodUnknown\"] = \"ZodUnknown\";\n    ZodFirstPartyTypeKind[\"ZodNever\"] = \"ZodNever\";\n    ZodFirstPartyTypeKind[\"ZodVoid\"] = \"ZodVoid\";\n    ZodFirstPartyTypeKind[\"ZodArray\"] = \"ZodArray\";\n    ZodFirstPartyTypeKind[\"ZodObject\"] = \"ZodObject\";\n    ZodFirstPartyTypeKind[\"ZodUnion\"] = \"ZodUnion\";\n    ZodFirstPartyTypeKind[\"ZodDiscriminatedUnion\"] = \"ZodDiscriminatedUnion\";\n    ZodFirstPartyTypeKind[\"ZodIntersection\"] = \"ZodIntersection\";\n    ZodFirstPartyTypeKind[\"ZodTuple\"] = \"ZodTuple\";\n    ZodFirstPartyTypeKind[\"ZodRecord\"] = \"ZodRecord\";\n    ZodFirstPartyTypeKind[\"ZodMap\"] = \"ZodMap\";\n    ZodFirstPartyTypeKind[\"ZodSet\"] = \"ZodSet\";\n    ZodFirstPartyTypeKind[\"ZodFunction\"] = \"ZodFunction\";\n    ZodFirstPartyTypeKind[\"ZodLazy\"] = \"ZodLazy\";\n    ZodFirstPartyTypeKind[\"ZodLiteral\"] = \"ZodLiteral\";\n    ZodFirstPartyTypeKind[\"ZodEnum\"] = \"ZodEnum\";\n    ZodFirstPartyTypeKind[\"ZodEffects\"] = \"ZodEffects\";\n    ZodFirstPartyTypeKind[\"ZodNativeEnum\"] = \"ZodNativeEnum\";\n    ZodFirstPartyTypeKind[\"ZodOptional\"] = \"ZodOptional\";\n    ZodFirstPartyTypeKind[\"ZodNullable\"] = \"ZodNullable\";\n    ZodFirstPartyTypeKind[\"ZodDefault\"] = \"ZodDefault\";\n    ZodFirstPartyTypeKind[\"ZodPromise\"] = \"ZodPromise\";\n})(ZodFirstPartyTypeKind = exports.ZodFirstPartyTypeKind || (exports.ZodFirstPartyTypeKind = {}));\nconst instanceOfType = (cls, params = {\n    message: `Input not instance of ${cls.name}`,\n}) => exports.custom((data) => data instanceof cls, params, true);\nexports.instanceof = instanceOfType;\nconst stringType = ZodString.create;\nexports.string = stringType;\nconst numberType = ZodNumber.create;\nexports.number = numberType;\nconst nanType = ZodNaN.create;\nexports.nan = nanType;\nconst bigIntType = ZodBigInt.create;\nexports.bigint = bigIntType;\nconst booleanType = ZodBoolean.create;\nexports.boolean = booleanType;\nconst dateType = ZodDate.create;\nexports.date = dateType;\nconst undefinedType = ZodUndefined.create;\nexports.undefined = undefinedType;\nconst nullType = ZodNull.create;\nexports.null = nullType;\nconst anyType = ZodAny.create;\nexports.any = anyType;\nconst unknownType = ZodUnknown.create;\nexports.unknown = unknownType;\nconst neverType = ZodNever.create;\nexports.never = neverType;\nconst voidType = ZodVoid.create;\nexports.void = voidType;\nconst arrayType = ZodArray.create;\nexports.array = arrayType;\nconst objectType = ZodObject.create;\nexports.object = objectType;\nconst strictObjectType = ZodObject.strictCreate;\nexports.strictObject = strictObjectType;\nconst unionType = ZodUnion.create;\nexports.union = unionType;\nconst discriminatedUnionType = ZodDiscriminatedUnion.create;\nexports.discriminatedUnion = discriminatedUnionType;\nconst intersectionType = ZodIntersection.create;\nexports.intersection = intersectionType;\nconst tupleType = ZodTuple.create;\nexports.tuple = tupleType;\nconst recordType = ZodRecord.create;\nexports.record = recordType;\nconst mapType = ZodMap.create;\nexports.map = mapType;\nconst setType = ZodSet.create;\nexports.set = setType;\nconst functionType = ZodFunction.create;\nexports.function = functionType;\nconst lazyType = ZodLazy.create;\nexports.lazy = lazyType;\nconst literalType = ZodLiteral.create;\nexports.literal = literalType;\nconst enumType = ZodEnum.create;\nexports.enum = enumType;\nconst nativeEnumType = ZodNativeEnum.create;\nexports.nativeEnum = nativeEnumType;\nconst promiseType = ZodPromise.create;\nexports.promise = promiseType;\nconst effectsType = ZodEffects.create;\nexports.effect = effectsType;\nexports.transformer = effectsType;\nconst optionalType = ZodOptional.create;\nexports.optional = optionalType;\nconst nullableType = ZodNullable.create;\nexports.nullable = nullableType;\nconst preprocessType = ZodEffects.createWithPreprocess;\nexports.preprocess = preprocessType;\nconst ostring = () => stringType().optional();\nexports.ostring = ostring;\nconst onumber = () => numberType().optional();\nexports.onumber = onumber;\nconst oboolean = () => booleanType().optional();\nexports.oboolean = oboolean;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ZodParsedType = exports.getParsedType = void 0;\n__exportStar(require(\"./helpers/parseUtil\"), exports);\n__exportStar(require(\"./helpers/typeAliases\"), exports);\nvar util_1 = require(\"./helpers/util\");\nObject.defineProperty(exports, \"getParsedType\", { enumerable: true, get: function () { return util_1.getParsedType; } });\nObject.defineProperty(exports, \"ZodParsedType\", { enumerable: true, get: function () { return util_1.ZodParsedType; } });\n__exportStar(require(\"./types\"), exports);\n__exportStar(require(\"./ZodError\"), exports);\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.z = void 0;\nconst mod = __importStar(require(\"./external\"));\nexports.z = mod;\n__exportStar(require(\"./external\"), exports);\nexports.default = mod;\n","\"use strict\";\n/**\n * Copyright 2022 Google LLC.\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CDP = exports.Network = exports.Log = exports.BrowsingContext = exports.Script = exports.Message = void 0;\n// keep-sorted end\nvar Message;\n(function (Message) {\n    // keep-sorted end;\n    class ErrorResponseClass {\n        constructor(error, message, stacktrace) {\n            this.error = error;\n            this.message = message;\n            this.stacktrace = stacktrace;\n        }\n        error;\n        message;\n        stacktrace;\n        toErrorResponse(commandId) {\n            return {\n                id: commandId,\n                error: this.error,\n                message: this.message,\n                stacktrace: this.stacktrace,\n            };\n        }\n    }\n    Message.ErrorResponseClass = ErrorResponseClass;\n    class UnknownException extends ErrorResponseClass {\n        constructor(message, stacktrace) {\n            super('unknown error', message, stacktrace);\n        }\n    }\n    Message.UnknownException = UnknownException;\n    class UnknownCommandException extends ErrorResponseClass {\n        constructor(message, stacktrace) {\n            super('unknown command', message, stacktrace);\n        }\n    }\n    Message.UnknownCommandException = UnknownCommandException;\n    class InvalidArgumentException extends ErrorResponseClass {\n        constructor(message, stacktrace) {\n            super('invalid argument', message, stacktrace);\n        }\n    }\n    Message.InvalidArgumentException = InvalidArgumentException;\n    class NoSuchNodeException extends ErrorResponseClass {\n        constructor(message, stacktrace) {\n            super('no such node', message, stacktrace);\n        }\n    }\n    Message.NoSuchNodeException = NoSuchNodeException;\n    class NoSuchFrameException extends ErrorResponseClass {\n        constructor(message) {\n            super('no such frame', message);\n        }\n    }\n    Message.NoSuchFrameException = NoSuchFrameException;\n})(Message = exports.Message || (exports.Message = {}));\n/** @see https://w3c.github.io/webdriver-bidi/#module-script */\nvar Script;\n(function (Script) {\n    let EventNames;\n    (function (EventNames) {\n        EventNames[\"MessageEvent\"] = \"script.message\";\n    })(EventNames = Script.EventNames || (Script.EventNames = {}));\n    Script.AllEvents = 'script';\n})(Script = exports.Script || (exports.Script = {}));\n// https://w3c.github.io/webdriver-bidi/#module-browsingContext\nvar BrowsingContext;\n(function (BrowsingContext) {\n    let EventNames;\n    (function (EventNames) {\n        EventNames[\"LoadEvent\"] = \"browsingContext.load\";\n        EventNames[\"DomContentLoadedEvent\"] = \"browsingContext.domContentLoaded\";\n        EventNames[\"ContextCreatedEvent\"] = \"browsingContext.contextCreated\";\n        EventNames[\"ContextDestroyedEvent\"] = \"browsingContext.contextDestroyed\";\n    })(EventNames = BrowsingContext.EventNames || (BrowsingContext.EventNames = {}));\n    BrowsingContext.AllEvents = 'browsingContext';\n})(BrowsingContext = exports.BrowsingContext || (exports.BrowsingContext = {}));\n/** @see https://w3c.github.io/webdriver-bidi/#module-log */\nvar Log;\n(function (Log) {\n    Log.AllEvents = 'log';\n    let EventNames;\n    (function (EventNames) {\n        EventNames[\"LogEntryAddedEvent\"] = \"log.entryAdded\";\n    })(EventNames = Log.EventNames || (Log.EventNames = {}));\n})(Log = exports.Log || (exports.Log = {}));\nvar Network;\n(function (Network) {\n    Network.AllEvents = 'network';\n    let EventNames;\n    (function (EventNames) {\n        EventNames[\"BeforeRequestSentEvent\"] = \"network.beforeRequestSent\";\n        EventNames[\"ResponseCompletedEvent\"] = \"network.responseCompleted\";\n    })(EventNames = Network.EventNames || (Network.EventNames = {}));\n})(Network = exports.Network || (exports.Network = {}));\nvar CDP;\n(function (CDP) {\n    CDP.AllEvents = 'cdp';\n    let EventNames;\n    (function (EventNames) {\n        EventNames[\"EventReceivedEvent\"] = \"cdp.eventReceived\";\n    })(EventNames = CDP.EventNames || (CDP.EventNames = {}));\n})(CDP = exports.CDP || (exports.CDP = {}));\n//# sourceMappingURL=protocol.js.map","\"use strict\";\n/**\n * Copyright 2022 Google LLC.\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Session = exports.CDP = exports.BrowsingContext = exports.Script = exports.CommonDataTypes = exports.parseObject = void 0;\n/**\n * @fileoverview Provides parsing and validator for WebDriver BiDi protocol.\n * Parser types should match the `../protocol` types.\n */\nconst zod_1 = require(\"zod\");\nconst protocol_js_1 = require(\"../protocol/protocol.js\");\nconst MAX_INT = 9007199254740991;\nfunction parseObject(obj, schema) {\n    const parseResult = schema.safeParse(obj);\n    if (parseResult.success) {\n        return parseResult.data;\n    }\n    const errorMessage = parseResult.error.errors\n        .map((e) => `${e.message} in ` +\n        `${e.path.map((p) => JSON.stringify(p)).join('/')}.`)\n        .join(' ');\n    throw new protocol_js_1.Message.InvalidArgumentException(errorMessage);\n}\nexports.parseObject = parseObject;\nvar CommonDataTypes;\n(function (CommonDataTypes) {\n    CommonDataTypes.SharedReferenceSchema = zod_1.z.object({\n        sharedId: zod_1.z.string().min(1),\n    });\n    CommonDataTypes.RemoteReferenceSchema = zod_1.z.object({\n        handle: zod_1.z.string().min(1),\n    });\n    // UndefinedValue = {\n    //   type: \"undefined\",\n    // }\n    const UndefinedValueSchema = zod_1.z.object({ type: zod_1.z.literal('undefined') });\n    // NullValue = {\n    //   type: \"null\",\n    // }\n    const NullValueSchema = zod_1.z.object({ type: zod_1.z.literal('null') });\n    // StringValue = {\n    //   type: \"string\",\n    //   value: text,\n    // }\n    const StringValueSchema = zod_1.z.object({\n        type: zod_1.z.literal('string'),\n        value: zod_1.z.string(),\n    });\n    // SpecialNumber = \"NaN\" / \"-0\" / \"Infinity\" / \"-Infinity\";\n    const SpecialNumberSchema = zod_1.z.enum(['NaN', '-0', 'Infinity', '-Infinity']);\n    // NumberValue = {\n    //   type: \"number\",\n    //   value: number / SpecialNumber,\n    // }\n    const NumberValueSchema = zod_1.z.object({\n        type: zod_1.z.literal('number'),\n        value: zod_1.z.union([SpecialNumberSchema, zod_1.z.number()]),\n    });\n    // BooleanValue = {\n    //   type: \"boolean\",\n    //   value: bool,\n    // }\n    const BooleanValueSchema = zod_1.z.object({\n        type: zod_1.z.literal('boolean'),\n        value: zod_1.z.boolean(),\n    });\n    // BigIntValue = {\n    //   type: \"bigint\",\n    //   value: text,\n    // }\n    const BigIntValueSchema = zod_1.z.object({\n        type: zod_1.z.literal('bigint'),\n        value: zod_1.z.string(),\n    });\n    const PrimitiveProtocolValueSchema = zod_1.z.union([\n        UndefinedValueSchema,\n        NullValueSchema,\n        StringValueSchema,\n        NumberValueSchema,\n        BooleanValueSchema,\n        BigIntValueSchema,\n    ]);\n    CommonDataTypes.LocalValueSchema = zod_1.z.lazy(() => zod_1.z.union([\n        PrimitiveProtocolValueSchema,\n        ArrayLocalValueSchema,\n        DateLocalValueSchema,\n        MapLocalValueSchema,\n        ObjectLocalValueSchema,\n        RegExpLocalValueSchema,\n        SetLocalValueSchema,\n    ]));\n    // Order is important, as `parse` is processed in the same order.\n    // `SharedReferenceSchema`->`RemoteReferenceSchema`->`LocalValueSchema`.\n    const LocalOrRemoteValueSchema = zod_1.z.union([\n        CommonDataTypes.SharedReferenceSchema,\n        CommonDataTypes.RemoteReferenceSchema,\n        CommonDataTypes.LocalValueSchema,\n    ]);\n    // ListLocalValue = [*LocalValue];\n    const ListLocalValueSchema = zod_1.z.array(LocalOrRemoteValueSchema);\n    // ArrayLocalValue = {\n    //   type: \"array\",\n    //   value: ListLocalValue,\n    // }\n    const ArrayLocalValueSchema = zod_1.z.lazy(() => zod_1.z.object({\n        type: zod_1.z.literal('array'),\n        value: ListLocalValueSchema,\n    }));\n    // DateLocalValue = {\n    //   type: \"date\",\n    //   value: text\n    // }\n    const DateLocalValueSchema = zod_1.z.object({\n        type: zod_1.z.literal('date'),\n        value: zod_1.z.string().min(1),\n    });\n    // MappingLocalValue = [*[(LocalValue / text), LocalValue]];\n    const MappingLocalValueSchema = zod_1.z.lazy(() => zod_1.z.tuple([\n        zod_1.z.union([zod_1.z.string(), LocalOrRemoteValueSchema]),\n        LocalOrRemoteValueSchema,\n    ]));\n    // MapLocalValue = {\n    //   type: \"map\",\n    //   value: MappingLocalValue,\n    // }\n    const MapLocalValueSchema = zod_1.z.object({\n        type: zod_1.z.literal('map'),\n        value: zod_1.z.array(MappingLocalValueSchema),\n    });\n    // ObjectLocalValue = {\n    //   type: \"object\",\n    //   value: MappingLocalValue,\n    // }\n    const ObjectLocalValueSchema = zod_1.z.object({\n        type: zod_1.z.literal('object'),\n        value: zod_1.z.array(MappingLocalValueSchema),\n    });\n    // RegExpLocalValue = {\n    //   type: \"regexp\",\n    //   value: RegExpValue,\n    // }\n    const RegExpLocalValueSchema = zod_1.z.lazy(() => zod_1.z.object({\n        type: zod_1.z.literal('regexp'),\n        value: zod_1.z.object({\n            pattern: zod_1.z.string(),\n            flags: zod_1.z.string().optional(),\n        }),\n    }));\n    // SetLocalValue = {\n    //   type: \"set\",\n    //   value: ListLocalValue,\n    // }\n    const SetLocalValueSchema = zod_1.z.lazy(() => zod_1.z.object({\n        type: zod_1.z.literal('set'),\n        value: ListLocalValueSchema,\n    }));\n    // BrowsingContext = text;\n    CommonDataTypes.BrowsingContextSchema = zod_1.z.string();\n    CommonDataTypes.MaxDepthSchema = zod_1.z.number().int().nonnegative().max(MAX_INT);\n})(CommonDataTypes = exports.CommonDataTypes || (exports.CommonDataTypes = {}));\n/** @see https://w3c.github.io/webdriver-bidi/#module-script */\nvar Script;\n(function (Script) {\n    const RealmTypeSchema = zod_1.z.enum([\n        'window',\n        'dedicated-worker',\n        'shared-worker',\n        'service-worker',\n        'worker',\n        'paint-worklet',\n        'audio-worklet',\n        'worklet',\n    ]);\n    Script.GetRealmsParametersSchema = zod_1.z.object({\n        context: CommonDataTypes.BrowsingContextSchema.optional(),\n        type: RealmTypeSchema.optional(),\n    });\n    function parseGetRealmsParams(params) {\n        return parseObject(params, Script.GetRealmsParametersSchema);\n    }\n    Script.parseGetRealmsParams = parseGetRealmsParams;\n    // ContextTarget = {\n    //   context: BrowsingContext,\n    //   ?sandbox: text\n    // }\n    const ContextTargetSchema = zod_1.z.object({\n        context: CommonDataTypes.BrowsingContextSchema,\n        sandbox: zod_1.z.string().optional(),\n    });\n    // RealmTarget = {realm: Realm};\n    const RealmTargetSchema = zod_1.z.object({\n        realm: zod_1.z.string().min(1),\n    });\n    // Target = (\n    //   RealmTarget //\n    //   ContextTarget\n    // );\n    // Order is important, as `parse` is processed in the same order.\n    // `RealmTargetSchema` has higher priority.\n    const TargetSchema = zod_1.z.union([RealmTargetSchema, ContextTargetSchema]);\n    // ResultOwnership = \"root\" / \"none\"\n    const ResultOwnershipSchema = zod_1.z.enum(['root', 'none']);\n    // ScriptEvaluateParameters = {\n    //   expression: text;\n    //   target: Target;\n    //   ?awaitPromise: bool;\n    //   ?resultOwnership: ResultOwnership;\n    // }\n    const EvaluateParametersSchema = zod_1.z.object({\n        expression: zod_1.z.string(),\n        awaitPromise: zod_1.z.boolean(),\n        target: TargetSchema,\n        resultOwnership: ResultOwnershipSchema.optional(),\n    });\n    function parseEvaluateParams(params) {\n        return parseObject(params, EvaluateParametersSchema);\n    }\n    Script.parseEvaluateParams = parseEvaluateParams;\n    // DisownParameters = {\n    //   handles: [Handle]\n    //   target: script.Target;\n    // }\n    const DisownParametersSchema = zod_1.z.object({\n        target: TargetSchema,\n        handles: zod_1.z.array(zod_1.z.string()),\n    });\n    function parseDisownParams(params) {\n        return parseObject(params, DisownParametersSchema);\n    }\n    Script.parseDisownParams = parseDisownParams;\n    const ChannelIdSchema = zod_1.z.string();\n    const ChannelPropertiesSchema = zod_1.z.object({\n        channel: ChannelIdSchema,\n        // TODO(#294): maxDepth: CommonDataTypes.MaxDepthSchema.optional(),\n        // See: https://github.com/w3c/webdriver-bidi/pull/361/files#r1141961142\n        maxDepth: zod_1.z.number().int().min(1).max(1).optional(),\n        ownership: ResultOwnershipSchema.optional(),\n    });\n    Script.ChannelSchema = zod_1.z.object({\n        type: zod_1.z.literal('channel'),\n        value: ChannelPropertiesSchema,\n    });\n    // ArgumentValue = (\n    //   RemoteReference //\n    //   LocalValue //\n    //   script.Channel\n    // );\n    const ArgumentValueSchema = zod_1.z.union([\n        CommonDataTypes.RemoteReferenceSchema,\n        CommonDataTypes.SharedReferenceSchema,\n        CommonDataTypes.LocalValueSchema,\n        Script.ChannelSchema,\n    ]);\n    // CallFunctionParameters = {\n    //   functionDeclaration: text;\n    //   awaitPromise: bool;\n    //   target: script.Target;\n    //   ?arguments: [*script.ArgumentValue];\n    //   ?this: script.ArgumentValue;\n    //   ?resultOwnership: script.ResultOwnership;\n    // }\n    const CallFunctionParametersSchema = zod_1.z.object({\n        functionDeclaration: zod_1.z.string(),\n        target: TargetSchema,\n        arguments: zod_1.z.array(ArgumentValueSchema).optional(),\n        this: ArgumentValueSchema.optional(),\n        awaitPromise: zod_1.z.boolean(),\n        resultOwnership: ResultOwnershipSchema.optional(),\n    });\n    function parseCallFunctionParams(params) {\n        return parseObject(params, CallFunctionParametersSchema);\n    }\n    Script.parseCallFunctionParams = parseCallFunctionParams;\n})(Script = exports.Script || (exports.Script = {}));\n/** @see https://w3c.github.io/webdriver-bidi/#module-browsingContext */\nvar BrowsingContext;\n(function (BrowsingContext) {\n    // GetTreeParameters = {\n    //   ?maxDepth: js-uint,\n    //   ?root: browsingContext.BrowsingContext,\n    // }\n    const GetTreeParametersSchema = zod_1.z.object({\n        maxDepth: CommonDataTypes.MaxDepthSchema.optional(),\n        root: CommonDataTypes.BrowsingContextSchema.optional(),\n    });\n    function parseGetTreeParams(params) {\n        return parseObject(params, GetTreeParametersSchema);\n    }\n    BrowsingContext.parseGetTreeParams = parseGetTreeParams;\n    // ReadinessState = \"none\" / \"interactive\" / \"complete\"\n    const ReadinessStateSchema = zod_1.z.enum(['none', 'interactive', 'complete']);\n    // BrowsingContextNavigateParameters = {\n    //   context: BrowsingContext,\n    //   url: text,\n    //   ?wait: ReadinessState,\n    // }\n    // ReadinessState = \"none\" / \"interactive\" / \"complete\"\n    const NavigateParametersSchema = zod_1.z.object({\n        context: CommonDataTypes.BrowsingContextSchema,\n        url: zod_1.z.string().url(),\n        wait: ReadinessStateSchema.optional(),\n    });\n    function parseNavigateParams(params) {\n        return parseObject(params, NavigateParametersSchema);\n    }\n    BrowsingContext.parseNavigateParams = parseNavigateParams;\n    // BrowsingContextCreateType = \"tab\" / \"window\"\n    // BrowsingContextCreateParameters = {\n    //   type: BrowsingContextCreateType\n    // }\n    const CreateParametersSchema = zod_1.z.object({\n        type: zod_1.z.enum(['tab', 'window']),\n        referenceContext: CommonDataTypes.BrowsingContextSchema.optional(),\n    });\n    function parseCreateParams(params) {\n        return parseObject(params, CreateParametersSchema);\n    }\n    BrowsingContext.parseCreateParams = parseCreateParams;\n    // BrowsingContextCloseParameters = {\n    //   context: BrowsingContext\n    // }\n    const CloseParametersSchema = zod_1.z.object({\n        context: CommonDataTypes.BrowsingContextSchema,\n    });\n    function parseCloseParams(params) {\n        return parseObject(params, CloseParametersSchema);\n    }\n    BrowsingContext.parseCloseParams = parseCloseParams;\n    // browsingContext.CaptureScreenshotParameters = {\n    //   context: browsingContext.BrowsingContext\n    // }\n    const CaptureScreenshotParametersSchema = zod_1.z.object({\n        context: CommonDataTypes.BrowsingContextSchema,\n    });\n    function parseCaptureScreenshotParams(params) {\n        return parseObject(params, CaptureScreenshotParametersSchema);\n    }\n    BrowsingContext.parseCaptureScreenshotParams = parseCaptureScreenshotParams;\n    // All units are in cm.\n    // PrintPageParameters = {\n    //   ?height: (float .ge 0.0) .default 27.94,\n    //   ?width: (float .ge 0.0) .default 21.59,\n    // }\n    const PrintPageParametersSchema = zod_1.z.object({\n        height: zod_1.z.number().min(0.0).default(27.94).optional(),\n        width: zod_1.z.number().min(0.0).default(21.59).optional(),\n    });\n    // All units are in cm.\n    // PrintMarginParameters = {\n    //   ?bottom: (float .ge 0.0) .default 1.0,\n    //   ?left: (float .ge 0.0) .default 1.0,\n    //   ?right: (float .ge 0.0) .default 1.0,\n    //   ?top: (float .ge 0.0) .default 1.0,\n    // }\n    const PrintMarginParametersSchema = zod_1.z.object({\n        bottom: zod_1.z.number().min(0.0).default(1.0).optional(),\n        left: zod_1.z.number().min(0.0).default(1.0).optional(),\n        right: zod_1.z.number().min(0.0).default(1.0).optional(),\n        top: zod_1.z.number().min(0.0).default(1.0).optional(),\n    });\n    /** @see https://w3c.github.io/webdriver/#dfn-parse-a-page-range */\n    const PrintPageRangesSchema = zod_1.z\n        .array(zod_1.z.union([zod_1.z.string().min(1), zod_1.z.number().int().nonnegative()]))\n        .refine((pageRanges) => {\n        return pageRanges.every((pageRange) => {\n            const match = String(pageRange).match(\n            // matches: '2' | '2-' | '-2' | '2-4'\n            /^(?:(?:\\d+)|(?:\\d+[-])|(?:[-]\\d+)|(?:(?<start>\\d+)[-](?<end>\\d+)))$/);\n            // If a page range is specified, validate start <= end.\n            const { start, end } = match?.groups ?? {};\n            if (start && end && Number(start) > Number(end)) {\n                return false;\n            }\n            return match;\n        });\n    });\n    // PrintParameters = {\n    //   context: browsingContext.BrowsingContext,\n    //   ?background: bool .default false,\n    //   ?margin: browsingContext.PrintMarginParameters,\n    //   ?orientation: (\"portrait\" / \"landscape\") .default \"portrait\",\n    //   ?page: browsingContext.PrintPageParameters,\n    //   ?pageRanges: [*(js-uint / text)],\n    //   ?scale: 0.1..2.0 .default 1.0,\n    //   ?shrinkToFit: bool .default true,\n    // }\n    const PrintParametersSchema = zod_1.z.object({\n        context: CommonDataTypes.BrowsingContextSchema,\n        background: zod_1.z.boolean().default(false).optional(),\n        margin: PrintMarginParametersSchema.optional(),\n        orientation: zod_1.z\n            .enum(['portrait', 'landscape'])\n            .default('portrait')\n            .optional(),\n        page: PrintPageParametersSchema.optional(),\n        pageRanges: PrintPageRangesSchema.default([]).optional(),\n        scale: zod_1.z.number().min(0.1).max(2.0).default(1.0).optional(),\n        shrinkToFit: zod_1.z.boolean().default(true).optional(),\n    });\n    function parsePrintParams(params) {\n        return parseObject(params, PrintParametersSchema);\n    }\n    BrowsingContext.parsePrintParams = parsePrintParams;\n})(BrowsingContext = exports.BrowsingContext || (exports.BrowsingContext = {}));\nvar CDP;\n(function (CDP) {\n    const SendCommandParamsSchema = zod_1.z.object({\n        // Allowing any cdpMethod, and casting to proper type later on.\n        cdpMethod: zod_1.z.string(),\n        // `passthrough` allows object to have any fields.\n        // https://github.com/colinhacks/zod#passthrough\n        cdpParams: zod_1.z.object({}).passthrough(),\n        cdpSession: zod_1.z.string().optional(),\n    });\n    function parseSendCommandParams(params) {\n        return parseObject(params, SendCommandParamsSchema);\n    }\n    CDP.parseSendCommandParams = parseSendCommandParams;\n    const GetSessionParamsSchema = zod_1.z.object({\n        context: CommonDataTypes.BrowsingContextSchema,\n    });\n    function parseGetSessionParams(params) {\n        return parseObject(params, GetSessionParamsSchema);\n    }\n    CDP.parseGetSessionParams = parseGetSessionParams;\n})(CDP = exports.CDP || (exports.CDP = {}));\n/** @see https://w3c.github.io/webdriver-bidi/#module-session */\nvar Session;\n(function (Session) {\n    const SubscriptionRequestParametersEventsSchema = zod_1.z.enum([\n        protocol_js_1.BrowsingContext.AllEvents,\n        ...Object.values(protocol_js_1.BrowsingContext.EventNames),\n        protocol_js_1.Log.AllEvents,\n        ...Object.values(protocol_js_1.Log.EventNames),\n        protocol_js_1.CDP.AllEvents,\n        ...Object.values(protocol_js_1.CDP.EventNames),\n        protocol_js_1.Network.AllEvents,\n        ...Object.values(protocol_js_1.Network.EventNames),\n        protocol_js_1.Script.AllEvents,\n        ...Object.values(protocol_js_1.Script.EventNames),\n    ]);\n    // SessionSubscribeParameters = {\n    //   events: [*text],\n    //   ?contexts: [*BrowsingContext],\n    // }\n    const SubscriptionRequestParametersSchema = zod_1.z.object({\n        events: zod_1.z.array(SubscriptionRequestParametersEventsSchema),\n        contexts: zod_1.z.array(CommonDataTypes.BrowsingContextSchema).optional(),\n    });\n    function parseSubscribeParams(params) {\n        return parseObject(params, SubscriptionRequestParametersSchema);\n    }\n    Session.parseSubscribeParams = parseSubscribeParams;\n})(Session = exports.Session || (exports.Session = {}));\n//# sourceMappingURL=protocol-parser.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EventEmitter = void 0;\n/**\n * Copyright 2022 Google LLC.\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst mitt_1 = __importDefault(require(\"mitt\"));\nclass EventEmitter {\n    #emitter = (0, mitt_1.default)();\n    on(type, handler) {\n        this.#emitter.on(type, handler);\n        return this;\n    }\n    /**\n     * Like `on` but the listener will only be fired once and then it will be removed.\n     * @param event The event you'd like to listen to\n     * @param handler The handler function to run when the event occurs\n     * @return `this` to enable chaining method calls.\n     */\n    once(event, handler) {\n        const onceHandler = (eventData) => {\n            handler(eventData);\n            this.off(event, onceHandler);\n        };\n        return this.on(event, onceHandler);\n    }\n    off(type, handler) {\n        this.#emitter.off(type, handler);\n        return this;\n    }\n    /**\n     * Emits an event and call any associated listeners.\n     *\n     * @param event The event to emit.\n     * @param eventData Any data to emit with the event.\n     * @return `true` if there are any listeners, `false` otherwise.\n     */\n    emit(event, eventData) {\n        this.#emitter.emit(event, eventData);\n    }\n}\nexports.EventEmitter = EventEmitter;\n//# sourceMappingURL=EventEmitter.js.map","module.exports=function(n){return{all:n=n||new Map,on:function(e,t){var i=n.get(e);i?i.push(t):n.set(e,[t])},off:function(e,t){var i=n.get(e);i&&(t?i.splice(i.indexOf(t)>>>0,1):n.set(e,[]))},emit:function(e,t){var i=n.get(e);i&&i.slice().map(function(n){n(t)}),(i=n.get(\"*\"))&&i.slice().map(function(n){n(e,t)})}}};\n//# sourceMappingURL=mitt.js.map\n","\"use strict\";\n/**\n * Copyright 2021 Google LLC.\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LogType = void 0;\nvar LogType;\n(function (LogType) {\n    // keep-sorted start\n    LogType[\"bidi\"] = \"BiDi Messages\";\n    LogType[\"browsingContexts\"] = \"Browsing Contexts\";\n    LogType[\"cdp\"] = \"CDP\";\n    LogType[\"system\"] = \"System\";\n    // keep-sorted end\n})(LogType = exports.LogType || (exports.LogType = {}));\n//# sourceMappingURL=log.js.map","\"use strict\";\n/**\n * Copyright 2022 Google LLC.\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ProcessingQueue = void 0;\nconst log_js_1 = require(\"./log.js\");\nclass ProcessingQueue {\n    #catch;\n    #logger;\n    #processor;\n    #queue = [];\n    // Flag to keep only 1 active processor.\n    #isProcessing = false;\n    constructor(processor, _catch = () => Promise.resolve(), logger) {\n        this.#catch = _catch;\n        this.#processor = processor;\n        this.#logger = logger;\n    }\n    add(entry) {\n        this.#queue.push(entry);\n        // No need in waiting. Just initialise processor if needed.\n        this.#processIfNeeded();\n    }\n    async #processIfNeeded() {\n        if (this.#isProcessing) {\n            return;\n        }\n        this.#isProcessing = true;\n        while (this.#queue.length > 0) {\n            const entryPromise = this.#queue.shift();\n            if (entryPromise !== undefined) {\n                await entryPromise\n                    .then((entry) => this.#processor(entry))\n                    .catch((e) => {\n                    this.#logger?.(log_js_1.LogType.system, 'Event was not processed:', e);\n                    this.#catch(e);\n                })\n                    .finally();\n            }\n        }\n        this.#isProcessing = false;\n    }\n}\nexports.ProcessingQueue = ProcessingQueue;\n//# sourceMappingURL=processingQueue.js.map","\"use strict\";\n/**\n * Copyright 2023 Google LLC.\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.inchesFromCm = void 0;\n/** @return Given an input in cm, convert it to inches. */\nfunction inchesFromCm(cm) {\n    return cm / 2.54;\n}\nexports.inchesFromCm = inchesFromCm;\n//# sourceMappingURL=unitConversions.js.map","\"use strict\";\n/**\n * Copyright 2022 Google LLC.\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Deferred = void 0;\nclass Deferred {\n    #isFinished = false;\n    #promise;\n    #resolve = () => { };\n    #reject = () => { };\n    get isFinished() {\n        return this.#isFinished;\n    }\n    constructor() {\n        this.#promise = new Promise((resolve, reject) => {\n            this.#resolve = resolve;\n            this.#reject = reject;\n        });\n    }\n    then(onFulfilled, onRejected) {\n        return this.#promise.then(onFulfilled, onRejected);\n    }\n    catch(onRejected) {\n        return this.#promise.catch(onRejected);\n    }\n    resolve(value) {\n        this.#isFinished = true;\n        this.#resolve(value);\n    }\n    reject(reason) {\n        this.#isFinished = true;\n        this.#reject(reason);\n    }\n    finally(onFinally) {\n        return this.#promise.finally(onFinally);\n    }\n    [Symbol.toStringTag] = 'Promise';\n}\nexports.Deferred = Deferred;\n//# sourceMappingURL=deferred.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ScriptEvaluator = exports.SHARED_ID_DIVIDER = void 0;\nconst protocol_js_1 = require(\"../../../protocol/protocol.js\");\n// As `script.evaluate` wraps call into serialization script, `lineNumber`\n// should be adjusted.\nconst CALL_FUNCTION_STACKTRACE_LINE_OFFSET = 1;\nconst EVALUATE_STACKTRACE_LINE_OFFSET = 0;\nexports.SHARED_ID_DIVIDER = '_element_';\nclass ScriptEvaluator {\n    #eventManager;\n    constructor(eventManager) {\n        this.#eventManager = eventManager;\n    }\n    /**\n     * Gets the string representation of an object. This is equivalent to\n     * calling toString() on the object value.\n     * @param cdpObject CDP remote object representing an object.\n     * @param realm\n     * @return string The stringified object.\n     */\n    static async stringifyObject(cdpObject, realm) {\n        const stringifyResult = await realm.cdpClient.sendCommand('Runtime.callFunctionOn', {\n            functionDeclaration: String((obj) => {\n                return String(obj);\n            }),\n            awaitPromise: false,\n            arguments: [cdpObject],\n            returnByValue: true,\n            executionContextId: realm.executionContextId,\n        });\n        return stringifyResult.result.value;\n    }\n    /**\n     * Serializes a given CDP object into BiDi, keeping references in the\n     * target's `globalThis`.\n     * @param cdpRemoteObject CDP remote object to be serialized.\n     * @param resultOwnership Indicates desired ResultOwnership.\n     * @param realm\n     */\n    async serializeCdpObject(cdpRemoteObject, resultOwnership, realm) {\n        const arg = ScriptEvaluator.#cdpRemoteObjectToCallArgument(cdpRemoteObject);\n        const cdpWebDriverValue = await realm.cdpClient.sendCommand('Runtime.callFunctionOn', {\n            functionDeclaration: String((obj) => obj),\n            awaitPromise: false,\n            arguments: [arg],\n            generateWebDriverValue: true,\n            executionContextId: realm.executionContextId,\n        });\n        return realm.cdpToBidiValue(cdpWebDriverValue, resultOwnership);\n    }\n    async scriptEvaluate(realm, expression, awaitPromise, resultOwnership) {\n        const cdpEvaluateResult = await realm.cdpClient.sendCommand('Runtime.evaluate', {\n            contextId: realm.executionContextId,\n            expression,\n            awaitPromise,\n            generateWebDriverValue: true,\n        });\n        if (cdpEvaluateResult.exceptionDetails) {\n            // Serialize exception details.\n            return {\n                exceptionDetails: await this.#serializeCdpExceptionDetails(cdpEvaluateResult.exceptionDetails, EVALUATE_STACKTRACE_LINE_OFFSET, resultOwnership, realm),\n                type: 'exception',\n                realm: realm.realmId,\n            };\n        }\n        return {\n            type: 'success',\n            result: await realm.cdpToBidiValue(cdpEvaluateResult, resultOwnership),\n            realm: realm.realmId,\n        };\n    }\n    async callFunction(realm, functionDeclaration, _this, _arguments, awaitPromise, resultOwnership) {\n        const callFunctionAndSerializeScript = `(...args)=>{ return _callFunction((\\n${functionDeclaration}\\n), args);\n      function _callFunction(f, args) {\n        const deserializedThis = args.shift();\n        const deserializedArgs = args;\n        return f.apply(deserializedThis, deserializedArgs);\n      }}`;\n        const thisAndArgumentsList = [\n            await this.#deserializeToCdpArg(_this, realm),\n        ];\n        thisAndArgumentsList.push(...(await Promise.all(_arguments.map(async (a) => {\n            return this.#deserializeToCdpArg(a, realm);\n        }))));\n        let cdpCallFunctionResult;\n        try {\n            cdpCallFunctionResult = await realm.cdpClient.sendCommand('Runtime.callFunctionOn', {\n                functionDeclaration: callFunctionAndSerializeScript,\n                awaitPromise,\n                arguments: thisAndArgumentsList,\n                generateWebDriverValue: true,\n                executionContextId: realm.executionContextId,\n            });\n        }\n        catch (e) {\n            // Heuristic to determine if the problem is in the argument.\n            // The check can be done on the `deserialization` step, but this approach\n            // helps to save round-trips.\n            if (e.code === -32000 &&\n                [\n                    'Could not find object with given id',\n                    'Argument should belong to the same JavaScript world as target object',\n                ].includes(e.message)) {\n                throw new protocol_js_1.Message.InvalidArgumentException('Handle was not found.');\n            }\n            throw e;\n        }\n        if (cdpCallFunctionResult.exceptionDetails) {\n            // Serialize exception details.\n            return {\n                exceptionDetails: await this.#serializeCdpExceptionDetails(cdpCallFunctionResult.exceptionDetails, CALL_FUNCTION_STACKTRACE_LINE_OFFSET, resultOwnership, realm),\n                type: 'exception',\n                realm: realm.realmId,\n            };\n        }\n        return {\n            type: 'success',\n            result: await realm.cdpToBidiValue(cdpCallFunctionResult, resultOwnership),\n            realm: realm.realmId,\n        };\n    }\n    static #cdpRemoteObjectToCallArgument(cdpRemoteObject) {\n        if (cdpRemoteObject.objectId !== undefined) {\n            return { objectId: cdpRemoteObject.objectId };\n        }\n        if (cdpRemoteObject.unserializableValue !== undefined) {\n            return { unserializableValue: cdpRemoteObject.unserializableValue };\n        }\n        return { value: cdpRemoteObject.value };\n    }\n    async #deserializeToCdpArg(argumentValue, realm) {\n        if ('sharedId' in argumentValue) {\n            const [navigableId, rawBackendNodeId] = argumentValue.sharedId.split(exports.SHARED_ID_DIVIDER);\n            const backendNodeId = parseInt(rawBackendNodeId ?? '');\n            if (isNaN(backendNodeId) ||\n                backendNodeId === undefined ||\n                navigableId === undefined) {\n                throw new protocol_js_1.Message.InvalidArgumentException(`SharedId \"${argumentValue.sharedId}\" should have format \"{navigableId}${exports.SHARED_ID_DIVIDER}{backendNodeId}\".`);\n            }\n            if (realm.navigableId !== navigableId) {\n                throw new protocol_js_1.Message.NoSuchNodeException(`SharedId \"${argumentValue.sharedId}\" belongs to different document. Current document is ${realm.navigableId}.`);\n            }\n            try {\n                const obj = await realm.cdpClient.sendCommand('DOM.resolveNode', {\n                    backendNodeId,\n                    executionContextId: realm.executionContextId,\n                });\n                // TODO(#375): Release `obj.object.objectId` after using.\n                return { objectId: obj.object.objectId };\n            }\n            catch (e) {\n                // Heuristic to detect \"no such node\" exception. Based on the  specific\n                // CDP implementation.\n                if (e.code === -32000 && e.message === 'No node with given id found') {\n                    throw new protocol_js_1.Message.NoSuchNodeException(`SharedId \"${argumentValue.sharedId}\" was not found.`);\n                }\n                throw e;\n            }\n        }\n        if ('handle' in argumentValue) {\n            return { objectId: argumentValue.handle };\n        }\n        switch (argumentValue.type) {\n            // Primitive Protocol Value\n            // https://w3c.github.io/webdriver-bidi/#data-types-protocolValue-primitiveProtocolValue\n            case 'undefined':\n                return { unserializableValue: 'undefined' };\n            case 'null':\n                return { unserializableValue: 'null' };\n            case 'string':\n                return { value: argumentValue.value };\n            case 'number':\n                if (argumentValue.value === 'NaN') {\n                    return { unserializableValue: 'NaN' };\n                }\n                else if (argumentValue.value === '-0') {\n                    return { unserializableValue: '-0' };\n                }\n                else if (argumentValue.value === 'Infinity') {\n                    return { unserializableValue: 'Infinity' };\n                }\n                else if (argumentValue.value === '-Infinity') {\n                    return { unserializableValue: '-Infinity' };\n                }\n                return {\n                    value: argumentValue.value,\n                };\n            case 'boolean':\n                return { value: Boolean(argumentValue.value) };\n            case 'bigint':\n                return {\n                    unserializableValue: `BigInt(${JSON.stringify(argumentValue.value)})`,\n                };\n            case 'date':\n                return {\n                    unserializableValue: `new Date(Date.parse(${JSON.stringify(argumentValue.value)}))`,\n                };\n            case 'regexp':\n                return {\n                    unserializableValue: `new RegExp(${JSON.stringify(argumentValue.value.pattern)}, ${JSON.stringify(argumentValue.value.flags)})`,\n                };\n            case 'map': {\n                // TODO(sadym): If none of the nested keys and values has a remote\n                // reference, serialize to `unserializableValue` without CDP roundtrip.\n                const keyValueArray = await this.#flattenKeyValuePairs(argumentValue.value, realm);\n                const argEvalResult = await realm.cdpClient.sendCommand('Runtime.callFunctionOn', {\n                    functionDeclaration: String((...args) => {\n                        const result = new Map();\n                        for (let i = 0; i < args.length; i += 2) {\n                            result.set(args[i], args[i + 1]);\n                        }\n                        return result;\n                    }),\n                    awaitPromise: false,\n                    arguments: keyValueArray,\n                    returnByValue: false,\n                    executionContextId: realm.executionContextId,\n                });\n                // TODO(#375): Release `argEvalResult.result.objectId` after using.\n                return { objectId: argEvalResult.result.objectId };\n            }\n            case 'object': {\n                // TODO(sadym): If none of the nested keys and values has a remote\n                //  reference, serialize to `unserializableValue` without CDP roundtrip.\n                const keyValueArray = await this.#flattenKeyValuePairs(argumentValue.value, realm);\n                const argEvalResult = await realm.cdpClient.sendCommand('Runtime.callFunctionOn', {\n                    functionDeclaration: String((...args) => {\n                        const result = {};\n                        for (let i = 0; i < args.length; i += 2) {\n                            // Key should be either `string`, `number`, or `symbol`.\n                            const key = args[i];\n                            result[key] = args[i + 1];\n                        }\n                        return result;\n                    }),\n                    awaitPromise: false,\n                    arguments: keyValueArray,\n                    returnByValue: false,\n                    executionContextId: realm.executionContextId,\n                });\n                // TODO(#375): Release `argEvalResult.result.objectId` after using.\n                return { objectId: argEvalResult.result.objectId };\n            }\n            case 'array': {\n                // TODO(sadym): If none of the nested items has a remote reference,\n                // serialize to `unserializableValue` without CDP roundtrip.\n                const args = await this.#flattenValueList(argumentValue.value, realm);\n                const argEvalResult = await realm.cdpClient.sendCommand('Runtime.callFunctionOn', {\n                    functionDeclaration: String((...args) => {\n                        return args;\n                    }),\n                    awaitPromise: false,\n                    arguments: args,\n                    returnByValue: false,\n                    executionContextId: realm.executionContextId,\n                });\n                // TODO(#375): Release `argEvalResult.result.objectId` after using.\n                return { objectId: argEvalResult.result.objectId };\n            }\n            case 'set': {\n                // TODO(sadym): if none of the nested items has a remote reference,\n                // serialize to `unserializableValue` without CDP roundtrip.\n                const args = await this.#flattenValueList(argumentValue.value, realm);\n                const argEvalResult = await realm.cdpClient.sendCommand('Runtime.callFunctionOn', {\n                    functionDeclaration: String((...args) => {\n                        return new Set(args);\n                    }),\n                    awaitPromise: false,\n                    arguments: args,\n                    returnByValue: false,\n                    executionContextId: realm.executionContextId,\n                });\n                // TODO(#375): Release `argEvalResult.result.objectId` after using.\n                return { objectId: argEvalResult.result.objectId };\n            }\n            case 'channel': {\n                const createChannelHandleResult = await realm.cdpClient.sendCommand('Runtime.callFunctionOn', {\n                    functionDeclaration: String(() => {\n                        const queue = [];\n                        let queueNonEmptyResolver = null;\n                        return {\n                            /**\n                             * Gets a promise, which is resolved as soon as a message occurs\n                             * in the queue.\n                             */\n                            async getMessage() {\n                                const onMessage = queue.length > 0\n                                    ? Promise.resolve()\n                                    : new Promise((resolve) => {\n                                        queueNonEmptyResolver = resolve;\n                                    });\n                                await onMessage;\n                                return queue.shift();\n                            },\n                            /**\n                             * Adds a message to the queue.\n                             * Resolves the pending promise if needed.\n                             */\n                            sendMessage(message) {\n                                queue.push(message);\n                                if (queueNonEmptyResolver !== null) {\n                                    queueNonEmptyResolver();\n                                    queueNonEmptyResolver = null;\n                                }\n                            },\n                        };\n                    }),\n                    returnByValue: false,\n                    executionContextId: realm.executionContextId,\n                    generateWebDriverValue: false,\n                });\n                const channelHandle = createChannelHandleResult.result.objectId;\n                // Long-poll the message queue asynchronously.\n                this.#initChannelListener(argumentValue, channelHandle, realm);\n                const sendMessageArgResult = await realm.cdpClient.sendCommand('Runtime.callFunctionOn', {\n                    functionDeclaration: String((channelHandle) => {\n                        return channelHandle.sendMessage;\n                    }),\n                    arguments: [\n                        {\n                            objectId: channelHandle,\n                        },\n                    ],\n                    returnByValue: false,\n                    executionContextId: realm.executionContextId,\n                    generateWebDriverValue: false,\n                });\n                return { objectId: sendMessageArgResult.result.objectId };\n            }\n            // TODO(#375): Dispose of nested objects.\n            default:\n                throw new Error(`Value ${JSON.stringify(argumentValue)} is not deserializable.`);\n        }\n    }\n    async #flattenKeyValuePairs(value, realm) {\n        const keyValueArray = [];\n        for (const pair of value) {\n            const key = pair[0];\n            const value = pair[1];\n            let keyArg;\n            if (typeof key === 'string') {\n                // Key is a string.\n                keyArg = { value: key };\n            }\n            else {\n                // Key is a serialized value.\n                keyArg = await this.#deserializeToCdpArg(key, realm);\n            }\n            const valueArg = await this.#deserializeToCdpArg(value, realm);\n            keyValueArray.push(keyArg);\n            keyValueArray.push(valueArg);\n        }\n        return keyValueArray;\n    }\n    async #flattenValueList(list, realm) {\n        const result = [];\n        for (const value of list) {\n            result.push(await this.#deserializeToCdpArg(value, realm));\n        }\n        return result;\n    }\n    async #initChannelListener(channel, channelHandle, realm) {\n        const channelId = channel.value.channel;\n        // TODO(#294): Remove this loop after the realm is destroyed.\n        // Rely on the CDP throwing exception in such a case.\n        for (;;) {\n            const message = await realm.cdpClient.sendCommand('Runtime.callFunctionOn', {\n                functionDeclaration: String(async (channelHandle) => channelHandle.getMessage()),\n                arguments: [\n                    {\n                        objectId: channelHandle,\n                    },\n                ],\n                awaitPromise: true,\n                executionContextId: realm.executionContextId,\n                generateWebDriverValue: true,\n            });\n            this.#eventManager.registerPromiseEvent(realm\n                .cdpToBidiValue(message, channel.value.ownership ?? 'none')\n                .then((data) => ({\n                method: protocol_js_1.Script.EventNames.MessageEvent,\n                params: {\n                    channel: channelId,\n                    data,\n                    source: {\n                        realm: realm.realmId,\n                        context: realm.browsingContextId,\n                    },\n                },\n            })), realm.browsingContextId, protocol_js_1.Script.EventNames.MessageEvent);\n        }\n    }\n    async #serializeCdpExceptionDetails(cdpExceptionDetails, lineOffset, resultOwnership, realm) {\n        const callFrames = cdpExceptionDetails.stackTrace?.callFrames.map((frame) => ({\n            url: frame.url,\n            functionName: frame.functionName,\n            // As `script.evaluate` wraps call into serialization script, so\n            // `lineNumber` should be adjusted.\n            lineNumber: frame.lineNumber - lineOffset,\n            columnNumber: frame.columnNumber,\n        }));\n        const exception = await this.serializeCdpObject(\n        // Exception should always be there.\n        cdpExceptionDetails.exception, resultOwnership, realm);\n        const text = await ScriptEvaluator.stringifyObject(cdpExceptionDetails.exception, realm);\n        return {\n            exception,\n            columnNumber: cdpExceptionDetails.columnNumber,\n            // As `script.evaluate` wraps call into serialization script, so\n            // `lineNumber` should be adjusted.\n            lineNumber: cdpExceptionDetails.lineNumber - lineOffset,\n            stackTrace: {\n                callFrames: callFrames || [],\n            },\n            text: text || cdpExceptionDetails.text,\n        };\n    }\n}\nexports.ScriptEvaluator = ScriptEvaluator;\n//# sourceMappingURL=scriptEvaluator.js.map","\"use strict\";\n/**\n * Copyright 2022 Google LLC.\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Realm = void 0;\nconst scriptEvaluator_js_1 = require(\"./scriptEvaluator.js\");\nclass Realm {\n    #realmStorage;\n    #browsingContextStorage;\n    #realmId;\n    #browsingContextId;\n    #executionContextId;\n    #origin;\n    #type;\n    #cdpClient;\n    #eventManager;\n    #scriptEvaluator;\n    sandbox;\n    cdpSessionId;\n    constructor(realmStorage, browsingContextStorage, realmId, browsingContextId, executionContextId, origin, type, sandbox, cdpSessionId, cdpClient, eventManager) {\n        this.#realmId = realmId;\n        this.#browsingContextId = browsingContextId;\n        this.#executionContextId = executionContextId;\n        this.sandbox = sandbox;\n        this.#origin = origin;\n        this.#type = type;\n        this.cdpSessionId = cdpSessionId;\n        this.#cdpClient = cdpClient;\n        this.#realmStorage = realmStorage;\n        this.#browsingContextStorage = browsingContextStorage;\n        this.#eventManager = eventManager;\n        this.#scriptEvaluator = new scriptEvaluator_js_1.ScriptEvaluator(this.#eventManager);\n        this.#realmStorage.realmMap.set(this.#realmId, this);\n    }\n    async disown(handle) {\n        // Disowning an object from different realm does nothing.\n        if (this.#realmStorage.knownHandlesToRealm.get(handle) !== this.realmId) {\n            return;\n        }\n        try {\n            await this.cdpClient.sendCommand('Runtime.releaseObject', {\n                objectId: handle,\n            });\n        }\n        catch (e) {\n            // Heuristic to determine if the problem is in the unknown handler.\n            // Ignore the error if so.\n            if (!(e.code === -32000 && e.message === 'Invalid remote object id')) {\n                throw e;\n            }\n        }\n        this.#realmStorage.knownHandlesToRealm.delete(handle);\n    }\n    async cdpToBidiValue(cdpValue, resultOwnership) {\n        const cdpWebDriverValue = cdpValue.result.webDriverValue;\n        const bidiValue = this.webDriverValueToBiDi(cdpWebDriverValue);\n        if (cdpValue.result.objectId) {\n            const objectId = cdpValue.result.objectId;\n            if (resultOwnership === 'root') {\n                // Extend BiDi value with `handle` based on required `resultOwnership`\n                // and  CDP response but not on the actual BiDi type.\n                bidiValue.handle = objectId;\n                // Remember all the handles sent to client.\n                this.#realmStorage.knownHandlesToRealm.set(objectId, this.realmId);\n            }\n            else {\n                // No need in awaiting for the object to be released.\n                this.cdpClient.sendCommand('Runtime.releaseObject', { objectId });\n            }\n        }\n        return bidiValue;\n    }\n    webDriverValueToBiDi(webDriverValue) {\n        // This relies on the CDP to implement proper BiDi serialization, except\n        // backendNodeId/sharedId.\n        const result = webDriverValue;\n        const bidiValue = result.value;\n        if (bidiValue === undefined) {\n            return result;\n        }\n        if (result.type === 'node') {\n            if (Object.hasOwn(bidiValue, 'backendNodeId')) {\n                bidiValue.sharedId = `${this.navigableId}${scriptEvaluator_js_1.SHARED_ID_DIVIDER}${bidiValue.backendNodeId}`;\n                delete bidiValue['backendNodeId'];\n            }\n            if (Object.hasOwn(bidiValue, 'children')) {\n                for (const i in bidiValue.children) {\n                    bidiValue.children[i] = this.webDriverValueToBiDi(bidiValue.children[i]);\n                }\n            }\n        }\n        // Recursively update the nested values.\n        if (['array', 'set'].includes(webDriverValue.type)) {\n            for (const i in bidiValue) {\n                bidiValue[i] = this.webDriverValueToBiDi(bidiValue[i]);\n            }\n        }\n        if (['object', 'map'].includes(webDriverValue.type)) {\n            for (const i in bidiValue) {\n                bidiValue[i] = [\n                    this.webDriverValueToBiDi(bidiValue[i][0]),\n                    this.webDriverValueToBiDi(bidiValue[i][1]),\n                ];\n            }\n        }\n        return result;\n    }\n    toBiDi() {\n        return {\n            realm: this.realmId,\n            origin: this.origin,\n            type: this.type,\n            context: this.browsingContextId,\n            ...(this.sandbox === undefined ? {} : { sandbox: this.sandbox }),\n        };\n    }\n    get realmId() {\n        return this.#realmId;\n    }\n    get navigableId() {\n        return (this.#browsingContextStorage.findContext(this.#browsingContextId)\n            ?.navigableId ?? 'UNKNOWN');\n    }\n    get browsingContextId() {\n        return this.#browsingContextId;\n    }\n    get executionContextId() {\n        return this.#executionContextId;\n    }\n    get origin() {\n        return this.#origin;\n    }\n    get type() {\n        return this.#type;\n    }\n    get cdpClient() {\n        return this.#cdpClient;\n    }\n    async callFunction(functionDeclaration, _this, _arguments, awaitPromise, resultOwnership) {\n        const context = this.#browsingContextStorage.getKnownContext(this.browsingContextId);\n        await context.awaitUnblocked();\n        return {\n            result: await this.#scriptEvaluator.callFunction(this, functionDeclaration, _this, _arguments, awaitPromise, resultOwnership),\n        };\n    }\n    async scriptEvaluate(expression, awaitPromise, resultOwnership) {\n        const context = this.#browsingContextStorage.getKnownContext(this.browsingContextId);\n        await context.awaitUnblocked();\n        return {\n            result: await this.#scriptEvaluator.scriptEvaluate(this, expression, awaitPromise, resultOwnership),\n        };\n    }\n    /**\n     * Serializes a given CDP object into BiDi, keeping references in the\n     * target's `globalThis`.\n     * @param cdpObject CDP remote object to be serialized.\n     * @param resultOwnership Indicates desired ResultOwnership.\n     */\n    async serializeCdpObject(cdpObject, resultOwnership) {\n        return this.#scriptEvaluator.serializeCdpObject(cdpObject, resultOwnership, this);\n    }\n    /**\n     * Gets the string representation of an object. This is equivalent to\n     * calling toString() on the object value.\n     * @param cdpObject CDP remote object representing an object.\n     * @return string The stringified object.\n     */\n    async stringifyObject(cdpObject) {\n        return scriptEvaluator_js_1.ScriptEvaluator.stringifyObject(cdpObject, this);\n    }\n}\nexports.Realm = Realm;\n//# sourceMappingURL=realm.js.map","\"use strict\";\n/**\n * Copyright 2022 Google LLC.\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BrowsingContextImpl = void 0;\nconst unitConversions_js_1 = require(\"../../../utils/unitConversions.js\");\nconst protocol_js_1 = require(\"../../../protocol/protocol.js\");\nconst log_js_1 = require(\"../../../utils/log.js\");\nconst deferred_js_1 = require(\"../../../utils/deferred.js\");\nconst realm_js_1 = require(\"../script/realm.js\");\nclass BrowsingContextImpl {\n    #defers = {\n        documentInitialized: new deferred_js_1.Deferred(),\n        Page: {\n            navigatedWithinDocument: new deferred_js_1.Deferred(),\n            lifecycleEvent: {\n                DOMContentLoaded: new deferred_js_1.Deferred(),\n                load: new deferred_js_1.Deferred(),\n            },\n        },\n    };\n    #contextId;\n    #parentId;\n    #eventManager;\n    #children = new Map();\n    #realmStorage;\n    #url = 'about:blank';\n    #loaderId = null;\n    #cdpTarget;\n    #maybeDefaultRealm;\n    #browsingContextStorage;\n    #logger;\n    get #defaultRealm() {\n        if (this.#maybeDefaultRealm === undefined) {\n            throw new Error(`No default realm for browsing context ${this.#contextId}`);\n        }\n        return this.#maybeDefaultRealm;\n    }\n    constructor(cdpTarget, realmStorage, contextId, parentId, eventManager, browsingContextStorage, logger) {\n        this.#cdpTarget = cdpTarget;\n        this.#realmStorage = realmStorage;\n        this.#contextId = contextId;\n        this.#parentId = parentId;\n        this.#eventManager = eventManager;\n        this.#browsingContextStorage = browsingContextStorage;\n        this.#logger = logger;\n        this.#initListeners();\n    }\n    static async create(cdpTarget, realmStorage, contextId, parentId, eventManager, browsingContextStorage, logger) {\n        const context = new BrowsingContextImpl(cdpTarget, realmStorage, contextId, parentId, eventManager, browsingContextStorage, logger);\n        browsingContextStorage.addContext(context);\n        eventManager.registerEvent({\n            method: protocol_js_1.BrowsingContext.EventNames.ContextCreatedEvent,\n            params: context.serializeToBidiValue(),\n        }, context.contextId);\n    }\n    // https://html.spec.whatwg.org/multipage/document-sequences.html#navigable\n    get navigableId() {\n        return this.#loaderId;\n    }\n    updateCdpTarget(cdpTarget) {\n        this.#cdpTarget = cdpTarget;\n        this.#initListeners();\n    }\n    async delete() {\n        await this.#removeChildContexts();\n        this.#realmStorage.deleteRealms({\n            browsingContextId: this.contextId,\n        });\n        // Remove context from the parent.\n        if (this.parentId !== null) {\n            const parent = this.#browsingContextStorage.getKnownContext(this.parentId);\n            parent.#children.delete(this.contextId);\n        }\n        this.#eventManager.registerEvent({\n            method: protocol_js_1.BrowsingContext.EventNames.ContextDestroyedEvent,\n            params: this.serializeToBidiValue(),\n        }, this.contextId);\n        this.#browsingContextStorage.removeContext(this.contextId);\n    }\n    async #removeChildContexts() {\n        await Promise.all(this.children.map((child) => child.delete()));\n    }\n    get contextId() {\n        return this.#contextId;\n    }\n    get parentId() {\n        return this.#parentId;\n    }\n    get cdpTarget() {\n        return this.#cdpTarget;\n    }\n    get children() {\n        return Array.from(this.#children.values());\n    }\n    get url() {\n        return this.#url;\n    }\n    addChild(child) {\n        this.#children.set(child.contextId, child);\n    }\n    async awaitLoaded() {\n        await this.#defers.Page.lifecycleEvent.load;\n    }\n    async awaitUnblocked() {\n        return this.#cdpTarget.targetUnblocked;\n    }\n    serializeToBidiValue(maxDepth = 0, addParentFiled = true) {\n        return {\n            context: this.#contextId,\n            url: this.url,\n            children: maxDepth > 0\n                ? this.children.map((c) => c.serializeToBidiValue(maxDepth - 1, false))\n                : null,\n            ...(addParentFiled ? { parent: this.#parentId } : {}),\n        };\n    }\n    #initListeners() {\n        this.#cdpTarget.cdpClient.on('Target.targetInfoChanged', (params) => {\n            if (this.contextId !== params.targetInfo.targetId) {\n                return;\n            }\n            this.#url = params.targetInfo.url;\n        });\n        this.#cdpTarget.cdpClient.on('Page.frameNavigated', async (params) => {\n            if (this.contextId !== params.frame.id) {\n                return;\n            }\n            this.#url = params.frame.url + (params.frame.urlFragment ?? '');\n            // At the point the page is initiated, all the nested iframes from the\n            // previous page are detached and realms are destroyed.\n            // Remove context's children.\n            await this.#removeChildContexts();\n            // Remove all the already created realms.\n            this.#realmStorage.deleteRealms({ browsingContextId: this.contextId });\n        });\n        this.#cdpTarget.cdpClient.on('Page.navigatedWithinDocument', (params) => {\n            if (this.contextId !== params.frameId) {\n                return;\n            }\n            this.#url = params.url;\n            this.#defers.Page.navigatedWithinDocument.resolve(params);\n        });\n        this.#cdpTarget.cdpClient.on('Page.lifecycleEvent', async (params) => {\n            if (this.contextId !== params.frameId) {\n                return;\n            }\n            // `timestamp` from the event is MonotonicTime, not real time, so\n            // the best Mapper can do is to set the timestamp to the epoch time\n            // of the event arrived.\n            // https://chromedevtools.github.io/devtools-protocol/tot/Network/#type-MonotonicTime\n            const timestamp = new Date().getTime();\n            if (params.name === 'init') {\n                this.#documentChanged(params.loaderId);\n                this.#defers.documentInitialized.resolve();\n            }\n            if (params.name === 'commit') {\n                this.#loaderId = params.loaderId;\n                return;\n            }\n            if (params.loaderId !== this.#loaderId) {\n                return;\n            }\n            switch (params.name) {\n                case 'DOMContentLoaded':\n                    this.#defers.Page.lifecycleEvent.DOMContentLoaded.resolve(params);\n                    this.#eventManager.registerEvent({\n                        method: protocol_js_1.BrowsingContext.EventNames.DomContentLoadedEvent,\n                        params: {\n                            context: this.contextId,\n                            navigation: this.#loaderId,\n                            timestamp,\n                            url: this.#url,\n                        },\n                    }, this.contextId);\n                    break;\n                case 'load':\n                    this.#defers.Page.lifecycleEvent.load.resolve(params);\n                    this.#eventManager.registerEvent({\n                        method: protocol_js_1.BrowsingContext.EventNames.LoadEvent,\n                        params: {\n                            context: this.contextId,\n                            navigation: this.#loaderId,\n                            timestamp,\n                            url: this.#url,\n                        },\n                    }, this.contextId);\n                    break;\n            }\n        });\n        this.#cdpTarget.cdpClient.on('Runtime.executionContextCreated', (params) => {\n            if (params.context.auxData.frameId !== this.contextId) {\n                return;\n            }\n            // Only this execution contexts are supported for now.\n            if (!['default', 'isolated'].includes(params.context.auxData.type)) {\n                return;\n            }\n            const realm = new realm_js_1.Realm(this.#realmStorage, this.#browsingContextStorage, params.context.uniqueId, this.contextId, params.context.id, this.#getOrigin(params), \n            // TODO: differentiate types.\n            'window', \n            // Sandbox name for isolated world.\n            params.context.auxData.type === 'isolated'\n                ? params.context.name\n                : undefined, this.#cdpTarget.cdpSessionId, this.#cdpTarget.cdpClient, this.#eventManager);\n            if (params.context.auxData.isDefault) {\n                this.#maybeDefaultRealm = realm;\n            }\n        });\n        this.#cdpTarget.cdpClient.on('Runtime.executionContextDestroyed', (params) => {\n            this.#realmStorage.deleteRealms({\n                cdpSessionId: this.#cdpTarget.cdpSessionId,\n                executionContextId: params.executionContextId,\n            });\n        });\n    }\n    #getOrigin(params) {\n        if (params.context.auxData.type === 'isolated') {\n            // Sandbox should have the same origin as the context itself, but in CDP\n            // it has an empty one.\n            return this.#defaultRealm.origin;\n        }\n        // https://html.spec.whatwg.org/multipage/origin.html#ascii-serialisation-of-an-origin\n        return ['://', ''].includes(params.context.origin)\n            ? 'null'\n            : params.context.origin;\n    }\n    #documentChanged(loaderId) {\n        // Same document navigation.\n        if (loaderId === undefined || this.#loaderId === loaderId) {\n            if (this.#defers.Page.navigatedWithinDocument.isFinished) {\n                this.#defers.Page.navigatedWithinDocument =\n                    new deferred_js_1.Deferred();\n            }\n            return;\n        }\n        if (this.#defers.documentInitialized.isFinished) {\n            this.#defers.documentInitialized = new deferred_js_1.Deferred();\n        }\n        else {\n            this.#logger?.(log_js_1.LogType.browsingContexts, 'Document changed');\n        }\n        if (this.#defers.Page.lifecycleEvent.DOMContentLoaded.isFinished) {\n            this.#defers.Page.lifecycleEvent.DOMContentLoaded =\n                new deferred_js_1.Deferred();\n        }\n        else {\n            this.#logger?.(log_js_1.LogType.browsingContexts, 'Document changed');\n        }\n        if (this.#defers.Page.lifecycleEvent.load.isFinished) {\n            this.#defers.Page.lifecycleEvent.load =\n                new deferred_js_1.Deferred();\n        }\n        else {\n            this.#logger?.(log_js_1.LogType.browsingContexts, 'Document changed');\n        }\n        this.#loaderId = loaderId;\n    }\n    async navigate(url, wait) {\n        await this.awaitUnblocked();\n        // TODO: handle loading errors.\n        const cdpNavigateResult = await this.#cdpTarget.cdpClient.sendCommand('Page.navigate', {\n            url,\n            frameId: this.contextId,\n        });\n        if (cdpNavigateResult.errorText) {\n            throw new protocol_js_1.Message.UnknownException(cdpNavigateResult.errorText);\n        }\n        this.#documentChanged(cdpNavigateResult.loaderId);\n        // Wait for `wait` condition.\n        switch (wait) {\n            case 'none':\n                break;\n            case 'interactive':\n                // No `loaderId` means same-document navigation.\n                if (cdpNavigateResult.loaderId === undefined) {\n                    await this.#defers.Page.navigatedWithinDocument;\n                }\n                else {\n                    await this.#defers.Page.lifecycleEvent.DOMContentLoaded;\n                }\n                break;\n            case 'complete':\n                // No `loaderId` means same-document navigation.\n                if (cdpNavigateResult.loaderId === undefined) {\n                    await this.#defers.Page.navigatedWithinDocument;\n                }\n                else {\n                    await this.#defers.Page.lifecycleEvent.load;\n                }\n                break;\n            default:\n                throw new Error(`Not implemented wait '${wait}'`);\n        }\n        return {\n            result: {\n                navigation: cdpNavigateResult.loaderId || null,\n                url,\n            },\n        };\n    }\n    async getOrCreateSandbox(sandbox) {\n        if (sandbox === undefined || sandbox === '') {\n            return this.#defaultRealm;\n        }\n        let maybeSandboxes = this.#realmStorage.findRealms({\n            browsingContextId: this.contextId,\n            sandbox,\n        });\n        if (maybeSandboxes.length === 0) {\n            await this.#cdpTarget.cdpClient.sendCommand('Page.createIsolatedWorld', {\n                frameId: this.contextId,\n                worldName: sandbox,\n            });\n            // `Runtime.executionContextCreated` should be emitted by the time the\n            // previous command is done.\n            maybeSandboxes = this.#realmStorage.findRealms({\n                browsingContextId: this.contextId,\n                sandbox,\n            });\n        }\n        if (maybeSandboxes.length !== 1) {\n            throw Error(`Sandbox ${sandbox} wasn't created.`);\n        }\n        return maybeSandboxes[0];\n    }\n    async captureScreenshot() {\n        const [, result] = await Promise.all([\n            // TODO: Either make this a proposal in the BiDi spec, or focus the\n            // original tab right after the screenshot is taken.\n            // The screenshot command gets blocked until we focus the active tab.\n            this.#cdpTarget.cdpClient.sendCommand('Page.bringToFront'),\n            this.#cdpTarget.cdpClient.sendCommand('Page.captureScreenshot', {}),\n        ]);\n        return {\n            result: {\n                data: result.data,\n            },\n        };\n    }\n    async print(params) {\n        const printToPdfCdpParams = {\n            printBackground: params.background,\n            landscape: params.orientation === 'landscape',\n            pageRanges: params.pageRanges?.join(',') ?? '',\n            scale: params.scale,\n            // TODO(#518): Use `shrinkToFit`.\n        };\n        if (params.margin?.bottom) {\n            printToPdfCdpParams.marginBottom = (0, unitConversions_js_1.inchesFromCm)(params.margin.bottom);\n        }\n        if (params.margin?.left) {\n            printToPdfCdpParams.marginLeft = (0, unitConversions_js_1.inchesFromCm)(params.margin.left);\n        }\n        if (params.margin?.right) {\n            printToPdfCdpParams.marginRight = (0, unitConversions_js_1.inchesFromCm)(params.margin.right);\n        }\n        if (params.margin?.top) {\n            printToPdfCdpParams.marginTop = (0, unitConversions_js_1.inchesFromCm)(params.margin.top);\n        }\n        if (params.page?.height) {\n            printToPdfCdpParams.paperHeight = (0, unitConversions_js_1.inchesFromCm)(params.page.height);\n        }\n        if (params.page?.width) {\n            printToPdfCdpParams.paperWidth = (0, unitConversions_js_1.inchesFromCm)(params.page.width);\n        }\n        const result = await this.#cdpTarget.cdpClient.sendCommand('Page.printToPDF', printToPdfCdpParams);\n        return {\n            result: {\n                data: result.data,\n            },\n        };\n    }\n}\nexports.BrowsingContextImpl = BrowsingContextImpl;\n//# sourceMappingURL=browsingContextImpl.js.map","\"use strict\";\n/**\n * Copyright 2022 Google LLC.\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getRemoteValuesText = exports.logMessageFormatter = void 0;\nconst specifiers = ['%s', '%d', '%i', '%f', '%o', '%O', '%c'];\nfunction isFormmatSpecifier(str) {\n    return specifiers.some((spec) => str.includes(spec));\n}\n/**\n * @param args input remote values to be format printed\n * @return parsed text of the remote values in specific format\n */\nfunction logMessageFormatter(args) {\n    let output = '';\n    const argFormat = args[0].value.toString();\n    const argValues = args.slice(1, undefined);\n    const tokens = argFormat.split(new RegExp(specifiers.map((spec) => `(${spec})`).join('|'), 'g'));\n    for (const token of tokens) {\n        if (token === undefined || token === '') {\n            continue;\n        }\n        if (isFormmatSpecifier(token)) {\n            const arg = argValues.shift();\n            // raise an exception when less value is provided\n            if (arg === undefined) {\n                throw new Error(`Less value is provided: \"${getRemoteValuesText(args, false)}\"`);\n            }\n            if (token === '%s') {\n                output += stringFromArg(arg);\n            }\n            else if (token === '%d' || token === '%i') {\n                if (arg.type === 'bigint' ||\n                    arg.type === 'number' ||\n                    arg.type === 'string') {\n                    output += parseInt(arg.value.toString(), 10);\n                }\n                else {\n                    output += 'NaN';\n                }\n            }\n            else if (token === '%f') {\n                if (arg.type === 'bigint' ||\n                    arg.type === 'number' ||\n                    arg.type === 'string') {\n                    output += parseFloat(arg.value.toString());\n                }\n                else {\n                    output += 'NaN';\n                }\n            }\n            else {\n                // %o, %O, %c\n                output += toJson(arg);\n            }\n        }\n        else {\n            output += token;\n        }\n    }\n    // raise an exception when more value is provided\n    if (argValues.length > 0) {\n        throw new Error(`More value is provided: \"${getRemoteValuesText(args, false)}\"`);\n    }\n    return output;\n}\nexports.logMessageFormatter = logMessageFormatter;\n/**\n * @param arg input remote value to be parsed\n * @return parsed text of the remote value\n *\n * input: {\"type\": \"number\", \"value\": 1}\n * output: 1\n *\n * input: {\"type\": \"string\", \"value\": \"abc\"}\n * output: \"abc\"\n *\n * input: {\"type\": \"object\",  \"value\": [[\"id\", {\"type\": \"number\", \"value\": 1}]]}\n * output: '{\"id\": 1}'\n *\n * input: {\"type\": \"object\", \"value\": [[\"font-size\", {\"type\": \"string\", \"value\": \"20px\"}]]}\n * output: '{\"font-size\": \"20px\"}'\n */\nfunction toJson(arg) {\n    // arg type validation\n    if (arg.type !== 'array' &&\n        arg.type !== 'bigint' &&\n        arg.type !== 'date' &&\n        arg.type !== 'number' &&\n        arg.type !== 'object' &&\n        arg.type !== 'string') {\n        return stringFromArg(arg);\n    }\n    if (arg.type === 'bigint') {\n        return `${arg.value.toString()}n`;\n    }\n    if (arg.type === 'number') {\n        return arg.value.toString();\n    }\n    if (['date', 'string'].includes(arg.type)) {\n        return JSON.stringify(arg.value);\n    }\n    if (arg.type === 'object') {\n        return `{${arg.value\n            .map((pair) => {\n            return `${JSON.stringify(pair[0])}:${toJson(pair[1])}`;\n        })\n            .join(',')}}`;\n    }\n    if (arg.type === 'array') {\n        return `[${arg.value?.map((val) => toJson(val)).join(',')}]`;\n    }\n    throw Error(`Invalid value type: ${arg.toString()}`);\n}\nfunction stringFromArg(arg) {\n    if (!Object.hasOwn(arg, 'value')) {\n        return arg.type;\n    }\n    switch (arg.type) {\n        case 'string':\n        case 'number':\n        case 'boolean':\n        case 'bigint':\n            return String(arg.value);\n        case 'regexp':\n            return `/${arg.value.pattern}/${arg.value.flags}`;\n        case 'date':\n            return new Date(arg.value).toString();\n        case 'object':\n            return `Object(${arg.value?.length})`;\n        case 'array':\n            return `Array(${arg.value?.length})`;\n        case 'map':\n            return `Map(${arg.value.length})`;\n        case 'set':\n            return `Set(${arg.value.length})`;\n        case 'node':\n            return 'node';\n        default:\n            return arg.type;\n    }\n}\nfunction getRemoteValuesText(args, formatText) {\n    const arg = args[0];\n    if (!arg) {\n        return '';\n    }\n    // if args[0] is a format specifier, format the args as output\n    if (arg.type === 'string' &&\n        isFormmatSpecifier(arg.value.toString()) &&\n        formatText) {\n        return logMessageFormatter(args);\n    }\n    // if args[0] is not a format specifier, just join the args with \\u0020\n    return args\n        .map((arg) => {\n        return stringFromArg(arg);\n    })\n        .join('\\u0020');\n}\nexports.getRemoteValuesText = getRemoteValuesText;\n//# sourceMappingURL=logHelper.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LogManager = void 0;\nconst protocol_js_1 = require(\"../../../protocol/protocol.js\");\nconst logHelper_js_1 = require(\"./logHelper.js\");\n/** Converts CDP StackTrace object to Bidi StackTrace object. */\nfunction getBidiStackTrace(cdpStackTrace) {\n    const stackFrames = cdpStackTrace?.callFrames.map((callFrame) => {\n        return {\n            columnNumber: callFrame.columnNumber,\n            functionName: callFrame.functionName,\n            lineNumber: callFrame.lineNumber,\n            url: callFrame.url,\n        };\n    });\n    return stackFrames ? { callFrames: stackFrames } : undefined;\n}\nfunction getLogLevel(consoleApiType) {\n    if (['assert', 'error'].includes(consoleApiType)) {\n        return 'error';\n    }\n    if (['debug', 'trace'].includes(consoleApiType)) {\n        return 'debug';\n    }\n    if (['warn', 'warning'].includes(consoleApiType)) {\n        return 'warn';\n    }\n    return 'info';\n}\nclass LogManager {\n    #eventManager;\n    #realmStorage;\n    #cdpTarget;\n    constructor(cdpTarget, realmStorage, eventManager) {\n        this.#cdpTarget = cdpTarget;\n        this.#realmStorage = realmStorage;\n        this.#eventManager = eventManager;\n    }\n    static create(cdpTarget, realmStorage, eventManager) {\n        const logManager = new LogManager(cdpTarget, realmStorage, eventManager);\n        logManager.#initialize();\n        return logManager;\n    }\n    #initialize() {\n        this.#initializeLogEntryAddedEventListener();\n    }\n    #initializeLogEntryAddedEventListener() {\n        this.#cdpTarget.cdpClient.on('Runtime.consoleAPICalled', (params) => {\n            // Try to find realm by `cdpSessionId` and `executionContextId`,\n            // if provided.\n            const realm = this.#realmStorage.findRealm({\n                cdpSessionId: this.#cdpTarget.cdpSessionId,\n                executionContextId: params.executionContextId,\n            });\n            const argsPromise = realm === undefined\n                ? Promise.resolve(params.args)\n                : // Properly serialize arguments if possible.\n                    Promise.all(params.args.map((arg) => {\n                        return realm.serializeCdpObject(arg, 'none');\n                    }));\n            this.#eventManager.registerPromiseEvent(argsPromise.then((args) => ({\n                method: protocol_js_1.Log.EventNames.LogEntryAddedEvent,\n                params: {\n                    level: getLogLevel(params.type),\n                    source: {\n                        realm: realm?.realmId ?? 'UNKNOWN',\n                        context: realm?.browsingContextId ?? 'UNKNOWN',\n                    },\n                    text: (0, logHelper_js_1.getRemoteValuesText)(args, true),\n                    timestamp: Math.round(params.timestamp),\n                    stackTrace: getBidiStackTrace(params.stackTrace),\n                    type: 'console',\n                    // Console method is `warn`, not `warning`.\n                    method: params.type === 'warning' ? 'warn' : params.type,\n                    args,\n                },\n            })), realm?.browsingContextId ?? 'UNKNOWN', protocol_js_1.Log.EventNames.LogEntryAddedEvent);\n        });\n        this.#cdpTarget.cdpClient.on('Runtime.exceptionThrown', (params) => {\n            // Try to find realm by `cdpSessionId` and `executionContextId`,\n            // if provided.\n            const realm = this.#realmStorage.findRealm({\n                cdpSessionId: this.#cdpTarget.cdpSessionId,\n                executionContextId: params.exceptionDetails.executionContextId,\n            });\n            // Try all the best to get the exception text.\n            const textPromise = (async () => {\n                if (!params.exceptionDetails.exception) {\n                    return params.exceptionDetails.text;\n                }\n                if (realm === undefined) {\n                    return JSON.stringify(params.exceptionDetails.exception);\n                }\n                return realm.stringifyObject(params.exceptionDetails.exception);\n            })();\n            this.#eventManager.registerPromiseEvent(textPromise.then((text) => ({\n                method: protocol_js_1.Log.EventNames.LogEntryAddedEvent,\n                params: {\n                    level: 'error',\n                    source: {\n                        realm: realm?.realmId ?? 'UNKNOWN',\n                        context: realm?.browsingContextId ?? 'UNKNOWN',\n                    },\n                    text,\n                    timestamp: Math.round(params.timestamp),\n                    stackTrace: getBidiStackTrace(params.exceptionDetails.stackTrace),\n                    type: 'javascript',\n                },\n            })), realm?.browsingContextId ?? 'UNKNOWN', protocol_js_1.Log.EventNames.LogEntryAddedEvent);\n        });\n    }\n}\nexports.LogManager = LogManager;\n//# sourceMappingURL=logManager.js.map","\"use strict\";\n/*\n * Copyright 2023 Google LLC.\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NetworkRequest = void 0;\nconst deferred_1 = require(\"../../../utils/deferred\");\nconst protocol_1 = require(\"../../../protocol/protocol\");\nclass NetworkRequest {\n    requestId;\n    #eventManager;\n    #requestWillBeSentEvent;\n    #requestWillBeSentExtraInfoEvent;\n    #responseReceivedEvent;\n    #responseReceivedExtraInfoEvent;\n    #beforeRequestSentDeferred;\n    #responseReceivedDeferred;\n    constructor(requestId, eventManager) {\n        this.requestId = requestId;\n        this.#eventManager = eventManager;\n        this.#beforeRequestSentDeferred = new deferred_1.Deferred();\n        this.#responseReceivedDeferred = new deferred_1.Deferred();\n    }\n    onRequestWillBeSentEvent(requestWillBeSentEvent) {\n        if (this.#requestWillBeSentEvent !== undefined) {\n            throw new Error('RequestWillBeSentEvent is already set');\n        }\n        this.#requestWillBeSentEvent = requestWillBeSentEvent;\n        if (this.#requestWillBeSentExtraInfoEvent !== undefined) {\n            this.#beforeRequestSentDeferred.resolve();\n        }\n        this.#sendBeforeRequestEvent();\n    }\n    onRequestWillBeSentExtraInfoEvent(requestWillBeSentExtraInfoEvent) {\n        if (this.#requestWillBeSentExtraInfoEvent !== undefined) {\n            throw new Error('RequestWillBeSentExtraInfoEvent is already set');\n        }\n        this.#requestWillBeSentExtraInfoEvent = requestWillBeSentExtraInfoEvent;\n        if (this.#requestWillBeSentEvent !== undefined) {\n            this.#beforeRequestSentDeferred.resolve();\n        }\n    }\n    onResponseReceivedEvent(responseReceivedEvent) {\n        if (this.#responseReceivedEvent !== undefined) {\n            throw new Error('ResponseReceivedEvent is already set');\n        }\n        this.#responseReceivedEvent = responseReceivedEvent;\n        if (this.#responseReceivedExtraInfoEvent !== undefined) {\n            this.#responseReceivedDeferred.resolve();\n        }\n        this.#sendResponseReceivedEvent();\n    }\n    onResponseReceivedEventExtraInfo(responseReceivedExtraInfoEvent) {\n        if (this.#responseReceivedExtraInfoEvent !== undefined) {\n            throw new Error('ResponseReceivedExtraInfoEvent is already set');\n        }\n        this.#responseReceivedExtraInfoEvent = responseReceivedExtraInfoEvent;\n        if (this.#responseReceivedEvent !== undefined) {\n            this.#responseReceivedDeferred.resolve();\n        }\n    }\n    #sendBeforeRequestEvent() {\n        if (!this.#isIgnoredEvent()) {\n            this.#eventManager.registerPromiseEvent(this.#beforeRequestSentDeferred.then(() => this.#getBeforeRequestEvent()), this.#requestWillBeSentEvent?.frameId ?? null, protocol_1.Network.EventNames.BeforeRequestSentEvent);\n        }\n    }\n    #getBeforeRequestEvent() {\n        if (this.#requestWillBeSentEvent === undefined) {\n            throw new Error('RequestWillBeSentEvent is not set');\n        }\n        if (this.#requestWillBeSentExtraInfoEvent === undefined) {\n            throw new Error('RequestWillBeSentExtraInfoEvent is not set');\n        }\n        const requestWillBeSentEvent = this.#requestWillBeSentEvent;\n        const requestWillBeSentExtraInfoEvent = this.#requestWillBeSentExtraInfoEvent;\n        const baseEventParams = {\n            context: requestWillBeSentEvent.frameId ?? null,\n            navigation: requestWillBeSentEvent.loaderId,\n            // TODO: implement.\n            redirectCount: 0,\n            request: this.#getRequestData(requestWillBeSentEvent, requestWillBeSentExtraInfoEvent),\n            // Timestamp should be in milliseconds, while CDP provides it in seconds.\n            timestamp: Math.round(requestWillBeSentEvent.wallTime * 1000),\n        };\n        const params = {\n            ...baseEventParams,\n            initiator: { type: this.#getInitiatorType() },\n        };\n        return {\n            method: protocol_1.Network.EventNames.BeforeRequestSentEvent,\n            params,\n        };\n    }\n    #getRequestData(requestWillBeSentEvent, requestWillBeSentExtraInfoEvent) {\n        return {\n            request: requestWillBeSentEvent.requestId,\n            url: requestWillBeSentEvent.request.url,\n            method: requestWillBeSentEvent.request.method,\n            headers: Object.keys(requestWillBeSentEvent.request.headers).map((key) => ({\n                name: key,\n                value: requestWillBeSentEvent.request.headers[key],\n            })),\n            cookies: NetworkRequest.#getCookies(requestWillBeSentExtraInfoEvent.associatedCookies),\n            // TODO: implement.\n            headersSize: -1,\n            // TODO: implement.\n            bodySize: 0,\n            timings: {\n                // TODO: implement.\n                timeOrigin: 0,\n                // TODO: implement.\n                requestTime: 0,\n                // TODO: implement.\n                redirectStart: 0,\n                // TODO: implement.\n                redirectEnd: 0,\n                // TODO: implement.\n                fetchStart: 0,\n                // TODO: implement.\n                dnsStart: 0,\n                // TODO: implement.\n                dnsEnd: 0,\n                // TODO: implement.\n                connectStart: 0,\n                // TODO: implement.\n                connectEnd: 0,\n                // TODO: implement.\n                tlsStart: 0,\n                // TODO: implement.\n                tlsEnd: 0,\n                // TODO: implement.\n                requestStart: 0,\n                // TODO: implement.\n                responseStart: 0,\n                // TODO: implement.\n                responseEnd: 0,\n            },\n        };\n    }\n    #getInitiatorType() {\n        switch (this.#requestWillBeSentEvent?.initiator.type) {\n            case 'parser':\n            case 'script':\n            case 'preflight':\n                return this.#requestWillBeSentEvent?.initiator.type;\n            default:\n                return 'other';\n        }\n    }\n    static #getCookiesSameSite(cdpSameSiteValue) {\n        switch (cdpSameSiteValue) {\n            case 'Strict':\n                return 'strict';\n            case 'Lax':\n                return 'lax';\n            default:\n                return 'none';\n        }\n    }\n    static #getCookies(associatedCookies) {\n        return associatedCookies.map((cookieInfo) => {\n            return {\n                name: cookieInfo.cookie.name,\n                value: cookieInfo.cookie.value,\n                domain: cookieInfo.cookie.domain,\n                path: cookieInfo.cookie.path,\n                expires: cookieInfo.cookie.expires,\n                size: cookieInfo.cookie.size,\n                httpOnly: cookieInfo.cookie.httpOnly,\n                secure: cookieInfo.cookie.secure,\n                sameSite: NetworkRequest.#getCookiesSameSite(cookieInfo.cookie.sameSite),\n            };\n        });\n    }\n    #sendResponseReceivedEvent() {\n        if (!this.#isIgnoredEvent()) {\n            // Wait for both ResponseReceived and ResponseReceivedExtraInfo events.\n            this.#eventManager.registerPromiseEvent(this.#responseReceivedDeferred.then(() => this.#getResponseReceivedEvent()), this.#responseReceivedEvent?.frameId ?? null, protocol_1.Network.EventNames.ResponseCompletedEvent);\n        }\n    }\n    #getResponseReceivedEvent() {\n        if (this.#responseReceivedEvent === undefined) {\n            throw new Error('ResponseReceivedEvent is not set');\n        }\n        if (this.#responseReceivedExtraInfoEvent === undefined) {\n            throw new Error('ResponseReceivedExtraInfoEvent is not set');\n        }\n        if (this.#requestWillBeSentEvent === undefined) {\n            throw new Error('RequestWillBeSentEvent is not set');\n        }\n        if (this.#requestWillBeSentExtraInfoEvent === undefined) {\n            throw new Error('RequestWillBeSentExtraInfoEvent is not set');\n        }\n        const requestWillBeSentEvent = this.#requestWillBeSentEvent;\n        const requestWillBeSentExtraInfoEvent = this.#requestWillBeSentExtraInfoEvent;\n        const responseReceivedEvent = this.#responseReceivedEvent;\n        const responseReceivedExtraInfoEvent = this.#responseReceivedExtraInfoEvent;\n        const baseEventParams = {\n            context: responseReceivedEvent.frameId ?? null,\n            navigation: responseReceivedEvent.loaderId,\n            // TODO: implement.\n            redirectCount: 0,\n            request: this.#getRequestData(requestWillBeSentEvent, requestWillBeSentExtraInfoEvent),\n            // Timestamp normalized to wall time using `RequestWillBeSent` event as a\n            // baseline.\n            timestamp: Math.round(requestWillBeSentEvent.wallTime * 1000 -\n                requestWillBeSentEvent.timestamp +\n                responseReceivedEvent.timestamp),\n        };\n        return {\n            method: protocol_1.Network.EventNames.ResponseCompletedEvent,\n            params: {\n                ...baseEventParams,\n                response: {\n                    url: responseReceivedEvent.response.url,\n                    protocol: responseReceivedEvent.response.protocol,\n                    status: responseReceivedEvent.response.status,\n                    statusText: responseReceivedEvent.response.statusText,\n                    // Check if this is correct.\n                    fromCache: responseReceivedEvent.response.fromDiskCache ||\n                        responseReceivedEvent.response.fromPrefetchCache,\n                    // TODO: implement.\n                    headers: this.#getHeaders(responseReceivedEvent.response.headers),\n                    mimeType: responseReceivedEvent.response.mimeType,\n                    bytesReceived: responseReceivedEvent.response.encodedDataLength,\n                    headersSize: responseReceivedExtraInfoEvent.headersText?.length ?? -1,\n                    // TODO: consider removing from spec.\n                    bodySize: -1,\n                    content: {\n                        // TODO: consider removing from spec.\n                        size: -1,\n                    },\n                },\n            },\n        };\n    }\n    #getHeaders(headers) {\n        return Object.keys(headers).map((key) => ({\n            name: key,\n            value: headers[key],\n        }));\n    }\n    #isIgnoredEvent() {\n        return (this.#requestWillBeSentEvent?.request.url.endsWith('/favicon.ico') ??\n            false);\n    }\n}\nexports.NetworkRequest = NetworkRequest;\n//# sourceMappingURL=networkRequest.js.map","\"use strict\";\n/*\n * Copyright 2023 Google LLC.\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NetworkProcessor = void 0;\nconst networkRequest_1 = require(\"./networkRequest\");\nclass NetworkProcessor {\n    #eventManager;\n    /**\n     * Map of request ID to NetworkRequest objects. Needed as long as information\n     * about requests comes from different events.\n     */\n    #requestMap = new Map();\n    constructor(eventManager) {\n        this.#eventManager = eventManager;\n    }\n    static async create(cdpClient, eventManager) {\n        const networkProcessor = new NetworkProcessor(eventManager);\n        cdpClient.on('Network.requestWillBeSent', (params) => {\n            networkProcessor\n                .#getOrCreateNetworkRequest(params.requestId)\n                .onRequestWillBeSentEvent(params);\n        });\n        cdpClient.on('Network.requestWillBeSentExtraInfo', (params) => {\n            networkProcessor\n                .#getOrCreateNetworkRequest(params.requestId)\n                .onRequestWillBeSentExtraInfoEvent(params);\n        });\n        cdpClient.on('Network.responseReceived', (params) => {\n            networkProcessor\n                .#getOrCreateNetworkRequest(params.requestId)\n                .onResponseReceivedEvent(params);\n        });\n        cdpClient.on('Network.responseReceivedExtraInfo', (params) => {\n            networkProcessor\n                .#getOrCreateNetworkRequest(params.requestId)\n                .onResponseReceivedEventExtraInfo(params);\n        });\n        await cdpClient.sendCommand('Network.enable');\n        return networkProcessor;\n    }\n    #getOrCreateNetworkRequest(requestId) {\n        if (!this.#requestMap.has(requestId)) {\n            const networkRequest = new networkRequest_1.NetworkRequest(requestId, this.#eventManager);\n            this.#requestMap.set(requestId, networkRequest);\n        }\n        return this.#requestMap.get(requestId);\n    }\n}\nexports.NetworkProcessor = NetworkProcessor;\n//# sourceMappingURL=networkProcessor.js.map","\"use strict\";\n/*\n * Copyright 2023 Google LLC.\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CdpTarget = void 0;\nconst logManager_1 = require(\"../log/logManager\");\nconst protocol_1 = require(\"../../../protocol/protocol\");\nconst deferred_1 = require(\"../../../utils/deferred\");\nconst networkProcessor_1 = require(\"../network/networkProcessor\");\nclass CdpTarget {\n    #targetUnblocked;\n    #targetId;\n    #cdpClient;\n    #eventManager;\n    #cdpSessionId;\n    #networkDomainActivated;\n    static create(targetId, cdpClient, cdpSessionId, realmStorage, eventManager) {\n        const cdpTarget = new CdpTarget(targetId, cdpClient, cdpSessionId, eventManager);\n        logManager_1.LogManager.create(cdpTarget, realmStorage, eventManager);\n        cdpTarget.#setEventListeners();\n        // No need in waiting. Deferred will be resolved when the target is unblocked.\n        void cdpTarget.#unblock();\n        return cdpTarget;\n    }\n    constructor(targetId, cdpClient, cdpSessionId, eventManager) {\n        this.#targetId = targetId;\n        this.#cdpClient = cdpClient;\n        this.#cdpSessionId = cdpSessionId;\n        this.#eventManager = eventManager;\n        this.#networkDomainActivated = false;\n        this.#targetUnblocked = new deferred_1.Deferred();\n    }\n    /**\n     * Returns a promise that resolves when the target is unblocked.\n     */\n    get targetUnblocked() {\n        return this.#targetUnblocked;\n    }\n    get targetId() {\n        return this.#targetId;\n    }\n    get cdpClient() {\n        return this.#cdpClient;\n    }\n    /**\n     * Needed for CDP escape path.\n     */\n    get cdpSessionId() {\n        return this.#cdpSessionId;\n    }\n    /**\n     * Enables all the required CDP domains and unblocks the target.\n     */\n    async #unblock() {\n        // Enable Network domain, if it is enabled globally.\n        // TODO: enable Network domain for OOPiF targets.\n        if (this.#eventManager.isNetworkDomainEnabled) {\n            await this.enableNetworkDomain();\n        }\n        await this.#cdpClient.sendCommand('Runtime.enable');\n        await this.#cdpClient.sendCommand('Page.enable');\n        await this.#cdpClient.sendCommand('Page.setLifecycleEventsEnabled', {\n            enabled: true,\n        });\n        await this.#cdpClient.sendCommand('Target.setAutoAttach', {\n            autoAttach: true,\n            waitForDebuggerOnStart: true,\n            flatten: true,\n        });\n        await this.#cdpClient.sendCommand('Runtime.runIfWaitingForDebugger');\n        this.#targetUnblocked.resolve();\n    }\n    /**\n     * Enables the Network domain (creates NetworkProcessor on the target's cdp\n     * client) if it is not enabled yet.\n     */\n    async enableNetworkDomain() {\n        if (!this.#networkDomainActivated) {\n            this.#networkDomainActivated = true;\n            await networkProcessor_1.NetworkProcessor.create(this.cdpClient, this.#eventManager);\n        }\n    }\n    #setEventListeners() {\n        this.#cdpClient.on('*', async (method, params) => {\n            this.#eventManager.registerEvent({\n                method: protocol_1.CDP.EventNames.EventReceivedEvent,\n                params: {\n                    cdpMethod: method,\n                    cdpParams: params || {},\n                    cdpSession: this.#cdpSessionId,\n                },\n            }, null);\n        });\n    }\n}\nexports.CdpTarget = CdpTarget;\n//# sourceMappingURL=cdpTarget.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BrowsingContextProcessor = void 0;\nconst protocol_js_1 = require(\"../../../protocol/protocol.js\");\nconst log_js_1 = require(\"../../../utils/log.js\");\nconst browsingContextImpl_js_1 = require(\"./browsingContextImpl.js\");\nconst cdpTarget_js_1 = require(\"./cdpTarget.js\");\nclass BrowsingContextProcessor {\n    #browsingContextStorage;\n    #cdpConnection;\n    #eventManager;\n    #logger;\n    #realmStorage;\n    #selfTargetId;\n    constructor(realmStorage, cdpConnection, selfTargetId, eventManager, browsingContextStorage, logger) {\n        this.#browsingContextStorage = browsingContextStorage;\n        this.#cdpConnection = cdpConnection;\n        this.#eventManager = eventManager;\n        this.#logger = logger;\n        this.#realmStorage = realmStorage;\n        this.#selfTargetId = selfTargetId;\n        this.#setEventListeners(this.#cdpConnection.browserClient());\n    }\n    /**\n     * `BrowsingContextProcessor` is responsible for creating and destroying all\n     * the targets and browsing contexts. This method is called for each CDP\n     * session.\n     */\n    #setEventListeners(cdpClient) {\n        cdpClient.on('Target.attachedToTarget', async (params) => {\n            await this.#handleAttachedToTargetEvent(params, cdpClient);\n        });\n        cdpClient.on('Target.detachedFromTarget', async (params) => {\n            await this.#handleDetachedFromTargetEvent(params);\n        });\n        cdpClient.on('Page.frameAttached', async (params) => {\n            await this.#handleFrameAttachedEvent(params);\n        });\n        cdpClient.on('Page.frameDetached', async (params) => {\n            await this.#handleFrameDetachedEvent(params);\n        });\n    }\n    // { \"method\": \"Page.frameAttached\",\n    //   \"params\": {\n    //     \"frameId\": \"0A639AB1D9A392DF2CE02C53CC4ED3A6\",\n    //     \"parentFrameId\": \"722BB0526C73B067A479BED6D0DB1156\" } }\n    async #handleFrameAttachedEvent(params) {\n        const parentBrowsingContext = this.#browsingContextStorage.findContext(params.parentFrameId);\n        if (parentBrowsingContext !== undefined) {\n            await browsingContextImpl_js_1.BrowsingContextImpl.create(parentBrowsingContext.cdpTarget, this.#realmStorage, params.frameId, params.parentFrameId, this.#eventManager, this.#browsingContextStorage, this.#logger);\n        }\n    }\n    // { \"method\": \"Page.frameDetached\",\n    //   \"params\": {\n    //     \"frameId\": \"0A639AB1D9A392DF2CE02C53CC4ED3A6\",\n    //     \"reason\": \"swap\" } }\n    async #handleFrameDetachedEvent(params) {\n        // In case of OOPiF no need in deleting BrowsingContext.\n        if (params.reason === 'swap') {\n            return;\n        }\n        await this.#browsingContextStorage.findContext(params.frameId)?.delete();\n    }\n    // { \"method\": \"Target.attachedToTarget\",\n    //   \"params\": {\n    //     \"sessionId\": \"EA999F39BDCABD7D45C9FEB787413BBA\",\n    //     \"targetInfo\": {\n    //       \"targetId\": \"722BB0526C73B067A479BED6D0DB1156\",\n    //       \"type\": \"page\",\n    //       \"title\": \"about:blank\",\n    //       \"url\": \"about:blank\",\n    //       \"attached\": true,\n    //       \"canAccessOpener\": false,\n    //       \"browserContextId\": \"1B5244080EC3FF28D03BBDA73138C0E2\" },\n    //     \"waitingForDebugger\": false } }\n    async #handleAttachedToTargetEvent(params, parentSessionCdpClient) {\n        const { sessionId, targetInfo } = params;\n        const targetCdpClient = this.#cdpConnection.getCdpClient(sessionId);\n        if (!this.#isValidTarget(targetInfo)) {\n            // DevTools or some other not supported by BiDi target.\n            await targetCdpClient.sendCommand('Runtime.runIfWaitingForDebugger');\n            await parentSessionCdpClient.sendCommand('Target.detachFromTarget', params);\n            return;\n        }\n        this.#logger?.(log_js_1.LogType.browsingContexts, 'AttachedToTarget event received:', JSON.stringify(params, null, 2));\n        this.#setEventListeners(targetCdpClient);\n        const cdpTarget = cdpTarget_js_1.CdpTarget.create(targetInfo.targetId, targetCdpClient, sessionId, this.#realmStorage, this.#eventManager);\n        if (this.#browsingContextStorage.hasKnownContext(targetInfo.targetId)) {\n            // OOPiF.\n            this.#browsingContextStorage\n                .getKnownContext(targetInfo.targetId)\n                .updateCdpTarget(cdpTarget);\n        }\n        else {\n            await browsingContextImpl_js_1.BrowsingContextImpl.create(cdpTarget, this.#realmStorage, targetInfo.targetId, null, this.#eventManager, this.#browsingContextStorage, this.#logger);\n        }\n    }\n    // { \"method\": \"Target.detachedFromTarget\",\n    //   \"params\": {\n    //     \"sessionId\": \"7EFBFB2A4942A8989B3EADC561BC46E9\",\n    //     \"targetId\": \"19416886405CBA4E03DBB59FA67FF4E8\" } }\n    async #handleDetachedFromTargetEvent(params) {\n        // TODO: params.targetId is deprecated. Update this class to track using\n        // params.sessionId instead.\n        // https://github.com/GoogleChromeLabs/chromium-bidi/issues/60\n        const contextId = params.targetId;\n        await this.#browsingContextStorage.findContext(contextId)?.delete();\n    }\n    process_browsingContext_getTree(params) {\n        const resultContexts = params.root === undefined\n            ? this.#browsingContextStorage.getTopLevelContexts()\n            : [this.#browsingContextStorage.getKnownContext(params.root)];\n        return {\n            result: {\n                contexts: resultContexts.map((c) => c.serializeToBidiValue(params.maxDepth ?? Number.MAX_VALUE)),\n            },\n        };\n    }\n    async process_browsingContext_create(params) {\n        const browserCdpClient = this.#cdpConnection.browserClient();\n        let referenceContext = undefined;\n        if (params.referenceContext !== undefined) {\n            referenceContext = this.#browsingContextStorage.getKnownContext(params.referenceContext);\n            if (referenceContext.parentId !== null) {\n                throw new protocol_js_1.Message.InvalidArgumentException(`referenceContext should be a top-level context`);\n            }\n        }\n        const result = await browserCdpClient.sendCommand('Target.createTarget', {\n            url: 'about:blank',\n            newWindow: params.type === 'window',\n        });\n        // Wait for the new tab to be loaded to avoid race conditions in the\n        // `browsingContext` events, when the `browsingContext.domContentLoaded` and\n        // `browsingContext.load` events from the initial `about:blank` navigation\n        // are emitted after the next navigation is started.\n        // Details: https://github.com/web-platform-tests/wpt/issues/35846\n        const contextId = result.targetId;\n        const context = this.#browsingContextStorage.getKnownContext(contextId);\n        await context.awaitLoaded();\n        return {\n            result: context.serializeToBidiValue(1),\n        };\n    }\n    async process_browsingContext_navigate(params) {\n        const context = this.#browsingContextStorage.getKnownContext(params.context);\n        return context.navigate(params.url, params.wait === undefined ? 'none' : params.wait);\n    }\n    async process_browsingContext_captureScreenshot(params) {\n        const context = this.#browsingContextStorage.getKnownContext(params.context);\n        return context.captureScreenshot();\n    }\n    async process_browsingContext_print(params) {\n        const context = this.#browsingContextStorage.getKnownContext(params.context);\n        return context.print(params);\n    }\n    async #getRealm(target) {\n        if ('realm' in target) {\n            return this.#realmStorage.getRealm({\n                realmId: target.realm,\n            });\n        }\n        const context = this.#browsingContextStorage.getKnownContext(target.context);\n        return context.getOrCreateSandbox(target.sandbox);\n    }\n    async process_script_evaluate(params) {\n        const realm = await this.#getRealm(params.target);\n        return realm.scriptEvaluate(params.expression, params.awaitPromise, params.resultOwnership ?? 'none');\n    }\n    process_script_getRealms(params) {\n        if (params.context !== undefined) {\n            // Make sure the context is known.\n            this.#browsingContextStorage.getKnownContext(params.context);\n        }\n        const realms = this.#realmStorage\n            .findRealms({\n            browsingContextId: params.context,\n            type: params.type,\n        })\n            .map((realm) => realm.toBiDi());\n        return { result: { realms } };\n    }\n    async process_script_callFunction(params) {\n        const realm = await this.#getRealm(params.target);\n        return realm.callFunction(params.functionDeclaration, params.this || {\n            type: 'undefined',\n        }, // `this` is `undefined` by default.\n        params.arguments || [], // `arguments` is `[]` by default.\n        params.awaitPromise, params.resultOwnership ?? 'none');\n    }\n    async process_script_disown(params) {\n        const realm = await this.#getRealm(params.target);\n        await Promise.all(params.handles.map(async (h) => realm.disown(h)));\n        return { result: {} };\n    }\n    async process_browsingContext_close(commandParams) {\n        const browserCdpClient = this.#cdpConnection.browserClient();\n        const context = this.#browsingContextStorage.getKnownContext(commandParams.context);\n        if (context.parentId !== null) {\n            throw new protocol_js_1.Message.InvalidArgumentException('Not a top-level browsing context cannot be closed.');\n        }\n        const detachedFromTargetPromise = new Promise((resolve) => {\n            const onContextDestroyed = (eventParams) => {\n                if (eventParams.targetId === commandParams.context) {\n                    browserCdpClient.off('Target.detachedFromTarget', onContextDestroyed);\n                    resolve();\n                }\n            };\n            browserCdpClient.on('Target.detachedFromTarget', onContextDestroyed);\n        });\n        await this.#cdpConnection\n            .browserClient()\n            .sendCommand('Target.closeTarget', {\n            targetId: commandParams.context,\n        });\n        // Sometimes CDP command finishes before `detachedFromTarget` event,\n        // sometimes after. Wait for the CDP command to be finished, and then wait\n        // for `detachedFromTarget` if it hasn't emitted.\n        await detachedFromTargetPromise;\n        return { result: {} };\n    }\n    #isValidTarget(target) {\n        if (target.targetId === this.#selfTargetId) {\n            return false;\n        }\n        return ['page', 'iframe'].includes(target.type);\n    }\n    async process_cdp_sendCommand(params) {\n        const client = params.cdpSession\n            ? this.#cdpConnection.getCdpClient(params.cdpSession)\n            : this.#cdpConnection.browserClient();\n        const sendCdpCommandResult = await client.sendCommand(params.cdpMethod, params.cdpParams);\n        return {\n            result: sendCdpCommandResult,\n            cdpSession: params.cdpSession,\n        };\n    }\n    process_cdp_getSession(params) {\n        const context = params.context;\n        const sessionId = this.#browsingContextStorage.getKnownContext(context).cdpTarget\n            .cdpSessionId;\n        if (sessionId === undefined) {\n            return { result: { cdpSession: null } };\n        }\n        return { result: { cdpSession: sessionId } };\n    }\n}\nexports.BrowsingContextProcessor = BrowsingContextProcessor;\n//# sourceMappingURL=browsingContextProcessor.js.map","\"use strict\";\n/**\n * Copyright 2021 Google LLC.\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OutgoingBidiMessage = void 0;\nclass OutgoingBidiMessage {\n    #message;\n    #channel;\n    constructor(message, channel) {\n        this.#message = message;\n        this.#channel = channel;\n    }\n    static async createFromPromise(messagePromise, channel) {\n        const message = await messagePromise;\n        return new OutgoingBidiMessage(message, channel);\n    }\n    static createResolved(message, channel) {\n        return Promise.resolve(new OutgoingBidiMessage(message, channel));\n    }\n    get message() {\n        return this.#message;\n    }\n    get channel() {\n        return this.#channel;\n    }\n}\nexports.OutgoingBidiMessage = OutgoingBidiMessage;\n//# sourceMappingURL=OutgoingBidiMessage.js.map","\"use strict\";\n/**\n * Copyright 2021 Google LLC.\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CommandProcessor = void 0;\nconst protocol_js_1 = require(\"../protocol/protocol.js\");\nconst log_js_1 = require(\"../utils/log.js\");\nconst EventEmitter_js_1 = require(\"../utils/EventEmitter.js\");\nconst browsingContextProcessor_js_1 = require(\"./domains/context/browsingContextProcessor.js\");\nconst OutgoingBidiMessage_js_1 = require(\"./OutgoingBidiMessage.js\");\nclass BidiNoOpParser {\n    parseGetRealmsParams(params) {\n        return params;\n    }\n    parseCallFunctionParams(params) {\n        return params;\n    }\n    parseEvaluateParams(params) {\n        return params;\n    }\n    parseDisownParams(params) {\n        return params;\n    }\n    parseSendCommandParams(params) {\n        return params;\n    }\n    parseGetSessionParams(params) {\n        return params;\n    }\n    parseSubscribeParams(params) {\n        return params;\n    }\n    parseNavigateParams(params) {\n        return params;\n    }\n    parseGetTreeParams(params) {\n        return params;\n    }\n    parseCreateParams(params) {\n        return params;\n    }\n    parseCloseParams(params) {\n        return params;\n    }\n    parseCaptureScreenshotParams(params) {\n        return params;\n    }\n    parsePrintParams(params) {\n        return params;\n    }\n}\nclass CommandProcessor extends EventEmitter_js_1.EventEmitter {\n    #contextProcessor;\n    #eventManager;\n    #parser;\n    #logger;\n    constructor(realmStorage, cdpConnection, eventManager, selfTargetId, parser = new BidiNoOpParser(), browsingContextStorage, logger) {\n        super();\n        this.#eventManager = eventManager;\n        this.#logger = logger;\n        this.#contextProcessor = new browsingContextProcessor_js_1.BrowsingContextProcessor(realmStorage, cdpConnection, selfTargetId, eventManager, browsingContextStorage, logger);\n        this.#parser = parser;\n    }\n    static #process_session_status() {\n        return { result: { ready: false, message: 'already connected' } };\n    }\n    async #process_session_subscribe(params, channel) {\n        await this.#eventManager.subscribe(params.events, params.contexts ?? [null], channel);\n        return { result: {} };\n    }\n    async #process_session_unsubscribe(params, channel) {\n        await this.#eventManager.unsubscribe(params.events, params.contexts ?? [null], channel);\n        return { result: {} };\n    }\n    async #processCommand(commandData) {\n        switch (commandData.method) {\n            case 'session.status':\n                return CommandProcessor.#process_session_status();\n            case 'session.subscribe':\n                return this.#process_session_subscribe(this.#parser.parseSubscribeParams(commandData.params), commandData.channel ?? null);\n            case 'session.unsubscribe':\n                return this.#process_session_unsubscribe(this.#parser.parseSubscribeParams(commandData.params), commandData.channel ?? null);\n            case 'browsingContext.create':\n                return this.#contextProcessor.process_browsingContext_create(this.#parser.parseCreateParams(commandData.params));\n            case 'browsingContext.close':\n                return this.#contextProcessor.process_browsingContext_close(this.#parser.parseCloseParams(commandData.params));\n            case 'browsingContext.getTree':\n                return this.#contextProcessor.process_browsingContext_getTree(this.#parser.parseGetTreeParams(commandData.params));\n            case 'browsingContext.navigate':\n                return this.#contextProcessor.process_browsingContext_navigate(this.#parser.parseNavigateParams(commandData.params));\n            case 'browsingContext.captureScreenshot':\n                return this.#contextProcessor.process_browsingContext_captureScreenshot(this.#parser.parseCaptureScreenshotParams(commandData.params));\n            case 'browsingContext.print':\n                return this.#contextProcessor.process_browsingContext_print(this.#parser.parsePrintParams(commandData.params));\n            case 'script.getRealms':\n                return this.#contextProcessor.process_script_getRealms(this.#parser.parseGetRealmsParams(commandData.params));\n            case 'script.callFunction':\n                return this.#contextProcessor.process_script_callFunction(this.#parser.parseCallFunctionParams(commandData.params));\n            case 'script.evaluate':\n                return this.#contextProcessor.process_script_evaluate(this.#parser.parseEvaluateParams(commandData.params));\n            case 'script.disown':\n                return this.#contextProcessor.process_script_disown(this.#parser.parseDisownParams(commandData.params));\n            case 'cdp.sendCommand':\n                return this.#contextProcessor.process_cdp_sendCommand(this.#parser.parseSendCommandParams(commandData.params));\n            case 'cdp.getSession':\n                return this.#contextProcessor.process_cdp_getSession(this.#parser.parseGetSessionParams(commandData.params));\n            default:\n                throw new protocol_js_1.Message.UnknownCommandException(`Unknown command '${commandData.method}'.`);\n        }\n    }\n    async processCommand(command) {\n        try {\n            const result = await this.#processCommand(command);\n            const response = {\n                id: command.id,\n                ...result,\n            };\n            this.emit('response', OutgoingBidiMessage_js_1.OutgoingBidiMessage.createResolved(response, command.channel ?? null));\n        }\n        catch (e) {\n            if (e instanceof protocol_js_1.Message.ErrorResponseClass) {\n                const errorResponse = e;\n                this.emit('response', OutgoingBidiMessage_js_1.OutgoingBidiMessage.createResolved(errorResponse.toErrorResponse(command.id), command.channel ?? null));\n            }\n            else {\n                const error = e;\n                this.#logger?.(log_js_1.LogType.bidi, error);\n                this.emit('response', OutgoingBidiMessage_js_1.OutgoingBidiMessage.createResolved(new protocol_js_1.Message.UnknownException(error.message).toErrorResponse(command.id), command.channel ?? null));\n            }\n        }\n    }\n}\nexports.CommandProcessor = CommandProcessor;\n//# sourceMappingURL=CommandProcessor.js.map","\"use strict\";\n/**\n * Copyright 2022 Google LLC.\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BrowsingContextStorage = void 0;\nconst protocol_js_1 = require(\"../../../protocol/protocol.js\");\nclass BrowsingContextStorage {\n    #contexts = new Map();\n    getTopLevelContexts() {\n        return Array.from(this.#contexts.values()).filter((c) => c.parentId === null);\n    }\n    getAllContexts() {\n        return Array.from(this.#contexts.values());\n    }\n    removeContext(contextId) {\n        this.#contexts.delete(contextId);\n    }\n    addContext(context) {\n        this.#contexts.set(context.contextId, context);\n        if (context.parentId !== null) {\n            this.getKnownContext(context.parentId).addChild(context);\n        }\n    }\n    hasKnownContext(contextId) {\n        return this.#contexts.has(contextId);\n    }\n    findContext(contextId) {\n        return this.#contexts.get(contextId);\n    }\n    getKnownContext(contextId) {\n        const result = this.findContext(contextId);\n        if (result === undefined) {\n            throw new protocol_js_1.Message.NoSuchFrameException(`Context ${contextId} not found`);\n        }\n        return result;\n    }\n}\nexports.BrowsingContextStorage = BrowsingContextStorage;\n//# sourceMappingURL=browsingContextStorage.js.map","\"use strict\";\n/**\n * Copyright 2022 Google LLC.\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Buffer = void 0;\n/**\n * Implements a FIFO buffer with a fixed size.\n */\nclass Buffer {\n    #capacity;\n    #entries = [];\n    #onItemRemoved;\n    /**\n     * @param capacity\n     * @param onItemRemoved optional delegate called for each removed element.\n     */\n    constructor(capacity, onItemRemoved = () => { }) {\n        this.#capacity = capacity;\n        this.#onItemRemoved = onItemRemoved;\n    }\n    get() {\n        return this.#entries;\n    }\n    add(value) {\n        this.#entries.push(value);\n        while (this.#entries.length > this.#capacity) {\n            const item = this.#entries.shift();\n            if (item !== undefined) {\n                this.#onItemRemoved(item);\n            }\n        }\n    }\n}\nexports.Buffer = Buffer;\n//# sourceMappingURL=buffer.js.map","\"use strict\";\n/**\n * Copyright 2022 Google LLC.\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IdWrapper = void 0;\n/**\n * Creates an object with a positive unique incrementing id.\n */\nclass IdWrapper {\n    static #counter = 0;\n    #id;\n    constructor() {\n        this.#id = ++IdWrapper.#counter;\n    }\n    get id() {\n        return this.#id;\n    }\n}\nexports.IdWrapper = IdWrapper;\n//# sourceMappingURL=idWrapper.js.map","\"use strict\";\n/**\n * Copyright 2022 Google LLC.\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SubscriptionManager = exports.unrollEvents = exports.cartesianProduct = void 0;\nconst protocol_js_1 = require(\"../../../protocol/protocol.js\");\nvar InvalidArgumentException = protocol_js_1.Message.InvalidArgumentException;\n/**\n * Returns the cartesian product of the given arrays.\n *\n * Example:\n *   cartesian([1, 2], ['a', 'b']); => [[1, 'a'], [1, 'b'], [2, 'a'], [2, 'b']]\n */\nfunction cartesianProduct(...a) {\n    return a.reduce((a, b) => a.flatMap((d) => b.map((e) => [d, e].flat())));\n}\nexports.cartesianProduct = cartesianProduct;\n/** Expands \"AllEvents\" events into atomic events. */\nfunction unrollEvents(events) {\n    const allEvents = [];\n    for (const event of events) {\n        switch (event) {\n            case protocol_js_1.BrowsingContext.AllEvents:\n                allEvents.push(...Object.values(protocol_js_1.BrowsingContext.EventNames));\n                break;\n            case protocol_js_1.CDP.AllEvents:\n                allEvents.push(...Object.values(protocol_js_1.CDP.EventNames));\n                break;\n            case protocol_js_1.Log.AllEvents:\n                allEvents.push(...Object.values(protocol_js_1.Log.EventNames));\n                break;\n            case protocol_js_1.Network.AllEvents:\n                allEvents.push(...Object.values(protocol_js_1.Network.EventNames));\n                break;\n            case protocol_js_1.Script.AllEvents:\n                allEvents.push(...Object.values(protocol_js_1.Script.EventNames));\n                break;\n            default:\n                allEvents.push(event);\n        }\n    }\n    return allEvents;\n}\nexports.unrollEvents = unrollEvents;\nclass SubscriptionManager {\n    #subscriptionPriority = 0;\n    // BrowsingContext `null` means the event has subscription across all the\n    // browsing contexts.\n    // Channel `null` means no `channel` should be added.\n    #channelToContextToEventMap = new Map();\n    #browsingContextStorage;\n    constructor(browsingContextStorage) {\n        this.#browsingContextStorage = browsingContextStorage;\n    }\n    getChannelsSubscribedToEvent(eventMethod, contextId) {\n        const prioritiesAndChannels = Array.from(this.#channelToContextToEventMap.keys())\n            .map((channel) => ({\n            priority: this.#getEventSubscriptionPriorityForChannel(eventMethod, contextId, channel),\n            channel,\n        }))\n            .filter(({ priority }) => priority !== null);\n        // Sort channels by priority.\n        return prioritiesAndChannels\n            .sort((a, b) => a.priority - b.priority)\n            .map(({ channel }) => channel);\n    }\n    #getEventSubscriptionPriorityForChannel(eventMethod, contextId, channel) {\n        const contextToEventMap = this.#channelToContextToEventMap.get(channel);\n        if (contextToEventMap === undefined) {\n            return null;\n        }\n        const maybeTopLevelContextId = this.#findTopLevelContextId(contextId);\n        // `null` covers global subscription.\n        const relevantContexts = [...new Set([null, maybeTopLevelContextId])];\n        // Get all the subscription priorities.\n        const priorities = relevantContexts\n            .map((c) => contextToEventMap.get(c)?.get(eventMethod))\n            .filter((p) => p !== undefined);\n        if (priorities.length === 0) {\n            // Not subscribed, return null.\n            return null;\n        }\n        // Return minimal priority.\n        return Math.min(...priorities);\n    }\n    #findTopLevelContextId(contextId) {\n        if (contextId === null) {\n            return null;\n        }\n        const maybeContext = this.#browsingContextStorage.findContext(contextId);\n        const parentId = maybeContext?.parentId ?? null;\n        if (parentId !== null) {\n            return this.#findTopLevelContextId(parentId);\n        }\n        return contextId;\n    }\n    subscribe(event, contextId, channel) {\n        // All the subscriptions are handled on the top-level contexts.\n        contextId = this.#findTopLevelContextId(contextId);\n        if (event === protocol_js_1.BrowsingContext.AllEvents) {\n            Object.values(protocol_js_1.BrowsingContext.EventNames).map((specificEvent) => this.subscribe(specificEvent, contextId, channel));\n            return;\n        }\n        if (event === protocol_js_1.CDP.AllEvents) {\n            Object.values(protocol_js_1.CDP.EventNames).map((specificEvent) => this.subscribe(specificEvent, contextId, channel));\n            return;\n        }\n        if (event === protocol_js_1.Log.AllEvents) {\n            Object.values(protocol_js_1.Log.EventNames).map((specificEvent) => this.subscribe(specificEvent, contextId, channel));\n            return;\n        }\n        if (event === protocol_js_1.Network.AllEvents) {\n            Object.values(protocol_js_1.Network.EventNames).map((specificEvent) => this.subscribe(specificEvent, contextId, channel));\n            return;\n        }\n        if (event === protocol_js_1.Script.AllEvents) {\n            Object.values(protocol_js_1.Script.EventNames).map((specificEvent) => this.subscribe(specificEvent, contextId, channel));\n            return;\n        }\n        if (!this.#channelToContextToEventMap.has(channel)) {\n            this.#channelToContextToEventMap.set(channel, new Map());\n        }\n        const contextToEventMap = this.#channelToContextToEventMap.get(channel);\n        if (!contextToEventMap.has(contextId)) {\n            contextToEventMap.set(contextId, new Map());\n        }\n        const eventMap = contextToEventMap.get(contextId);\n        // Do not re-subscribe to events to keep the priority.\n        if (eventMap.has(event)) {\n            return;\n        }\n        eventMap.set(event, this.#subscriptionPriority++);\n    }\n    /**\n     * Unsubscribes atomically from all events in the given contexts and channel.\n     */\n    unsubscribeAll(events, contextIds, channel) {\n        // Assert all contexts are known.\n        for (const contextId of contextIds) {\n            if (contextId !== null) {\n                this.#browsingContextStorage.getKnownContext(contextId);\n            }\n        }\n        const eventContextPairs = cartesianProduct(unrollEvents(events), contextIds);\n        // Assert all unsubscriptions are valid.\n        // If any of the unsubscriptions are invalid, do not unsubscribe from anything.\n        eventContextPairs\n            .map(([event, contextId]) => this.#checkUnsubscribe(event, contextId, channel))\n            .forEach((unsubscribe) => unsubscribe());\n    }\n    /**\n     * Unsubscribes from the event in the given context and channel.\n     * Syntactic sugar for \"unsubscribeAll\".\n     */\n    unsubscribe(eventName, contextId, channel) {\n        this.unsubscribeAll([eventName], [contextId], channel);\n    }\n    #checkUnsubscribe(event, contextId, channel) {\n        // All the subscriptions are handled on the top-level contexts.\n        contextId = this.#findTopLevelContextId(contextId);\n        if (!this.#channelToContextToEventMap.has(channel)) {\n            throw new InvalidArgumentException(`Cannot unsubscribe from ${event}, ${contextId}. No subscription found.`);\n        }\n        const contextToEventMap = this.#channelToContextToEventMap.get(channel);\n        if (!contextToEventMap.has(contextId)) {\n            throw new InvalidArgumentException(`Cannot unsubscribe from ${event}, ${contextId}. No subscription found.`);\n        }\n        const eventMap = contextToEventMap.get(contextId);\n        if (!eventMap.has(event)) {\n            throw new InvalidArgumentException(`Cannot unsubscribe from ${event}, ${contextId}. No subscription found.`);\n        }\n        return () => {\n            eventMap.delete(event);\n            // Clean up maps if empty.\n            if (eventMap.size === 0) {\n                contextToEventMap.delete(event);\n            }\n            if (contextToEventMap.size === 0) {\n                this.#channelToContextToEventMap.delete(channel);\n            }\n        };\n    }\n}\nexports.SubscriptionManager = SubscriptionManager;\n//# sourceMappingURL=SubscriptionManager.js.map","\"use strict\";\n/**\n * Copyright 2022 Google LLC.\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EventManager = void 0;\nconst buffer_js_1 = require(\"../../../utils/buffer.js\");\nconst idWrapper_js_1 = require(\"../../../utils/idWrapper.js\");\nconst OutgoingBidiMessage_js_1 = require(\"../../OutgoingBidiMessage.js\");\nconst SubscriptionManager_js_1 = require(\"./SubscriptionManager.js\");\nclass EventWrapper {\n    #idWrapper;\n    #contextId;\n    #event;\n    constructor(event, contextId) {\n        this.#idWrapper = new idWrapper_js_1.IdWrapper();\n        this.#contextId = contextId;\n        this.#event = event;\n    }\n    get id() {\n        return this.#idWrapper.id;\n    }\n    get contextId() {\n        return this.#contextId;\n    }\n    get event() {\n        return this.#event;\n    }\n}\n/**\n * Maps event name to a desired buffer length.\n */\nconst eventBufferLength = new Map([\n    ['log.entryAdded', 100],\n]);\nclass EventManager {\n    static #NETWORK_DOMAIN_PREFIX = 'network';\n    /**\n     * Maps event name to a set of contexts where this event already happened.\n     * Needed for getting buffered events from all the contexts in case of\n     * subscripting to all contexts.\n     */\n    #eventToContextsMap = new Map();\n    /**\n     * Maps `eventName` + `browsingContext` to buffer. Used to get buffered events\n     * during subscription. Channel-agnostic.\n     */\n    #eventBuffers = new Map();\n    /**\n     * Maps `eventName` + `browsingContext` + `channel` to last sent event id.\n     * Used to avoid sending duplicated events when user\n     * subscribes -> unsubscribes -> subscribes.\n     */\n    #lastMessageSent = new Map();\n    #subscriptionManager;\n    #bidiServer;\n    #isNetworkDomainEnabled;\n    constructor(bidiServer) {\n        this.#bidiServer = bidiServer;\n        this.#subscriptionManager = new SubscriptionManager_js_1.SubscriptionManager(bidiServer.getBrowsingContextStorage());\n        this.#isNetworkDomainEnabled = false;\n    }\n    get isNetworkDomainEnabled() {\n        return this.#isNetworkDomainEnabled;\n    }\n    /**\n     * Returns consistent key to be used to access value maps.\n     */\n    static #getMapKey(eventName, browsingContext, channel) {\n        return JSON.stringify({ eventName, browsingContext, channel });\n    }\n    registerEvent(event, contextId) {\n        this.registerPromiseEvent(Promise.resolve(event), contextId, event.method);\n    }\n    registerPromiseEvent(event, contextId, eventName) {\n        const eventWrapper = new EventWrapper(event, contextId);\n        const sortedChannels = this.#subscriptionManager.getChannelsSubscribedToEvent(eventName, contextId);\n        this.#bufferEvent(eventWrapper, eventName);\n        // Send events to channels in the subscription priority.\n        for (const channel of sortedChannels) {\n            this.#bidiServer.emitOutgoingMessage(OutgoingBidiMessage_js_1.OutgoingBidiMessage.createFromPromise(event, channel));\n            this.#markEventSent(eventWrapper, channel, eventName);\n        }\n    }\n    async subscribe(eventNames, contextIds, channel) {\n        // First check if all the contexts are known.\n        for (const contextId of contextIds) {\n            if (contextId !== null) {\n                // Assert the context is known. Throw exception otherwise.\n                this.#bidiServer.getBrowsingContextStorage().getKnownContext(contextId);\n            }\n        }\n        for (const eventName of eventNames) {\n            for (const contextId of contextIds) {\n                await this.#handleDomains(eventName, contextId);\n                this.#subscriptionManager.subscribe(eventName, contextId, channel);\n                for (const eventWrapper of this.#getBufferedEvents(eventName, contextId, channel)) {\n                    // The order of the events is important.\n                    this.#bidiServer.emitOutgoingMessage(OutgoingBidiMessage_js_1.OutgoingBidiMessage.createFromPromise(eventWrapper.event, channel));\n                    this.#markEventSent(eventWrapper, channel, eventName);\n                }\n            }\n        }\n    }\n    /**\n     * Enables domains for the subscribed event in the required contexts or\n     * globally.\n     */\n    async #handleDomains(eventName, contextId) {\n        // Enable network domain if user subscribed to any of network events.\n        if (eventName.startsWith(EventManager.#NETWORK_DOMAIN_PREFIX)) {\n            // Enable for all the contexts.\n            if (contextId === null) {\n                this.#isNetworkDomainEnabled = true;\n                await Promise.all(this.#bidiServer\n                    .getBrowsingContextStorage()\n                    .getAllContexts()\n                    .map((context) => context.cdpTarget.enableNetworkDomain()));\n            }\n            else {\n                await this.#bidiServer\n                    .getBrowsingContextStorage()\n                    .getKnownContext(contextId)\n                    .cdpTarget.enableNetworkDomain();\n            }\n        }\n    }\n    async unsubscribe(eventNames, contextIds, channel) {\n        this.#subscriptionManager.unsubscribeAll(eventNames, contextIds, channel);\n    }\n    /**\n     * If the event is buffer-able, put it in the buffer.\n     */\n    #bufferEvent(eventWrapper, eventName) {\n        if (!eventBufferLength.has(eventName)) {\n            // Do nothing if the event is no buffer-able.\n            return;\n        }\n        const bufferMapKey = EventManager.#getMapKey(eventName, eventWrapper.contextId);\n        if (!this.#eventBuffers.has(bufferMapKey)) {\n            this.#eventBuffers.set(bufferMapKey, new buffer_js_1.Buffer(eventBufferLength.get(eventName)));\n        }\n        this.#eventBuffers.get(bufferMapKey).add(eventWrapper);\n        // Add the context to the list of contexts having `eventName` events.\n        if (!this.#eventToContextsMap.has(eventName)) {\n            this.#eventToContextsMap.set(eventName, new Set());\n        }\n        this.#eventToContextsMap.get(eventName).add(eventWrapper.contextId);\n    }\n    /**\n     * If the event is buffer-able, mark it as sent to the given contextId and channel.\n     */\n    #markEventSent(eventWrapper, channel, eventName) {\n        if (!eventBufferLength.has(eventName)) {\n            // Do nothing if the event is no buffer-able.\n            return;\n        }\n        const lastSentMapKey = EventManager.#getMapKey(eventName, eventWrapper.contextId, channel);\n        this.#lastMessageSent.set(lastSentMapKey, Math.max(this.#lastMessageSent.get(lastSentMapKey) ?? 0, eventWrapper.id));\n    }\n    /**\n     * Returns events which are buffered and not yet sent to the given channel events.\n     */\n    #getBufferedEvents(eventName, contextId, channel) {\n        const bufferMapKey = EventManager.#getMapKey(eventName, contextId);\n        const lastSentMapKey = EventManager.#getMapKey(eventName, contextId, channel);\n        const lastSentMessageId = this.#lastMessageSent.get(lastSentMapKey) ?? -Infinity;\n        const result = this.#eventBuffers\n            .get(bufferMapKey)\n            ?.get()\n            .filter((wrapper) => wrapper.id > lastSentMessageId) ?? [];\n        if (contextId === null) {\n            // For global subscriptions, events buffered in each context should be sent back.\n            Array.from(this.#eventToContextsMap.get(eventName)?.keys() ?? [])\n                .filter((_contextId) => \n            // Events without context are already in the result.\n            _contextId !== null &&\n                // Events from deleted contexts should not be sent.\n                this.#bidiServer\n                    .getBrowsingContextStorage()\n                    .hasKnownContext(_contextId))\n                .map((_contextId) => this.#getBufferedEvents(eventName, _contextId, channel))\n                .forEach((events) => result.push(...events));\n        }\n        return result.sort((e1, e2) => e1.id - e2.id);\n    }\n}\nexports.EventManager = EventManager;\n//# sourceMappingURL=EventManager.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RealmStorage = void 0;\nconst protocol_js_1 = require(\"../../../protocol/protocol.js\");\nclass RealmStorage {\n    /** Tracks handles and their realms sent to the client. */\n    #knownHandlesToRealm = new Map();\n    #realmMap = new Map();\n    get knownHandlesToRealm() {\n        return this.#knownHandlesToRealm;\n    }\n    get realmMap() {\n        return this.#realmMap;\n    }\n    findRealms(filter) {\n        return Array.from(this.#realmMap.values()).filter((realm) => {\n            if (filter.realmId !== undefined && filter.realmId !== realm.realmId) {\n                return false;\n            }\n            if (filter.browsingContextId !== undefined &&\n                filter.browsingContextId !== realm.browsingContextId) {\n                return false;\n            }\n            if (filter.navigableId !== undefined &&\n                filter.navigableId !== realm.navigableId) {\n                return false;\n            }\n            if (filter.executionContextId !== undefined &&\n                filter.executionContextId !== realm.executionContextId) {\n                return false;\n            }\n            if (filter.origin !== undefined && filter.origin !== realm.origin) {\n                return false;\n            }\n            if (filter.type !== undefined && filter.type !== realm.type) {\n                return false;\n            }\n            if (filter.sandbox !== undefined && filter.sandbox !== realm.sandbox) {\n                return false;\n            }\n            if (filter.cdpSessionId !== undefined &&\n                filter.cdpSessionId !== realm.cdpSessionId) {\n                return false;\n            }\n            return true;\n        });\n    }\n    findRealm(filter) {\n        const maybeRealms = this.findRealms(filter);\n        if (maybeRealms.length !== 1) {\n            return undefined;\n        }\n        return maybeRealms[0];\n    }\n    getRealm(filter) {\n        const maybeRealm = this.findRealm(filter);\n        if (maybeRealm === undefined) {\n            throw new protocol_js_1.Message.NoSuchFrameException(`Realm ${JSON.stringify(filter)} not found`);\n        }\n        return maybeRealm;\n    }\n    deleteRealms(filter) {\n        this.findRealms(filter).map((realm) => {\n            this.#realmMap.delete(realm.realmId);\n            Array.from(this.#knownHandlesToRealm.entries())\n                .filter(([, r]) => r === realm.realmId)\n                .map(([h]) => this.#knownHandlesToRealm.delete(h));\n        });\n    }\n}\nexports.RealmStorage = RealmStorage;\n//# sourceMappingURL=realmStorage.js.map","\"use strict\";\n/**\n * Copyright 2021 Google LLC.\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BidiServer = void 0;\nconst EventEmitter_js_1 = require(\"../utils/EventEmitter.js\");\nconst processingQueue_js_1 = require(\"../utils/processingQueue.js\");\nconst CommandProcessor_js_1 = require(\"./CommandProcessor.js\");\nconst browsingContextStorage_js_1 = require(\"./domains/context/browsingContextStorage.js\");\nconst EventManager_js_1 = require(\"./domains/events/EventManager.js\");\nconst realmStorage_js_1 = require(\"./domains/script/realmStorage.js\");\nclass BidiServer extends EventEmitter_js_1.EventEmitter {\n    #messageQueue;\n    #transport;\n    #commandProcessor;\n    #browsingContextStorage;\n    #realmStorage;\n    #logger;\n    #handleIncomingMessage = async (message) => {\n        this.#commandProcessor.processCommand(message);\n    };\n    #processOutgoingMessage = async (messageEntry) => {\n        const message = messageEntry.message;\n        if (messageEntry.channel !== null) {\n            message['channel'] = messageEntry.channel;\n        }\n        await this.#transport.sendMessage(message);\n    };\n    constructor(bidiTransport, cdpConnection, selfTargetId, parser, logger) {\n        super();\n        this.#logger = logger;\n        this.#browsingContextStorage = new browsingContextStorage_js_1.BrowsingContextStorage();\n        this.#realmStorage = new realmStorage_js_1.RealmStorage();\n        this.#messageQueue = new processingQueue_js_1.ProcessingQueue(this.#processOutgoingMessage, undefined, this.#logger);\n        this.#transport = bidiTransport;\n        this.#transport.setOnMessage(this.#handleIncomingMessage);\n        this.#commandProcessor = new CommandProcessor_js_1.CommandProcessor(this.#realmStorage, cdpConnection, new EventManager_js_1.EventManager(this), selfTargetId, parser, this.#browsingContextStorage, this.#logger);\n        this.#commandProcessor.on('response', (response) => {\n            this.emitOutgoingMessage(response);\n        });\n    }\n    static async createAndStart(bidiTransport, cdpConnection, selfTargetId, parser, logger) {\n        const server = new BidiServer(bidiTransport, cdpConnection, selfTargetId, parser, logger);\n        const cdpClient = cdpConnection.browserClient();\n        // Needed to get events about new targets.\n        await cdpClient.sendCommand('Target.setDiscoverTargets', { discover: true });\n        // Needed to automatically attach to new targets.\n        await cdpClient.sendCommand('Target.setAutoAttach', {\n            autoAttach: true,\n            waitForDebuggerOnStart: true,\n            flatten: true,\n        });\n        await server.topLevelContextsLoaded();\n        return server;\n    }\n    async topLevelContextsLoaded() {\n        await Promise.all(this.#browsingContextStorage\n            .getTopLevelContexts()\n            .map((c) => c.awaitLoaded()));\n    }\n    /**\n     * Sends BiDi message.\n     */\n    emitOutgoingMessage(messageEntry) {\n        this.#messageQueue.add(messageEntry);\n    }\n    close() {\n        this.#transport.close();\n    }\n    getBrowsingContextStorage() {\n        return this.#browsingContextStorage;\n    }\n}\nexports.BidiServer = BidiServer;\n//# sourceMappingURL=BidiServer.js.map","\"use strict\";\n/**\n * Copyright 2021 Google LLC.\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CdpClient = void 0;\nconst EventEmitter_js_1 = require(\"../utils/EventEmitter.js\");\nclass CdpClient extends EventEmitter_js_1.EventEmitter {\n    #cdpConnection;\n    #sessionId;\n    constructor(cdpConnection, sessionId) {\n        super();\n        this.#cdpConnection = cdpConnection;\n        this.#sessionId = sessionId;\n    }\n    /**\n     * Creates a new CDP client object that communicates with the browser using a given\n     * transport mechanism.\n     * @param transport A transport object that will be used to send and receive raw CDP messages.\n     * @return A connected CDP client object.\n     */\n    static create(cdpConnection, sessionId) {\n        return new CdpClient(cdpConnection, sessionId);\n    }\n    /**\n     * Returns command promise, which will be resolved with the command result after receiving CDP result.\n     * @param method Name of the CDP command to call.\n     * @param params Parameters to pass to the CDP command.\n     */\n    sendCommand(method, ...params) {\n        const param = params[0];\n        return this.#cdpConnection.sendCommand(method, param, this.#sessionId);\n    }\n}\nexports.CdpClient = CdpClient;\n//# sourceMappingURL=cdpClient.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CdpConnection = void 0;\nconst cdpClient_js_1 = require(\"./cdpClient.js\");\n/**\n * Represents a high-level CDP connection to the browser backend.\n * Manages a CdpClient instance for each active CDP session.\n */\nclass CdpConnection {\n    #transport;\n    #browserCdpClient;\n    /** Map from session ID to CdpClient. */\n    #sessionCdpClients = new Map();\n    #commandCallbacks = new Map();\n    #log;\n    #nextId = 0;\n    constructor(transport, log = () => { }) {\n        this.#transport = transport;\n        this.#log = log;\n        this.#transport.setOnMessage(this.#onMessage);\n        this.#browserCdpClient = cdpClient_js_1.CdpClient.create(this, null);\n    }\n    /**\n     * Closes the connection to the browser.\n     */\n    close() {\n        this.#transport.close();\n        for (const [, { reject }] of this.#commandCallbacks) {\n            reject(new Error('Disconnected'));\n        }\n        this.#commandCallbacks.clear();\n        this.#sessionCdpClients.clear();\n    }\n    /**\n     * @return The CdpClient object attached to the root browser session.\n     */\n    browserClient() {\n        return this.#browserCdpClient;\n    }\n    /**\n     * Gets a CdpClient instance by sessionId.\n     * @param sessionId The sessionId of the CdpClient to retrieve.\n     * @return The CdpClient object attached to the given session, or null if the session is not attached.\n     */\n    getCdpClient(sessionId) {\n        const cdpClient = this.#sessionCdpClients.get(sessionId);\n        if (!cdpClient) {\n            throw new Error('Unknown CDP session ID');\n        }\n        return cdpClient;\n    }\n    sendCommand(method, params, sessionId) {\n        return new Promise((resolve, reject) => {\n            const id = this.#nextId++;\n            this.#commandCallbacks.set(id, { resolve, reject });\n            const messageObj = { id, method, params };\n            if (sessionId) {\n                messageObj.sessionId = sessionId;\n            }\n            const messageStr = JSON.stringify(messageObj);\n            const messagePretty = JSON.stringify(messageObj, null, 2);\n            this.#transport.sendMessage(messageStr);\n            this.#log('sent ▸', messagePretty);\n        });\n    }\n    #onMessage = async (message) => {\n        const parsed = JSON.parse(message);\n        const messagePretty = JSON.stringify(parsed, null, 2);\n        this.#log('received ◂', messagePretty);\n        // Update client map if a session is attached or detached.\n        // Listen for these events on every session.\n        if (parsed.method === 'Target.attachedToTarget') {\n            const { sessionId } = parsed.params;\n            this.#sessionCdpClients.set(sessionId, cdpClient_js_1.CdpClient.create(this, sessionId));\n        }\n        else if (parsed.method === 'Target.detachedFromTarget') {\n            const { sessionId } = parsed.params;\n            const client = this.#sessionCdpClients.get(sessionId);\n            if (client) {\n                this.#sessionCdpClients.delete(sessionId);\n            }\n        }\n        if (parsed.id !== undefined) {\n            // Handle command response.\n            const callbacks = this.#commandCallbacks.get(parsed.id);\n            if (callbacks) {\n                if (parsed.result) {\n                    callbacks.resolve(parsed.result);\n                }\n                else if (parsed.error) {\n                    callbacks.reject(parsed.error);\n                }\n            }\n        }\n        else if (parsed.method) {\n            const client = parsed.sessionId\n                ? this.#sessionCdpClients.get(parsed.sessionId)\n                : this.#browserCdpClient;\n            if (client) {\n                client.emit(parsed.method, parsed.params || {});\n            }\n        }\n    };\n}\nexports.CdpConnection = CdpConnection;\n//# sourceMappingURL=cdpConnection.js.map","\"use strict\";\n/**\n * Copyright 2021 Google LLC.\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WebSocketTransport = void 0;\nclass WebSocketTransport {\n    #onMessage = null;\n    #websocket;\n    constructor(websocket) {\n        this.#websocket = websocket;\n        this.#websocket.on('message', (message) => {\n            this.#onMessage?.(message);\n        });\n    }\n    setOnMessage(onMessage) {\n        this.#onMessage = onMessage;\n    }\n    async sendMessage(message) {\n        this.#websocket.send(message);\n    }\n    close() {\n        this.#onMessage = null;\n        this.#websocket.close();\n    }\n}\nexports.WebSocketTransport = WebSocketTransport;\n//# sourceMappingURL=websocketTransport.js.map","\"use strict\";\n/**\n * Copyright 2021 Google LLC.\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WebSocketTransport = exports.CdpConnection = exports.CdpClient = void 0;\nvar cdpClient_js_1 = require(\"./cdpClient.js\");\nObject.defineProperty(exports, \"CdpClient\", { enumerable: true, get: function () { return cdpClient_js_1.CdpClient; } });\nvar cdpConnection_js_1 = require(\"./cdpConnection.js\");\nObject.defineProperty(exports, \"CdpConnection\", { enumerable: true, get: function () { return cdpConnection_js_1.CdpConnection; } });\nvar websocketTransport_js_1 = require(\"../utils/websocketTransport.js\");\nObject.defineProperty(exports, \"WebSocketTransport\", { enumerable: true, get: function () { return websocketTransport_js_1.WebSocketTransport; } });\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.log = exports.generatePage = void 0;\n/**\n * Copyright 2022 Google LLC.\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst log_js_1 = require(\"../utils/log.js\");\n/** HTML source code for the user-facing Mapper tab. */\nconst mapperPageSource = '<!DOCTYPE html><title>BiDi-CDP Mapper</title><style>body{font-family: Roboto, serif; font-size: 13px; color: #202124;}.log{padding: 12px; font-family: Menlo, Consolas, Monaco, Liberation Mono, Lucida Console, monospace; font-size: 11px; line-height: 180%; background: #f1f3f4; border-radius: 4px;}.pre{overflow-wrap: break-word; padding: 10px;}.card{margin: 60px auto; padding: 2px 0; max-width: 900px; box-shadow: 0 1px 4px rgba(0, 0, 0, 0.15), 0 1px 6px rgba(0, 0, 0, 0.2); border-radius: 8px;}.divider{height: 1px; background: #f0f0f0;}.item{padding: 16px 20px;}</style><div class=\"card\"><div class=\"item\"><h1>BiDi-CDP Mapper is controlling this tab</h1><p>Closing or reloading it will stop the BiDi process. <a target=\"_blank\" title=\"BiDi-CDP Mapper GitHub Repository\" href=\"https://github.com/GoogleChromeLabs/chromium-bidi\">Details.</a></p></div><div class=\"divider\"></div><details id=\"details\"><summary class=\"item\">Debug information</summary></details></div>';\n/**\n * The following piece of HTML should be added to the `debug` element:\n *\n * <div class=\"divider\"></div>\n * <div class=\"item\">\n * <h3>${name}</h3>\n * <div id=\"${name}_log\" class=\"log\">\n */\nfunction findOrCreateTypeLogContainer(logType) {\n    const containerId = `${logType}_log`;\n    const existingContainer = document.getElementById(containerId);\n    if (existingContainer) {\n        return existingContainer;\n    }\n    const debugElement = document.getElementById('details');\n    const divider = document.createElement('div');\n    divider.className = 'divider';\n    debugElement.appendChild(divider);\n    const htmlItem = document.createElement('div');\n    htmlItem.className = 'item';\n    htmlItem.innerHTML = `<h3>${logType}</h3><div id=\"${containerId}\" class=\"log\"></div>`;\n    debugElement.appendChild(htmlItem);\n    return document.getElementById(containerId);\n}\nfunction generatePage() {\n    // If run not in browser (e.g. unit test), do nothing.\n    if (!globalThis.document?.documentElement) {\n        return;\n    }\n    window.document.documentElement.innerHTML = mapperPageSource;\n    // Create main log containers in proper order.\n    findOrCreateTypeLogContainer(log_js_1.LogType.system);\n    findOrCreateTypeLogContainer(log_js_1.LogType.bidi);\n    findOrCreateTypeLogContainer(log_js_1.LogType.browsingContexts);\n    findOrCreateTypeLogContainer(log_js_1.LogType.cdp);\n}\nexports.generatePage = generatePage;\nfunction log(logType, ...messages) {\n    // If run not in browser (e.g. unit test), do nothing.\n    if (!globalThis.document?.documentElement) {\n        return;\n    }\n    // If `sendDebugMessage` is defined, send the log message there.\n    global.window?.sendDebugMessage?.(JSON.stringify({ logType, messages }));\n    const typeLogContainer = findOrCreateTypeLogContainer(logType);\n    // This piece of HTML should be added:\n    // <div class=\"pre\">...log message...</div>\n    const lineElement = document.createElement('div');\n    lineElement.className = 'pre';\n    lineElement.textContent = messages.join(' ');\n    typeLogContainer.appendChild(lineElement);\n}\nexports.log = log;\n//# sourceMappingURL=mapperTabPage.js.map","\"use strict\";\n/**\n * Copyright 2021 Google LLC.\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @license\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Parser = __importStar(require(\"../protocol-parser/protocol-parser.js\"));\nconst BidiServer_js_1 = require(\"../bidiMapper/BidiServer.js\");\nconst index_js_1 = require(\"../cdp/index.js\");\nconst log_js_1 = require(\"../utils/log.js\");\nconst OutgoingBidiMessage_js_1 = require(\"../bidiMapper/OutgoingBidiMessage.js\");\nconst mapperTabPage_js_1 = require(\"./mapperTabPage.js\");\n// Initiate `setSelfTargetId` as soon as possible to prevent race condition.\nconst waitSelfTargetIdPromise = waitSelfTargetId();\n(async () => {\n    (0, mapperTabPage_js_1.generatePage)();\n    // Needed to filter out info related to BiDi target.\n    const selfTargetId = await waitSelfTargetIdPromise;\n    const bidiServer = await createBidiServer(selfTargetId);\n    (0, mapperTabPage_js_1.log)(log_js_1.LogType.system, 'Launched');\n    bidiServer.emitOutgoingMessage(OutgoingBidiMessage_js_1.OutgoingBidiMessage.createResolved({ launched: true }, null));\n})();\nfunction createCdpConnection() {\n    /**\n     * A CdpTransport implementation that uses the window.cdp bindings\n     * injected by Target.exposeDevToolsProtocol.\n     */\n    class WindowCdpTransport {\n        #onMessage = null;\n        constructor() {\n            window.cdp.onmessage = (message) => {\n                this.#onMessage?.call(null, message);\n            };\n        }\n        setOnMessage(onMessage) {\n            this.#onMessage = onMessage;\n        }\n        async sendMessage(message) {\n            window.cdp.send(message);\n        }\n        close() {\n            this.#onMessage = null;\n            window.cdp.onmessage = null;\n        }\n    }\n    return new index_js_1.CdpConnection(new WindowCdpTransport(), (...messages) => {\n        (0, mapperTabPage_js_1.log)(log_js_1.LogType.cdp, ...messages);\n    });\n}\nasync function createBidiServer(selfTargetId) {\n    class WindowBidiTransport {\n        #onMessage = null;\n        constructor() {\n            window.onBidiMessage = (messageStr) => {\n                (0, mapperTabPage_js_1.log)(log_js_1.LogType.bidi, 'received ◂', messageStr);\n                let messageObject;\n                try {\n                    messageObject = WindowBidiTransport.#parseBidiMessage(messageStr);\n                }\n                catch (e) {\n                    // Transport-level error does not provide channel.\n                    this.#respondWithError(messageStr, 'invalid argument', e.message, null);\n                    return;\n                }\n                this.#onMessage?.call(null, messageObject);\n            };\n        }\n        setOnMessage(onMessage) {\n            this.#onMessage = onMessage;\n        }\n        async sendMessage(message) {\n            const messageStr = JSON.stringify(message);\n            window.sendBidiResponse(messageStr);\n            (0, mapperTabPage_js_1.log)(log_js_1.LogType.bidi, 'sent ▸', messageStr);\n        }\n        close() {\n            this.#onMessage = null;\n            window.onBidiMessage = null;\n        }\n        #respondWithError(plainCommandData, errorCode, errorMessage, channel) {\n            const errorResponse = WindowBidiTransport.#getErrorResponse(plainCommandData, errorCode, errorMessage);\n            if (channel) {\n                // TODO: get rid of any, same code existed in BidiServer.\n                this.sendMessage({\n                    ...errorResponse,\n                    channel,\n                });\n            }\n            else {\n                this.sendMessage(errorResponse);\n            }\n        }\n        static #getJsonType(value) {\n            if (value === null) {\n                return 'null';\n            }\n            if (Array.isArray(value)) {\n                return 'array';\n            }\n            return typeof value;\n        }\n        static #getErrorResponse(messageStr, errorCode, errorMessage) {\n            // TODO: this is bizarre per spec. We reparse the payload and\n            // extract the ID, regardless of what kind of value it was.\n            let messageId;\n            try {\n                const messageObj = JSON.parse(messageStr);\n                if (WindowBidiTransport.#getJsonType(messageObj) === 'object' &&\n                    'id' in messageObj) {\n                    messageId = messageObj.id;\n                }\n            }\n            catch { }\n            return {\n                id: messageId,\n                error: errorCode,\n                message: errorMessage,\n                // TODO: optional stacktrace field.\n            };\n        }\n        static #parseBidiMessage(messageStr) {\n            let messageObject;\n            try {\n                messageObject = JSON.parse(messageStr);\n            }\n            catch {\n                throw new Error('Cannot parse data as JSON');\n            }\n            const parsedType = WindowBidiTransport.#getJsonType(messageObject);\n            if (parsedType !== 'object') {\n                throw new Error(`Expected JSON object but got ${parsedType}`);\n            }\n            // Extract and validate id, method and params.\n            const { id, method, params } = messageObject;\n            const idType = WindowBidiTransport.#getJsonType(id);\n            if (idType !== 'number' || !Number.isInteger(id) || id < 0) {\n                // TODO: should uint64_t be the upper limit?\n                // https://tools.ietf.org/html/rfc7049#section-2.1\n                throw new Error(`Expected unsigned integer but got ${idType}`);\n            }\n            const methodType = WindowBidiTransport.#getJsonType(method);\n            if (methodType !== 'string') {\n                throw new Error(`Expected string method but got ${methodType}`);\n            }\n            const paramsType = WindowBidiTransport.#getJsonType(params);\n            if (paramsType !== 'object') {\n                throw new Error(`Expected object params but got ${paramsType}`);\n            }\n            let channel = messageObject.channel;\n            if (channel !== undefined) {\n                const channelType = WindowBidiTransport.#getJsonType(channel);\n                if (channelType !== 'string') {\n                    throw new Error(`Expected string channel but got ${channelType}`);\n                }\n                // Empty string channel is considered as no channel provided.\n                if (channel === '') {\n                    channel = undefined;\n                }\n            }\n            return { id, method, params, channel };\n        }\n    }\n    return BidiServer_js_1.BidiServer.createAndStart(new WindowBidiTransport(), createCdpConnection(), selfTargetId, new BidiParserImpl(), mapperTabPage_js_1.log);\n}\nclass BidiParserImpl {\n    parseGetRealmsParams(params) {\n        return Parser.Script.parseGetRealmsParams(params);\n    }\n    parseCallFunctionParams(params) {\n        return Parser.Script.parseCallFunctionParams(params);\n    }\n    parseEvaluateParams(params) {\n        return Parser.Script.parseEvaluateParams(params);\n    }\n    parseDisownParams(params) {\n        return Parser.Script.parseDisownParams(params);\n    }\n    parseSendCommandParams(params) {\n        return Parser.CDP.parseSendCommandParams(params);\n    }\n    parseGetSessionParams(params) {\n        return Parser.CDP.parseGetSessionParams(params);\n    }\n    parseSubscribeParams(params) {\n        return Parser.Session.parseSubscribeParams(params);\n    }\n    parseNavigateParams(params) {\n        return Parser.BrowsingContext.parseNavigateParams(params);\n    }\n    parseGetTreeParams(params) {\n        return Parser.BrowsingContext.parseGetTreeParams(params);\n    }\n    parseCreateParams(params) {\n        return Parser.BrowsingContext.parseCreateParams(params);\n    }\n    parseCloseParams(params) {\n        return Parser.BrowsingContext.parseCloseParams(params);\n    }\n    parseCaptureScreenshotParams(params) {\n        return Parser.BrowsingContext.parseCaptureScreenshotParams(params);\n    }\n    parsePrintParams(params) {\n        return Parser.BrowsingContext.parsePrintParams(params);\n    }\n}\n// Needed to filter out info related to BiDi target.\nasync function waitSelfTargetId() {\n    return new Promise((resolve) => {\n        window.setSelfTargetId = (targetId) => {\n            (0, mapperTabPage_js_1.log)(log_js_1.LogType.system, 'Current target ID:', targetId);\n            resolve(targetId);\n        };\n    });\n}\n//# sourceMappingURL=bidiTab.js.map"],"names":["util","Object","defineProperty","exports","value","getParsedType","ZodParsedType","assertNever","_x","Error","arrayToEnum","items","obj","item","getValidEnumValues","validKeys","objectKeys","filter","k","filtered","objectValues","map","e","keys","object","key","prototype","hasOwnProperty","call","push","find","arr","checker","isInteger","Number","val","isFinite","Math","floor","joinValues","array","separator","join","data","undefined","string","isNaN","nan","number","boolean","function","bigint","Array","isArray","null","then","catch","promise","Map","Set","set","Date","date","unknown","setErrorMap","defaultErrorMap","ZodError","ZodIssueCode","util_1","require$$0","quotelessJson","JSON","stringify","replace","constructor","issues","super","this","addIssue","sub","addIssues","subs","actualProto","setPrototypeOf","__proto__","name","errors","format","_mapper","mapper","issue","message","fieldErrors","_errors","processError","error","code","unionErrors","returnTypeError","argumentsError","path","length","curr","i","el","toString","isEmpty","flatten","formErrors","create","_ctx","invalid_type","received","expected","invalid_literal","unrecognized_keys","invalid_union","invalid_union_discriminator","options","invalid_enum_value","invalid_arguments","invalid_return_type","invalid_date","invalid_string","validation","too_small","type","inclusive","minimum","too_big","maximum","custom","invalid_intersection_types","not_multiple_of","multipleOf","defaultError","overrideErrorMap","isAsync","isValid","isDirty","isAborted","OK","DIRTY","INVALID","ParseStatus","addIssueToContext","EMPTY_PATH","makeIssue","ZodError_1","params","errorMaps","issueData","fullPath","fullIssue","errorMessage","maps","m","slice","reverse","ctx","common","contextualErrorMap","schemaErrorMap","x","dirty","abort","static","status","results","arrayValue","s","pairs","syncPairs","pair","mergeObjectSync","finalObject","alwaysSet","freeze","Promise","typeAliases","errorUtil","errToObj","intersection","instanceof","enum","effect","any","ZodFirstPartyTypeKind","ZodSchema","Schema","ZodNaN","ZodDefault","ZodNullable","ZodTransformer","ZodEffects","ZodPromise","ZodNativeEnum","ZodEnum","ZodLiteral","ZodFunction","ZodSet","ZodMap","ZodRecord","ZodTuple","ZodIntersection","ZodUnion","ZodObject","objectUtil","ZodArray","ZodVoid","ZodNever","ZodAny","ZodNull","ZodUndefined","ZodDate","ZodBoolean","ZodBigInt","ZodString","ZodType","void","union","tuple","transformer","strictObject","record","preprocess","ostring","optional","onumber","oboolean","nullable","never","nativeEnum","literal","lazy","errorUtil_1","parseUtil_1","require$$1","require$$2","require$$3","ParseInputLazyPath","parent","_path","_key","concat","handleResult","result","success","processCreateParams","errorMap","invalid_type_error","required_error","description","iss","def","spa","safeParseAsync","superRefine","_refinement","_def","parse","bind","safeParse","parseAsync","refine","refinement","nullish","or","and","transform","default","describe","isNullable","isOptional","_getType","input","_getOrReturnCtx","parsedType","_processInputParams","_parseSync","_parse","_parseAsync","resolve","_a","async","maybeAsyncResult","check","getIssueProperties","setError","refinementData","schema","typeName","ZodOptional","option","incoming","innerType","defaultValue","This","cuidRegex","uuidRegex","emailRegex","arguments","_regex","regex","test","nonempty","min","trim","checks","kind","URL","lastIndex","_addCheck","email","url","uuid","cuid","minLength","max","maxLength","len","isEmail","ch","isURL","isUUID","isCUID","Infinity","floatSafeRemainder","step","valDecCount","split","stepDecCount","decCount","parseInt","toFixed","pow","ZodNumber","gte","lte","setLimit","gt","lt","int","positive","negative","nonpositive","nonnegative","minValue","maxValue","isInt","getTime","_any","ZodUnknown","_unknown","all","mergeArray","element","mergeShapes","first","second","AugmentFactory","augmentation","shape","deepPartialify","newShape","fieldSchema","unwrap","_cached","nonstrict","passthrough","augment","extend","_getCached","shapeKeys","extraKeys","includes","keyValidator","catchall","unknownKeys","strict","_b","_c","_d","strip","setKey","merge","merging","index","pick","mask","omit","indexOf","deepPartial","partial","required","newField","strictCreate","lazycreate","childCtx","types","ZodDiscriminatedUnion","discriminator","discriminatorValue","get","validDiscriminatorValues","from","forEach","size","mergeValues","a","b","aType","bType","valid","bKeys","sharedKeys","newObj","sharedValue","newArray","handleParsed","parsedLeft","parsedRight","merged","left","right","rest","itemIndex","schemas","keySchema","keyType","valueSchema","valueType","mergeObjectAsync","third","entries","finalMap","minSize","maxSize","finalizeSet","elements","parsedSet","add","values","validate","implement","makeArgsIssue","args","makeReturnsIssue","returns","fn","parsedArgs","parsedReturns","parameters","returnType","func","strictImplement","ZodLazy","getter","expectedValues","enumValues","Values","Enum","nativeEnumValues","promisified","processed","checkCtx","arg","fatal","executeRefinement","acc","inner","base","createWithPreprocess","removeDefault","p","p2","late","cls","stringType","numberType","nanType","bigIntType","booleanType","dateType","undefinedType","nullType","anyType","unknownType","neverType","voidType","arrayType","objectType","strictObjectType","unionType","discriminatedUnionType","discriminatedUnion","intersectionType","tupleType","recordType","mapType","setType","functionType","lazyType","literalType","enumType","nativeEnumType","promiseType","effectsType","optionalType","nullableType","preprocessType","__createBinding","o","k2","enumerable","__exportStar","require$$4","__setModuleDefault","v","__importStar","mod","__esModule","z","Script","BrowsingContext","EventNames","Log","Network","CDP","Message","ErrorResponseClass","stacktrace","toErrorResponse","commandId","id","UnknownException","UnknownCommandException","InvalidArgumentException","NoSuchNodeException","NoSuchFrameException","AllEvents","Session","parseObject","zod_1","protocol_js_1","parseResult","CommonDataTypes","SharedReferenceSchema","sharedId","RemoteReferenceSchema","handle","UndefinedValueSchema","NullValueSchema","StringValueSchema","SpecialNumberSchema","NumberValueSchema","BooleanValueSchema","BigIntValueSchema","PrimitiveProtocolValueSchema","LocalValueSchema","ArrayLocalValueSchema","DateLocalValueSchema","MapLocalValueSchema","ObjectLocalValueSchema","RegExpLocalValueSchema","SetLocalValueSchema","LocalOrRemoteValueSchema","ListLocalValueSchema","MappingLocalValueSchema","pattern","flags","BrowsingContextSchema","MaxDepthSchema","RealmTypeSchema","GetRealmsParametersSchema","context","parseGetRealmsParams","ContextTargetSchema","sandbox","RealmTargetSchema","realm","TargetSchema","ResultOwnershipSchema","EvaluateParametersSchema","expression","awaitPromise","target","resultOwnership","parseEvaluateParams","DisownParametersSchema","handles","parseDisownParams","ChannelIdSchema","ChannelPropertiesSchema","channel","maxDepth","ownership","ChannelSchema","ArgumentValueSchema","CallFunctionParametersSchema","functionDeclaration","parseCallFunctionParams","GetTreeParametersSchema","root","parseGetTreeParams","ReadinessStateSchema","NavigateParametersSchema","wait","parseNavigateParams","CreateParametersSchema","referenceContext","parseCreateParams","CloseParametersSchema","parseCloseParams","CaptureScreenshotParametersSchema","parseCaptureScreenshotParams","PrintPageParametersSchema","height","width","PrintMarginParametersSchema","bottom","top","PrintPageRangesSchema","pageRanges","every","pageRange","match","String","start","end","groups","PrintParametersSchema","background","margin","orientation","page","scale","shrinkToFit","parsePrintParams","SendCommandParamsSchema","cdpMethod","cdpParams","cdpSession","parseSendCommandParams","GetSessionParamsSchema","parseGetSessionParams","SubscriptionRequestParametersEventsSchema","SubscriptionRequestParametersSchema","events","contexts","parseSubscribeParams","__importDefault","EventEmitter_1","EventEmitter","mitt_1","n","on","t","off","splice","emit","EventEmitter$1","emitter","handler","once","event","onceHandler","eventData","LogType","processingQueue","ProcessingQueue","log_js_1","logger","processor","queue","isProcessing","_catch","entry","processIfNeeded","entryPromise","shift","system","finally","unitConversions","inchesFromCm","cm","deferred","Deferred","isFinished","reject","onFulfilled","onRejected","reason","onFinally","Symbol","toStringTag","ScriptEvaluator","SHARED_ID_DIVIDER","eventManager","cdpObject","cdpClient","sendCommand","returnByValue","executionContextId","cdpRemoteObject","cdpRemoteObjectToCallArgument","cdpWebDriverValue","generateWebDriverValue","cdpToBidiValue","cdpEvaluateResult","contextId","exceptionDetails","serializeCdpExceptionDetails","realmId","_this","_arguments","callFunctionAndSerializeScript","thisAndArgumentsList","deserializeToCdpArg","cdpCallFunctionResult","objectId","unserializableValue","argumentValue","navigableId","rawBackendNodeId","backendNodeId","Boolean","keyValueArray","flattenKeyValuePairs","flattenValueList","channelHandle","queueNonEmptyResolver","onMessage","sendMessage","initChannelListener","keyArg","valueArg","list","channelId","getMessage","registerPromiseEvent","method","MessageEvent","source","browsingContextId","cdpExceptionDetails","lineOffset","callFrames","stackTrace","frame","functionName","lineNumber","columnNumber","exception","serializeCdpObject","text","stringifyObject","Realm","scriptEvaluator_js_1","realmStorage","browsingContextStorage","origin","scriptEvaluator","cdpSessionId","realmMap","knownHandlesToRealm","delete","cdpValue","webDriverValue","bidiValue","webDriverValueToBiDi","hasOwn","children","toBiDi","findContext","getKnownContext","awaitUnblocked","callFunction","scriptEvaluate","browsingContextImpl","BrowsingContextImpl","unitConversions_js_1","deferred_js_1","realm_js_1","defers","documentInitialized","Page","navigatedWithinDocument","lifecycleEvent","DOMContentLoaded","load","parentId","loaderId","cdpTarget","maybeDefaultRealm","defaultRealm","initListeners","addContext","registerEvent","ContextCreatedEvent","serializeToBidiValue","updateCdpTarget","removeChildContexts","deleteRealms","ContextDestroyedEvent","removeContext","child","addChild","targetUnblocked","addParentFiled","c","targetInfo","targetId","urlFragment","frameId","timestamp","documentChanged","DomContentLoadedEvent","navigation","LoadEvent","auxData","uniqueId","getOrigin","isDefault","browsingContexts","cdpNavigateResult","errorText","maybeSandboxes","findRealms","worldName","printToPdfCdpParams","printBackground","landscape","marginBottom","marginLeft","marginRight","marginTop","paperHeight","paperWidth","logHelper","getRemoteValuesText","logMessageFormatter","specifiers","isFormmatSpecifier","str","some","spec","output","argFormat","argValues","tokens","RegExp","token","stringFromArg","parseFloat","toJson","formatText","logManager","LogManager","logHelper_js_1","getBidiStackTrace","cdpStackTrace","stackFrames","callFrame","initialize","initializeLogEntryAddedEventListener","findRealm","argsPromise","LogEntryAddedEvent","level","consoleApiType","round","textPromise","networkRequest","NetworkRequest","deferred_1","protocol_1","requestId","requestWillBeSentEvent","requestWillBeSentExtraInfoEvent","responseReceivedEvent","responseReceivedExtraInfoEvent","beforeRequestSentDeferred","responseReceivedDeferred","onRequestWillBeSentEvent","sendBeforeRequestEvent","onRequestWillBeSentExtraInfoEvent","onResponseReceivedEvent","sendResponseReceivedEvent","onResponseReceivedEventExtraInfo","isIgnoredEvent","getBeforeRequestEvent","BeforeRequestSentEvent","redirectCount","request","getRequestData","wallTime","initiator","getInitiatorType","headers","cookies","getCookies","associatedCookies","headersSize","bodySize","timings","timeOrigin","requestTime","redirectStart","redirectEnd","fetchStart","dnsStart","dnsEnd","connectStart","connectEnd","tlsStart","tlsEnd","requestStart","responseStart","responseEnd","cdpSameSiteValue","cookieInfo","cookie","domain","expires","httpOnly","secure","sameSite","getCookiesSameSite","getResponseReceivedEvent","ResponseCompletedEvent","baseEventParams","response","protocol","statusText","fromCache","fromDiskCache","fromPrefetchCache","getHeaders","mimeType","bytesReceived","encodedDataLength","headersText","content","endsWith","networkProcessor","NetworkProcessor","networkRequest_1","requestMap","getOrCreateNetworkRequest","has","CdpTarget","logManager_1","networkProcessor_1","networkDomainActivated","setEventListeners","unblock","isNetworkDomainEnabled","enableNetworkDomain","enabled","autoAttach","waitForDebuggerOnStart","EventReceivedEvent","browsingContextProcessor","BrowsingContextProcessor","browsingContextImpl_js_1","cdpTarget_js_1","cdpConnection","selfTargetId","browserClient","handleAttachedToTargetEvent","handleDetachedFromTargetEvent","handleFrameAttachedEvent","handleFrameDetachedEvent","parentBrowsingContext","parentFrameId","parentSessionCdpClient","sessionId","targetCdpClient","getCdpClient","isValidTarget","hasKnownContext","process_browsingContext_getTree","getTopLevelContexts","MAX_VALUE","browserCdpClient","newWindow","awaitLoaded","navigate","captureScreenshot","print","getRealm","getOrCreateSandbox","process_script_getRealms","realms","h","disown","commandParams","detachedFromTargetPromise","onContextDestroyed","eventParams","client","process_cdp_getSession","OutgoingBidiMessage_1","OutgoingBidiMessage","messagePromise","OutgoingBidiMessage$1","CommandProcessor_1","CommandProcessor","EventEmitter_js_1","browsingContextProcessor_js_1","OutgoingBidiMessage_js_1","BidiNoOpParser","contextProcessor","parser","ready","subscribe","unsubscribe","commandData","process_session_status","process_session_subscribe","process_session_unsubscribe","process_browsingContext_create","process_browsingContext_close","process_browsingContext_navigate","process_browsingContext_captureScreenshot","process_browsingContext_print","process_script_callFunction","process_script_evaluate","process_script_disown","process_cdp_sendCommand","command","processCommand","createResolved","errorResponse","bidi","CommandProcessor$1","BrowsingContextStorage","getAllContexts","buffer","Buffer","capacity","onItemRemoved","idWrapper","IdWrapper","counter","SubscriptionManager_1","SubscriptionManager","unrollEvents","cartesianProduct","reduce","flatMap","d","flat","allEvents","SubscriptionManager$1","subscriptionPriority","channelToContextToEventMap","getChannelsSubscribedToEvent","eventMethod","priority","getEventSubscriptionPriorityForChannel","sort","contextToEventMap","maybeTopLevelContextId","findTopLevelContextId","priorities","specificEvent","eventMap","unsubscribeAll","contextIds","checkUnsubscribe","eventName","EventManager_1","EventManager","buffer_js_1","idWrapper_js_1","SubscriptionManager_js_1","EventWrapper","eventBufferLength","eventToContextsMap","eventBuffers","lastMessageSent","subscriptionManager","bidiServer","getBrowsingContextStorage","browsingContext","eventWrapper","sortedChannels","bufferEvent","emitOutgoingMessage","createFromPromise","markEventSent","eventNames","handleDomains","getBufferedEvents","startsWith","NETWORK_DOMAIN_PREFIX","bufferMapKey","getMapKey","lastSentMapKey","lastSentMessageId","wrapper","_contextId","e1","e2","EventManager$1","RealmStorage","maybeRealms","maybeRealm","r","BidiServer_1","BidiServer","processingQueue_js_1","CommandProcessor_js_1","browsingContextStorage_js_1","EventManager_js_1","realmStorage_js_1","require$$5","messageQueue","transport","commandProcessor","handleIncomingMessage","processOutgoingMessage","messageEntry","bidiTransport","setOnMessage","server","discover","topLevelContextsLoaded","close","BidiServer$1","CdpClient","param","CdpConnection","cdpClient_js_1","sessionCdpClients","commandCallbacks","log","nextId","clear","messageObj","messageStr","messagePretty","parsed","callbacks","websocketTransport","WebSocketTransport","websocket","send","cdpConnection_js_1","websocketTransport_js_1","mapperTabPage","generatePage","findOrCreateTypeLogContainer","logType","containerId","existingContainer","document","getElementById","debugElement","divider","createElement","className","appendChild","htmlItem","innerHTML","globalThis","documentElement","window","cdp","messages","global","sendDebugMessage","typeLogContainer","lineElement","textContent","desc","getOwnPropertyDescriptor","writable","configurable","bidiTab","Parser","BidiServer_js_1","index_js_1","mapperTabPage_js_1","waitSelfTargetIdPromise","setSelfTargetId","waitSelfTargetId","WindowBidiTransport","onBidiMessage","messageObject","parseBidiMessage","respondWithError","sendBidiResponse","plainCommandData","errorCode","getErrorResponse","messageId","getJsonType","idType","methodType","paramsType","channelType","createAndStart","WindowCdpTransport","onmessage","createCdpConnection","BidiParserImpl","createBidiServer","launched"],"mappings":"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"}