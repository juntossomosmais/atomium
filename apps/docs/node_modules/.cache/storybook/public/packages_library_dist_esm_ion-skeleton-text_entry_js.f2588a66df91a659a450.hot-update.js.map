{"version":3,"file":"packages_library_dist_esm_ion-skeleton-text_entry_js.f2588a66df91a659a450.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;AAAA;ACOA;AACA;;AACA;;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;;AACA","sources":["webpack://atomium-docs/../../node_modules/@ionic/core/dist/collection/components/skeleton-text/skeleton-text.css","webpack://atomium-docs/../../node_modules/@ionic/core/dist/collection/components/skeleton-text/skeleton-text.js"],"sourcesContent":[":host {\n  /**\n   * @prop --background: Background of the skeleton text\n   * @prop --background-rgb: Background of the skeleton text in rgb format\n   *\n   * @prop --border-radius: Border radius of the skeleton text\n   */\n  --background: rgba(var(--background-rgb, var(--ion-text-color-rgb, 0, 0, 0)), 0.065);\n  border-radius: var(--border-radius, inherit);\n  display: block;\n  width: 100%;\n  height: inherit;\n  margin-top: 4px;\n  margin-bottom: 4px;\n  background: var(--background);\n  line-height: 10px;\n  user-select: none;\n  pointer-events: none;\n}\n\nspan {\n  display: inline-block;\n}\n\n:host(.in-media) {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n  height: 100%;\n}\n\n:host(.skeleton-text-animated) {\n  position: relative;\n  background: linear-gradient(to right, rgba(var(--background-rgb, var(--ion-text-color-rgb, 0, 0, 0)), 0.065) 8%, rgba(var(--background-rgb, var(--ion-text-color-rgb, 0, 0, 0)), 0.135) 18%, rgba(var(--background-rgb, var(--ion-text-color-rgb, 0, 0, 0)), 0.065) 33%);\n  background-size: 800px 104px;\n  animation-duration: 1s;\n  animation-fill-mode: forwards;\n  animation-iteration-count: infinite;\n  animation-name: shimmer;\n  animation-timing-function: linear;\n}\n\n/* stylelint-disable property-disallowed-list */\n@keyframes shimmer {\n  0% {\n    background-position: -400px 0;\n  }\n  100% {\n    background-position: 400px 0;\n  }\n}\n/* stylelint-enable property-disallowed-list */","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { Host, h } from '@stencil/core';\nimport { config } from '../../global/config';\nimport { getIonMode } from '../../global/ionic-global';\nimport { hostContext } from '../../utils/theme';\nexport class SkeletonText {\n  constructor() {\n    this.animated = false;\n  }\n  render() {\n    const animated = this.animated && config.getBoolean('animated', true);\n    const inMedia = hostContext('ion-avatar', this.el) || hostContext('ion-thumbnail', this.el);\n    const mode = getIonMode(this);\n    return (h(Host, { class: {\n        [mode]: true,\n        'skeleton-text-animated': animated,\n        'in-media': inMedia,\n      } }, h(\"span\", null, \"\\u00A0\")));\n  }\n  static get is() { return \"ion-skeleton-text\"; }\n  static get encapsulation() { return \"shadow\"; }\n  static get originalStyleUrls() {\n    return {\n      \"$\": [\"skeleton-text.scss\"]\n    };\n  }\n  static get styleUrls() {\n    return {\n      \"$\": [\"skeleton-text.css\"]\n    };\n  }\n  static get properties() {\n    return {\n      \"animated\": {\n        \"type\": \"boolean\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"boolean\",\n          \"resolved\": \"boolean\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"If `true`, the skeleton text will animate.\"\n        },\n        \"attribute\": \"animated\",\n        \"reflect\": false,\n        \"defaultValue\": \"false\"\n      }\n    };\n  }\n  static get elementRef() { return \"el\"; }\n}\n"],"names":[],"sourceRoot":""}