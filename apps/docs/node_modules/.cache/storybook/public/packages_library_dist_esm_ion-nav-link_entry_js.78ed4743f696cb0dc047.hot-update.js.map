{"version":3,"file":"packages_library_dist_esm_ion-nav-link_entry_js.78ed4743f696cb0dc047.hot-update.js","mappings":";;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AChBA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAAA;AAAA","sources":["webpack://atomium-docs/../../node_modules/@ionic/core/dist/collection/components/nav-link/nav-link-utils.js","webpack://atomium-docs/../../node_modules/@ionic/core/dist/collection/components/nav-link/nav-link.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nexport const navLink = (el, routerDirection, component, componentProps, routerAnimation) => {\n  const nav = el.closest('ion-nav');\n  if (nav) {\n    if (routerDirection === 'forward') {\n      if (component !== undefined) {\n        return nav.push(component, componentProps, { skipIfBusy: true, animationBuilder: routerAnimation });\n      }\n    }\n    else if (routerDirection === 'root') {\n      if (component !== undefined) {\n        return nav.setRoot(component, componentProps, { skipIfBusy: true, animationBuilder: routerAnimation });\n      }\n    }\n    else if (routerDirection === 'back') {\n      return nav.pop({ skipIfBusy: true, animationBuilder: routerAnimation });\n    }\n  }\n  return Promise.resolve(false);\n};\n","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { Host, h } from '@stencil/core';\nimport { navLink } from './nav-link-utils';\nexport class NavLink {\n  constructor() {\n    this.onClick = () => {\n      return navLink(this.el, this.routerDirection, this.component, this.componentProps, this.routerAnimation);\n    };\n    this.component = undefined;\n    this.componentProps = undefined;\n    this.routerDirection = 'forward';\n    this.routerAnimation = undefined;\n  }\n  render() {\n    return h(Host, { onClick: this.onClick });\n  }\n  static get is() { return \"ion-nav-link\"; }\n  static get properties() {\n    return {\n      \"component\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"NavComponent\",\n          \"resolved\": \"Function | HTMLElement | ViewController | null | string | undefined\",\n          \"references\": {\n            \"NavComponent\": {\n              \"location\": \"import\",\n              \"path\": \"../nav/nav-interface\"\n            }\n          }\n        },\n        \"required\": false,\n        \"optional\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Component to navigate to. Only used if the `routerDirection` is `\\\"forward\\\"` or `\\\"root\\\"`.\"\n        },\n        \"attribute\": \"component\",\n        \"reflect\": false\n      },\n      \"componentProps\": {\n        \"type\": \"unknown\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"ComponentProps\",\n          \"resolved\": \"undefined | { [key: string]: any; }\",\n          \"references\": {\n            \"ComponentProps\": {\n              \"location\": \"import\",\n              \"path\": \"../../interface\"\n            }\n          }\n        },\n        \"required\": false,\n        \"optional\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Data you want to pass to the component as props. Only used if the `\\\"routerDirection\\\"` is `\\\"forward\\\"` or `\\\"root\\\"`.\"\n        }\n      },\n      \"routerDirection\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"RouterDirection\",\n          \"resolved\": \"\\\"back\\\" | \\\"forward\\\" | \\\"root\\\"\",\n          \"references\": {\n            \"RouterDirection\": {\n              \"location\": \"import\",\n              \"path\": \"../router/utils/interface\"\n            }\n          }\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"The transition direction when navigating to another page.\"\n        },\n        \"attribute\": \"router-direction\",\n        \"reflect\": false,\n        \"defaultValue\": \"'forward'\"\n      },\n      \"routerAnimation\": {\n        \"type\": \"unknown\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"AnimationBuilder\",\n          \"resolved\": \"((baseEl: any, opts?: any) => Animation) | undefined\",\n          \"references\": {\n            \"AnimationBuilder\": {\n              \"location\": \"import\",\n              \"path\": \"../../interface\"\n            }\n          }\n        },\n        \"required\": false,\n        \"optional\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"The transition animation when navigating to another page.\"\n        }\n      }\n    };\n  }\n  static get elementRef() { return \"el\"; }\n}\n"],"names":[],"sourceRoot":""}