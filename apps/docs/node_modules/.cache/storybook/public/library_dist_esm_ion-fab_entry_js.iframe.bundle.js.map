{"version":3,"file":"library_dist_esm_ion-fab_entry_js.iframe.bundle.js","mappings":";;;;;;;;;;;;;;;;;AAAA;ACKA;AACA;;AAMA;AAKA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;AAMA;AACA;;AAEA;AACA;;AAMA;AACA;AACA;AACA;;;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;;AACA","sources":["webpack://atomium-storybook/../../node_modules/@ionic/core/dist/collection/components/fab/fab.css","webpack://atomium-storybook/../../node_modules/@ionic/core/dist/collection/components/fab/fab.js"],"sourcesContent":[":host {\n  position: absolute;\n  z-index: 999;\n}\n\n:host(.fab-horizontal-center) {\n  left: 50%;\n  margin-left: -28px;\n}\n:host-context([dir=rtl]):host(.fab-horizontal-center), :host-context([dir=rtl]).fab-horizontal-center {\n  left: unset;\n  right: unset;\n  right: 50%;\n}\n\n@supports (margin-inline-start: 0) or (-webkit-margin-start: 0) {\n  :host(.fab-horizontal-center) {\n    margin-left: unset;\n    -webkit-margin-start: -28px;\n    margin-inline-start: -28px;\n  }\n}\n\n:host(.fab-horizontal-start) {\n  left: calc(10px + var(--ion-safe-area-left, 0px));\n}\n:host-context([dir=rtl]):host(.fab-horizontal-start), :host-context([dir=rtl]).fab-horizontal-start {\n  left: unset;\n  right: unset;\n  right: calc(10px + var(--ion-safe-area-left, 0px));\n}\n\n:host(.fab-horizontal-end) {\n  right: calc(10px + var(--ion-safe-area-right, 0px));\n}\n:host-context([dir=rtl]):host(.fab-horizontal-end), :host-context([dir=rtl]).fab-horizontal-end {\n  left: unset;\n  right: unset;\n  left: calc(10px + var(--ion-safe-area-right, 0px));\n}\n\n:host(.fab-vertical-top) {\n  top: 10px;\n}\n\n:host(.fab-vertical-top.fab-edge) {\n  top: -28px;\n}\n\n:host(.fab-vertical-bottom) {\n  bottom: 10px;\n}\n\n:host(.fab-vertical-bottom.fab-edge) {\n  bottom: -28px;\n}\n\n:host(.fab-vertical-center) {\n  margin-top: -28px;\n  top: 50%;\n}","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { Host, h } from '@stencil/core';\nimport { getIonMode } from '../../global/ionic-global';\nexport class Fab {\n  constructor() {\n    /**\n     * If `true`, the fab will display on the edge of the header if\n     * `vertical` is `\"top\"`, and on the edge of the footer if\n     * it is `\"bottom\"`. Should be used with a `fixed` slot.\n     */\n    this.edge = false;\n    /**\n     * If `true`, both the `ion-fab-button` and all `ion-fab-list` inside `ion-fab` will become active.\n     * That means `ion-fab-button` will become a `close` icon and `ion-fab-list` will become visible.\n     */\n    this.activated = false;\n  }\n  activatedChanged() {\n    const activated = this.activated;\n    const fab = this.getFab();\n    if (fab) {\n      fab.activated = activated;\n    }\n    Array.from(this.el.querySelectorAll('ion-fab-list')).forEach((list) => {\n      list.activated = activated;\n    });\n  }\n  componentDidLoad() {\n    if (this.activated) {\n      this.activatedChanged();\n    }\n  }\n  /**\n   * Close an active FAB list container.\n   */\n  async close() {\n    this.activated = false;\n  }\n  getFab() {\n    return this.el.querySelector('ion-fab-button');\n  }\n  /**\n   * Opens/Closes the FAB list container.\n   * @internal\n   */\n  async toggle() {\n    const hasList = !!this.el.querySelector('ion-fab-list');\n    if (hasList) {\n      this.activated = !this.activated;\n    }\n  }\n  render() {\n    const { horizontal, vertical, edge } = this;\n    const mode = getIonMode(this);\n    return (h(Host, { class: {\n        [mode]: true,\n        [`fab-horizontal-${horizontal}`]: horizontal !== undefined,\n        [`fab-vertical-${vertical}`]: vertical !== undefined,\n        'fab-edge': edge,\n      } }, h(\"slot\", null)));\n  }\n  static get is() { return \"ion-fab\"; }\n  static get encapsulation() { return \"shadow\"; }\n  static get originalStyleUrls() {\n    return {\n      \"$\": [\"fab.scss\"]\n    };\n  }\n  static get styleUrls() {\n    return {\n      \"$\": [\"fab.css\"]\n    };\n  }\n  static get properties() {\n    return {\n      \"horizontal\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"'start' | 'end' | 'center'\",\n          \"resolved\": \"\\\"center\\\" | \\\"end\\\" | \\\"start\\\" | undefined\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Where to align the fab horizontally in the viewport.\"\n        },\n        \"attribute\": \"horizontal\",\n        \"reflect\": false\n      },\n      \"vertical\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"'top' | 'bottom' | 'center'\",\n          \"resolved\": \"\\\"bottom\\\" | \\\"center\\\" | \\\"top\\\" | undefined\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Where to align the fab vertically in the viewport.\"\n        },\n        \"attribute\": \"vertical\",\n        \"reflect\": false\n      },\n      \"edge\": {\n        \"type\": \"boolean\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"boolean\",\n          \"resolved\": \"boolean\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"If `true`, the fab will display on the edge of the header if\\n`vertical` is `\\\"top\\\"`, and on the edge of the footer if\\nit is `\\\"bottom\\\"`. Should be used with a `fixed` slot.\"\n        },\n        \"attribute\": \"edge\",\n        \"reflect\": false,\n        \"defaultValue\": \"false\"\n      },\n      \"activated\": {\n        \"type\": \"boolean\",\n        \"mutable\": true,\n        \"complexType\": {\n          \"original\": \"boolean\",\n          \"resolved\": \"boolean\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"If `true`, both the `ion-fab-button` and all `ion-fab-list` inside `ion-fab` will become active.\\nThat means `ion-fab-button` will become a `close` icon and `ion-fab-list` will become visible.\"\n        },\n        \"attribute\": \"activated\",\n        \"reflect\": false,\n        \"defaultValue\": \"false\"\n      }\n    };\n  }\n  static get methods() {\n    return {\n      \"close\": {\n        \"complexType\": {\n          \"signature\": \"() => Promise<void>\",\n          \"parameters\": [],\n          \"references\": {\n            \"Promise\": {\n              \"location\": \"global\"\n            }\n          },\n          \"return\": \"Promise<void>\"\n        },\n        \"docs\": {\n          \"text\": \"Close an active FAB list container.\",\n          \"tags\": []\n        }\n      },\n      \"toggle\": {\n        \"complexType\": {\n          \"signature\": \"() => Promise<void>\",\n          \"parameters\": [],\n          \"references\": {\n            \"Promise\": {\n              \"location\": \"global\"\n            }\n          },\n          \"return\": \"Promise<void>\"\n        },\n        \"docs\": {\n          \"text\": \"Opens/Closes the FAB list container.\",\n          \"tags\": [{\n              \"name\": \"internal\",\n              \"text\": undefined\n            }]\n        }\n      }\n    };\n  }\n  static get elementRef() { return \"el\"; }\n  static get watchers() {\n    return [{\n        \"propName\": \"activated\",\n        \"methodName\": \"activatedChanged\"\n      }];\n  }\n}\n"],"names":[],"sourceRoot":""}