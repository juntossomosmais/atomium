"use strict";
self["webpackHotUpdateatomium_storybook"]("library-src-components-select-select-stories",{

/***/ "../library/src/components/select/select.stories.tsx":
/*!***********************************************************!*\
  !*** ../library/src/components/select/select.stories.tsx ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Primary": () => (/* binding */ Primary),
/* harmony export */   "__namedExportsOrder": () => (/* binding */ __namedExportsOrder),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _storybook_addon_actions_decorator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @storybook/addon-actions/decorator */ "../../node_modules/@storybook/addon-actions/dist/decorator.mjs");

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  title: 'Components/Select',
  parameters: {
    actions: {
      handles: ['atoChange', 'atoFocus', 'atoBlur']
    }
  },
  decorators: [_storybook_addon_actions_decorator__WEBPACK_IMPORTED_MODULE_0__.withActions],
  argTypes: {
    labelText: {
      control: 'text'
    },
    interface: {
      control: 'select',
      options: ['popover', 'action-sheet']
    },
    color: {
      control: 'select',
      options: ['primary', 'secondary']
    },
    labelPosition: {
      control: 'select',
      options: ['stacked', 'fixed']
    },
    multiple: {
      control: 'boolean'
    },
    mode: {
      control: 'select',
      options: ['ios', 'md']
    },
    disabled: {
      control: 'boolean'
    }
  }
});
const createSelect = args => {
  return `
<ato-select
  name='select'
  placeholder='Select an option'
  interface=${args.interface}
  color=${args.color}
  mode=${args.mode}
  disabled=${args.disabled}
  multiple=${args.multiple}
  label-text=${args.labelText}
  label-position=${args.labelPosition}
/>

<script>
  document.querySelector('ato-select').options = [
    { value: 'Red', disabled: false },
    { value: 'Green', disabled: false },
    { value: 'Blue', disabled: false },
    { value: 'Disabled example', selected: false, disabled: true },
  ]
</script>
  `;
};
const Primary = {
  render: args => createSelect(args),
  args: {
    interface: 'popover',
    color: 'primary',
    mode: 'md',
    disabled: false,
    multiple: false,
    labelText: 'Select',
    labelPosition: 'stacked'
  }
};
const __namedExportsOrder = ["Primary"];
Primary.parameters = {
  ...Primary.parameters,
  docs: {
    ...Primary.parameters?.docs,
    source: {
      originalSource: "{\n  render: args => createSelect(args),\n  args: {\n    interface: 'popover',\n    color: 'primary',\n    mode: 'md',\n    disabled: false,\n    multiple: false,\n    labelText: 'Select',\n    labelPosition: 'stacked'\n  }\n}",
      ...Primary.parameters?.docs?.source
    }
  }
};

/***/ })

});