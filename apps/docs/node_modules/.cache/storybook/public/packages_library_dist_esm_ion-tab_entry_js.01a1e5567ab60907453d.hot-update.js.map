{"version":3,"file":"packages_library_dist_esm_ion-tab_entry_js.01a1e5567ab60907453d.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;AAAA;ACKA;AACA;;AACA;AACA;AACA;AACA;AACA;;AAEA;AASA;AACA;;;AAIA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AAGA;;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;;AACA","sources":["webpack://atomium-docs/../../node_modules/@ionic/core/dist/collection/components/tab/tab.css","webpack://atomium-docs/../../node_modules/@ionic/core/dist/collection/components/tab/tab.js"],"sourcesContent":[":host(.tab-hidden) {\n  /* stylelint-disable-next-line declaration-no-important */\n  display: none !important;\n}","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { Build, Host, h } from '@stencil/core';\nimport { attachComponent } from '../../utils/framework-delegate';\nexport class Tab {\n  constructor() {\n    this.loaded = false;\n    this.active = false;\n    this.delegate = undefined;\n    this.tab = undefined;\n    this.component = undefined;\n  }\n  async componentWillLoad() {\n    if (Build.isDev) {\n      if (this.component !== undefined && this.el.childElementCount > 0) {\n        console.error('You can not use a lazy-loaded component in a tab and inlined content at the same time.' +\n          `- Remove the component attribute in: <ion-tab component=\"${this.component}\">` +\n          ` or` +\n          `- Remove the embedded content inside the ion-tab: <ion-tab></ion-tab>`);\n      }\n    }\n    if (this.active) {\n      await this.setActive();\n    }\n  }\n  /** Set the active component for the tab */\n  async setActive() {\n    await this.prepareLazyLoaded();\n    this.active = true;\n  }\n  changeActive(isActive) {\n    if (isActive) {\n      this.prepareLazyLoaded();\n    }\n  }\n  prepareLazyLoaded() {\n    if (!this.loaded && this.component != null) {\n      this.loaded = true;\n      try {\n        return attachComponent(this.delegate, this.el, this.component, ['ion-page']);\n      }\n      catch (e) {\n        console.error(e);\n      }\n    }\n    return Promise.resolve(undefined);\n  }\n  render() {\n    const { tab, active, component } = this;\n    return (h(Host, { role: \"tabpanel\", \"aria-hidden\": !active ? 'true' : null, \"aria-labelledby\": `tab-button-${tab}`, class: {\n        'ion-page': component === undefined,\n        'tab-hidden': !active,\n      } }, h(\"slot\", null)));\n  }\n  static get is() { return \"ion-tab\"; }\n  static get encapsulation() { return \"shadow\"; }\n  static get originalStyleUrls() {\n    return {\n      \"$\": [\"tab.scss\"]\n    };\n  }\n  static get styleUrls() {\n    return {\n      \"$\": [\"tab.css\"]\n    };\n  }\n  static get properties() {\n    return {\n      \"active\": {\n        \"type\": \"boolean\",\n        \"mutable\": true,\n        \"complexType\": {\n          \"original\": \"boolean\",\n          \"resolved\": \"boolean\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [{\n              \"name\": \"internal\",\n              \"text\": undefined\n            }],\n          \"text\": \"\"\n        },\n        \"attribute\": \"active\",\n        \"reflect\": false,\n        \"defaultValue\": \"false\"\n      },\n      \"delegate\": {\n        \"type\": \"unknown\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"FrameworkDelegate\",\n          \"resolved\": \"FrameworkDelegate | undefined\",\n          \"references\": {\n            \"FrameworkDelegate\": {\n              \"location\": \"import\",\n              \"path\": \"../../interface\"\n            }\n          }\n        },\n        \"required\": false,\n        \"optional\": true,\n        \"docs\": {\n          \"tags\": [{\n              \"name\": \"internal\",\n              \"text\": undefined\n            }],\n          \"text\": \"\"\n        }\n      },\n      \"tab\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string\",\n          \"references\": {}\n        },\n        \"required\": true,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"A tab id must be provided for each `ion-tab`. It's used internally to reference\\nthe selected tab or by the router to switch between them.\"\n        },\n        \"attribute\": \"tab\",\n        \"reflect\": false\n      },\n      \"component\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"ComponentRef\",\n          \"resolved\": \"Function | HTMLElement | null | string | undefined\",\n          \"references\": {\n            \"ComponentRef\": {\n              \"location\": \"import\",\n              \"path\": \"../../interface\"\n            }\n          }\n        },\n        \"required\": false,\n        \"optional\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"The component to display inside of the tab.\"\n        },\n        \"attribute\": \"component\",\n        \"reflect\": false\n      }\n    };\n  }\n  static get methods() {\n    return {\n      \"setActive\": {\n        \"complexType\": {\n          \"signature\": \"() => Promise<void>\",\n          \"parameters\": [],\n          \"references\": {\n            \"Promise\": {\n              \"location\": \"global\"\n            }\n          },\n          \"return\": \"Promise<void>\"\n        },\n        \"docs\": {\n          \"text\": \"Set the active component for the tab\",\n          \"tags\": []\n        }\n      }\n    };\n  }\n  static get elementRef() { return \"el\"; }\n  static get watchers() {\n    return [{\n        \"propName\": \"active\",\n        \"methodName\": \"changeActive\"\n      }];\n  }\n}\n"],"names":[],"sourceRoot":""}