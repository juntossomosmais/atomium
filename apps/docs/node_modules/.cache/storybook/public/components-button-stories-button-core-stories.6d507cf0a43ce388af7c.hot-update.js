"use strict";
globalThis["webpackHotUpdate_atomium_docs"]("components-button-stories-button-core-stories",{

/***/ "../../packages/core/src/components/button/stories/button.core.stories.tsx":
/*!*********************************************************************************!*\
  !*** ../../packages/core/src/components/button/stories/button.core.stories.tsx ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Clear": () => (/* binding */ Clear),
/* harmony export */   "Default": () => (/* binding */ Default),
/* harmony export */   "Outline": () => (/* binding */ Outline),
/* harmony export */   "Secondary": () => (/* binding */ Secondary),
/* harmony export */   "__namedExportsOrder": () => (/* binding */ __namedExportsOrder),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _button_args__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./button.args */ "../../packages/core/src/components/button/stories/button.args.ts");

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  title: 'Components/Button',
  ..._button_args__WEBPACK_IMPORTED_MODULE_0__.ButtonStoryArgs
});
const createButton = args => {
  return `
<atom-button
  color=${args.color}
  fill=${args.fill}
  shape=${args.shape}
  expand=${args.expand}
  size=${args.size}
  disabled=${args.disabled}
  type=${args.type}
  mode=${args.mode}
>
  ${args.label}
</atom-button>
`;
};
const Default = {
  render: args => createButton(args),
  args: {
    ..._button_args__WEBPACK_IMPORTED_MODULE_0__.ButtonComponentArgs
  }
};
const Secondary = {
  render: args => createButton(args),
  args: {
    ...Default.args,
    color: 'secondary'
  }
};
const Outline = {
  render: args => createButton(args),
  args: {
    ...Default.args,
    fill: 'outline'
  }
};
const Clear = {
  render: args => createButton(args),
  args: {
    ...Default.args,
    fill: 'clear'
  }
};
Default.parameters = {
  ...Default.parameters,
  docs: {
    ...Default.parameters?.docs,
    source: {
      originalSource: "{\n  render: args => createButton(args),\n  args: {\n    ...ButtonComponentArgs\n  }\n}",
      ...Default.parameters?.docs?.source
    }
  }
};
Secondary.parameters = {
  ...Secondary.parameters,
  docs: {
    ...Secondary.parameters?.docs,
    source: {
      originalSource: "{\n  render: args => createButton(args),\n  args: {\n    ...Default.args,\n    color: 'secondary'\n  }\n}",
      ...Secondary.parameters?.docs?.source
    }
  }
};
Outline.parameters = {
  ...Outline.parameters,
  docs: {
    ...Outline.parameters?.docs,
    source: {
      originalSource: "{\n  render: args => createButton(args),\n  args: {\n    ...Default.args,\n    fill: 'outline'\n  }\n}",
      ...Outline.parameters?.docs?.source
    }
  }
};
Clear.parameters = {
  ...Clear.parameters,
  docs: {
    ...Clear.parameters?.docs,
    source: {
      originalSource: "{\n  render: args => createButton(args),\n  args: {\n    ...Default.args,\n    fill: 'clear'\n  }\n}",
      ...Clear.parameters?.docs?.source
    }
  }
};
const __namedExportsOrder = ["Default", "Secondary", "Outline", "Clear"];

/***/ })

});