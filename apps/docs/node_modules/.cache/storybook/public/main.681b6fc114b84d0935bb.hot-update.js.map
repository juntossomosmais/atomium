{"version":3,"file":"main.681b6fc114b84d0935bb.hot-update.js","mappings":";;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;ACvCA;AAEA;AAEA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;ACtDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://atomium-docs/./stories/ lazy ^\\.\\/.*$ include: (","webpack://atomium-docs/./.storybook/DocumentationTemplate.mdx","webpack://atomium-docs/./.storybook/preview.ts","webpack://atomium-docs/../../packages/tokens/stories/ lazy ^\\.\\/.*$ include: ("],"sourcesContent":["var map = {\n\t\"./Introduction.stories.mdx\": [\n\t\t\"./stories/Introduction.stories.mdx\",\n\t\t\"Introduction-stories-mdx\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(() => {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = \"./stories lazy recursive ^\\\\.\\\\/.*$ include: (?:\\\\/stories\\\\/(?%21\\\\.)(?=.)[^/]*?\\\\.stories\\\\.(js%7Cjsx%7Cts%7Ctsx%7Cmdx))$\";\nmodule.exports = webpackAsyncContext;","\nimport React from 'react';\n\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@storybook/addon-docs/mdx-react-shim\";\nimport {Meta, Title, Description, Primary, Controls, Stories} from '@storybook/blocks';\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, {})\n  })) : _createMdxContent();\n  function _createMdxContent() {\n    const _components = Object.assign({\n      h1: \"h1\",\n      h2: \"h2\",\n      p: \"p\",\n      hr: \"hr\"\n    }, _provideComponents(), props.components);\n    return _jsxs(_Fragment, {\n      children: [_jsx(Meta, {\n        isTemplate: true\n      }), \"\\n\", _jsx(Title, {}), \"\\n\", _jsx(Description, {}), \"\\n\", _jsx(_components.h1, {\n        id: \"default-implementation\",\n        children: \"Default implementation\"\n      }), \"\\n\", _jsx(Primary, {}), \"\\n\", _jsx(_components.h2, {\n        id: \"props\",\n        children: \"Props\"\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"The component accepts the following props:\"\n      }), \"\\n\", _jsx(Controls, {}), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsx(_components.h2, {\n        id: \"additional-variations\",\n        children: \"Additional variations\"\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"Listed below are additional variations of the component.\"\n      }), \"\\n\", _jsx(Stories, {})]\n    });\n  }\n}\nexport default MDXContent;\n","import { defineCustomElements } from 'atomium/loader'\n\nimport DocumentationTemplate from './DocumentationTemplate.mdx'\n\nimport 'atomium-tokens/dist/styles.css'\nimport 'atomium/dist/atomium/atomium.css'\n\nimport './preview.css'\n\ndefineCustomElements()\n\nconst customViewports = {\n  small: {\n    name: 'Small',\n    styles: {\n      height: '600px',\n      width: '576px',\n    },\n  },\n  medium: {\n    name: 'Medium',\n    styles: {\n      height: '600px',\n      width: '768px',\n    },\n  },\n  large: {\n    name: 'Large',\n    styles: {\n      height: '600px',\n      width: '992px',\n    },\n  },\n  xlarge: {\n    name: 'Extra Large',\n    styles: {\n      height: '600px',\n      width: '1200px',\n    },\n  },\n}\n\nconst preview = {\n  parameters: {\n    viewport: {\n      viewports: customViewports,\n    },\n    actions: { argTypesRegex: '^ato.*' },\n    docs: {\n      page: DocumentationTemplate,\n    },\n  },\n}\n\nexport default preview\n","var map = {\n\t\"./1_Colors.stories.mdx\": [\n\t\t\"../../packages/tokens/stories/1_Colors.stories.mdx\",\n\t\t\"1_Colors-stories-mdx\"\n\t],\n\t\"./2_Spacings.stories.mdx\": [\n\t\t\"../../packages/tokens/stories/2_Spacings.stories.mdx\",\n\t\t\"2_Spacings-stories-mdx\"\n\t],\n\t\"./3_Typography.stories.mdx\": [\n\t\t\"../../packages/tokens/stories/3_Typography.stories.mdx\",\n\t\t\"3_Typography-stories-mdx\"\n\t],\n\t\"./4_Screens.stories.mdx\": [\n\t\t\"../../packages/tokens/stories/4_Screens.stories.mdx\",\n\t\t\"4_Screens-stories-mdx\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(() => {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = \"../../packages/tokens/stories lazy recursive ^\\\\.\\\\/.*$ include: (?:\\\\/packages\\\\/tokens\\\\/stories(?:\\\\/(?%21\\\\.)(?:(?:(?%21(?:^%7C\\\\/)\\\\.).)*?)\\\\/%7C\\\\/%7C$)(?%21\\\\.)(?=.)[^/]*?\\\\.stories\\\\.(js%7Cjsx%7Cts%7Ctsx%7Cmdx))$\";\nmodule.exports = webpackAsyncContext;"],"names":[],"sourceRoot":""}