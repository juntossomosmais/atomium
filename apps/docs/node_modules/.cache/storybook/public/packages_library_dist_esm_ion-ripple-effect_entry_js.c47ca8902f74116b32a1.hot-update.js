"use strict";
globalThis["webpackHotUpdateatomium_docs"]("packages_library_dist_esm_ion-ripple-effect_entry_js",{

/***/ "../../packages/library/dist/esm/ion-ripple-effect.entry.js":
/*!******************************************************************!*\
  !*** ../../packages/library/dist/esm/ion-ripple-effect.entry.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ion_ripple_effect": () => (/* binding */ RippleEffect)
/* harmony export */ });
/* harmony import */ var _index_67f415ef_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index-67f415ef.js */ "../../packages/library/dist/esm/index-67f415ef.js");
/* harmony import */ var _ionic_global_2f2b712c_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ionic-global-2f2b712c.js */ "../../packages/library/dist/esm/ionic-global-2f2b712c.js");


const rippleEffectCss = ":host{left:0;right:0;top:0;bottom:0;position:absolute;contain:strict;pointer-events:none}:host(.unbounded){contain:layout size style}.ripple-effect{border-radius:50%;position:absolute;background-color:currentColor;color:inherit;contain:strict;opacity:0;animation:225ms rippleAnimation forwards, 75ms fadeInAnimation forwards;will-change:transform, opacity;pointer-events:none}.fade-out{transform:translate(var(--translate-end)) scale(var(--final-scale, 1));animation:150ms fadeOutAnimation forwards}@keyframes rippleAnimation{from{animation-timing-function:cubic-bezier(0.4, 0, 0.2, 1);transform:scale(1)}to{transform:translate(var(--translate-end)) scale(var(--final-scale, 1))}}@keyframes fadeInAnimation{from{animation-timing-function:linear;opacity:0}to{opacity:0.16}}@keyframes fadeOutAnimation{from{animation-timing-function:linear;opacity:0.16}to{opacity:0}}";
const RippleEffect = class {
  constructor(hostRef) {
    (0,_index_67f415ef_js__WEBPACK_IMPORTED_MODULE_0__.r)(this, hostRef);
    this.type = 'bounded';
  }
  async addRipple(x, y) {
    return new Promise(resolve => {
      (0,_index_67f415ef_js__WEBPACK_IMPORTED_MODULE_0__.j)(() => {
        const rect = this.el.getBoundingClientRect();
        const width = rect.width;
        const height = rect.height;
        const hypotenuse = Math.sqrt(width * width + height * height);
        const maxDim = Math.max(height, width);
        const maxRadius = this.unbounded ? maxDim : hypotenuse + PADDING;
        const initialSize = Math.floor(maxDim * INITIAL_ORIGIN_SCALE);
        const finalScale = maxRadius / initialSize;
        let posX = x - rect.left;
        let posY = y - rect.top;
        if (this.unbounded) {
          posX = width * 0.5;
          posY = height * 0.5;
        }
        const styleX = posX - initialSize * 0.5;
        const styleY = posY - initialSize * 0.5;
        const moveX = width * 0.5 - posX;
        const moveY = height * 0.5 - posY;
        (0,_index_67f415ef_js__WEBPACK_IMPORTED_MODULE_0__.w)(() => {
          const div = document.createElement('div');
          div.classList.add('ripple-effect');
          const style = div.style;
          style.top = styleY + 'px';
          style.left = styleX + 'px';
          style.width = style.height = initialSize + 'px';
          style.setProperty('--final-scale', `${finalScale}`);
          style.setProperty('--translate-end', `${moveX}px, ${moveY}px`);
          const container = this.el.shadowRoot || this.el;
          container.appendChild(div);
          setTimeout(() => {
            resolve(() => {
              removeRipple(div);
            });
          }, 225 + 100);
        });
      });
    });
  }
  get unbounded() {
    return this.type === 'unbounded';
  }
  render() {
    const mode = (0,_ionic_global_2f2b712c_js__WEBPACK_IMPORTED_MODULE_1__.g)(this);
    return (0,_index_67f415ef_js__WEBPACK_IMPORTED_MODULE_0__.h)(_index_67f415ef_js__WEBPACK_IMPORTED_MODULE_0__.H, {
      role: "presentation",
      class: {
        [mode]: true,
        unbounded: this.unbounded
      }
    });
  }
  get el() {
    return (0,_index_67f415ef_js__WEBPACK_IMPORTED_MODULE_0__.f)(this);
  }
};
const removeRipple = ripple => {
  ripple.classList.add('fade-out');
  setTimeout(() => {
    ripple.remove();
  }, 200);
};
const PADDING = 10;
const INITIAL_ORIGIN_SCALE = 0.5;
RippleEffect.style = rippleEffectCss;


/***/ })

});
//# sourceMappingURL=packages_library_dist_esm_ion-ripple-effect_entry_js.c47ca8902f74116b32a1.hot-update.js.map