"use strict";
globalThis["webpackHotUpdateatomium_docs"]("packages_library_dist_esm_ato-input_entry_js",{

/***/ "../../packages/library/dist/esm/ato-input.entry.js":
/*!**********************************************************!*\
  !*** ../../packages/library/dist/esm/ato-input.entry.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ato_input": () => (/* reexport safe */ _input_23ab4151_js__WEBPACK_IMPORTED_MODULE_0__.A)
/* harmony export */ });
/* harmony import */ var _input_23ab4151_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./input-23ab4151.js */ "../../packages/library/dist/esm/input-23ab4151.js");
/* harmony import */ var _index_5797d131_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./index-5797d131.js */ "../../packages/library/dist/esm/index-5797d131.js");



/***/ }),

/***/ "../../packages/library/dist/esm/input-23ab4151.js":
/*!*********************************************************!*\
  !*** ../../packages/library/dist/esm/input-23ab4151.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "A": () => (/* binding */ AtoInput)
/* harmony export */ });
/* harmony import */ var _index_5797d131_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index-5797d131.js */ "../../packages/library/dist/esm/index-5797d131.js");

const inputScss = ":host{display:block}";
const AtoInput = class {
  constructor(hostRef) {
    (0,_index_5797d131_js__WEBPACK_IMPORTED_MODULE_0__.r)(this, hostRef);
    this.atoFocus = (0,_index_5797d131_js__WEBPACK_IMPORTED_MODULE_0__.d)(this, "atoFocus", 7);
    this.atoBlur = (0,_index_5797d131_js__WEBPACK_IMPORTED_MODULE_0__.d)(this, "atoBlur", 7);
    this.atoChange = (0,_index_5797d131_js__WEBPACK_IMPORTED_MODULE_0__.d)(this, "atoChange", 7);
    this.handleChange = event => {
      this.atoChange.emit(event.detail.value);
    };
    this.handleBlur = () => {
      this.inputEl.removeEventListener('ionBlur', this.handleBlur);
      this.atoBlur.emit();
    };
    this.handleFocus = () => {
      this.inputEl.removeEventListener('ionFocus', this.handleFocus);
      this.atoFocus.emit();
    };
    this.value = undefined;
    this.type = 'text';
    this.placeholder = undefined;
    this.name = undefined;
    this.minlength = undefined;
    this.maxlength = undefined;
    this.disabled = false;
    this.required = false;
    this.color = 'primary';
    this.mode = 'md';
    this.fill = 'outline';
    this.autofocus = false;
    this.clearInput = false;
    this.pattern = undefined;
    this.readonly = false;
    this.spellcheck = false;
    this.autocapitalize = 'none';
    this.autocomplete = undefined;
    this.accept = undefined;
    this.multiple = false;
    this.clearOnEdit = false;
    this.inputmode = 'none';
    this.labelPlacement = 'floating';
    this.label = undefined;
  }
  componentDidLoad() {
    this.inputEl.addEventListener('ionChange', this.handleChange);
    this.inputEl.addEventListener('ionBlur', this.handleBlur);
    this.inputEl.addEventListener('ionFocus', this.handleFocus);
  }
  disconnectedCallback() {
    this.inputEl.removeEventListener('ionChange', this.handleChange);
    this.inputEl.removeEventListener('ionBlur', this.handleBlur);
    this.inputEl.removeEventListener('ionFocus', this.handleFocus);
  }
  render() {
    return (0,_index_5797d131_js__WEBPACK_IMPORTED_MODULE_0__.h)("ion-input", {
      label: this.label,
      labelPlacement: this.labelPlacement,
      value: this.value,
      type: this.type,
      placeholder: this.placeholder,
      name: this.name,
      minlength: this.minlength,
      maxlength: this.maxlength,
      disabled: this.disabled,
      required: this.required,
      color: this.color,
      mode: this.mode,
      fill: this.fill,
      autofocus: this.autofocus,
      clearInput: this.clearInput,
      pattern: this.pattern,
      readonly: this.readonly,
      spellcheck: this.spellcheck,
      autocapitalize: this.autocapitalize,
      autocomplete: this.autocomplete,
      inputmode: this.inputmode,
      multiple: this.multiple,
      "clear-on-edit": this.clearOnEdit
    });
  }
  get inputEl() {
    return (0,_index_5797d131_js__WEBPACK_IMPORTED_MODULE_0__.e)(this);
  }
};
AtoInput.style = inputScss;


/***/ })

});
//# sourceMappingURL=packages_library_dist_esm_ato-input_entry_js.47eb8fc82b894ec68744.hot-update.js.map