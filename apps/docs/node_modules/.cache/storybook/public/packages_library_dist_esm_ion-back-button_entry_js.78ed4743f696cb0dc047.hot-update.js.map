{"version":3,"file":"packages_library_dist_esm_ion-back-button_entry_js.78ed4743f696cb0dc047.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;ACAA;ACgBA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AAEA;;AAEA;AAEA;;AAGA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AAGA;AACA;;AAEA;;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sources":["webpack://atomium-docs/../../node_modules/@ionic/core/dist/collection/components/back-button/back-button.ios.css","webpack://atomium-docs/../../node_modules/@ionic/core/dist/collection/components/back-button/back-button.md.css","webpack://atomium-docs/../../node_modules/@ionic/core/dist/collection/components/back-button/back-button.js"],"sourcesContent":[":host {\n  /**\n    * @prop --background: Background of the button\n    * @prop --background-focused: Background of the button when focused with the tab key\n    * @prop --background-focused-opacity: Opacity of the button background when focused with the tab key\n    * @prop --background-hover: Background of the button on hover\n    * @prop --background-hover-opacity: Opacity of the background on hover\n    *\n    * @prop --color: Text color of the button\n    * @prop --color-focused: Text color of the button when focused with the tab key\n    * @prop --color-hover: Text color of the button on hover\n    *\n    * @prop --min-width: Minimum width of the button\n    * @prop --min-height: Minimum height of the button\n    *\n    * @prop --transition: Transition of the button\n    *\n    * @prop --border-radius: Border radius of the button\n    *\n    * @prop --ripple-color: Color of the button ripple effect\n    *\n    * @prop --opacity: Opacity of the button\n    *\n    * @prop --margin-top: Top margin of the button\n    * @prop --margin-end: Right margin if direction is left-to-right, and left margin if direction is right-to-left of the button\n    * @prop --margin-bottom: Bottom margin of the button\n    * @prop --margin-start: Left margin if direction is left-to-right, and right margin if direction is right-to-left of the button\n    *\n    * @prop --padding-top: Top padding of the button\n    * @prop --padding-end: Right padding if direction is left-to-right, and left padding if direction is right-to-left of the button\n    * @prop --padding-bottom: Bottom padding of the button\n    * @prop --padding-start: Left padding if direction is left-to-right, and right padding if direction is right-to-left of the button\n    *\n    * @prop --icon-margin-top: Top margin of the button icon\n    * @prop --icon-margin-end: Right margin if direction is left-to-right, and left margin if direction is right-to-left of the button icon\n    * @prop --icon-margin-bottom: Bottom margin of the button icon\n    * @prop --icon-margin-start: Left margin if direction is left-to-right, and right margin if direction is right-to-left of the button icon\n    *\n    * @prop --icon-padding-top: Top padding of the button icon\n    * @prop --icon-padding-end: Right padding if direction is left-to-right, and left padding if direction is right-to-left of the button icon\n    * @prop --icon-padding-bottom: Bottom padding of the button icon\n    * @prop --icon-padding-start: Left padding if direction is left-to-right, and right padding if direction is right-to-left of the button icon\n    *\n    * @prop --icon-font-size: Font size of the button icon\n    * @prop --icon-font-weight: Font weight of the button icon\n    */\n  --background: transparent;\n  --color-focused: currentColor;\n  --color-hover: currentColor;\n  --icon-margin-top: 0;\n  --icon-margin-bottom: 0;\n  --icon-padding-top: 0;\n  --icon-padding-end: 0;\n  --icon-padding-bottom: 0;\n  --icon-padding-start: 0;\n  --margin-top: 0;\n  --margin-end: 0;\n  --margin-bottom: 0;\n  --margin-start: 0;\n  --min-width: auto;\n  --min-height: auto;\n  --padding-top: 0;\n  --padding-end: 0;\n  --padding-bottom: 0;\n  --padding-start: 0;\n  --opacity: 1;\n  --ripple-color: currentColor;\n  --transition: background-color, opacity 100ms linear;\n  display: none;\n  min-width: var(--min-width);\n  min-height: var(--min-height);\n  color: var(--color);\n  font-family: var(--ion-font-family, inherit);\n  text-align: center;\n  text-decoration: none;\n  text-overflow: ellipsis;\n  text-transform: none;\n  white-space: nowrap;\n  user-select: none;\n  font-kerning: none;\n}\n\nion-ripple-effect {\n  color: var(--ripple-color);\n}\n\n:host(.ion-color) .button-native {\n  color: var(--ion-color-base);\n}\n\n:host(.show-back-button) {\n  display: block;\n}\n\n:host(.back-button-disabled) {\n  cursor: default;\n  opacity: 0.5;\n  pointer-events: none;\n}\n\n.button-native {\n  border-radius: var(--border-radius);\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  -webkit-margin-start: var(--margin-start);\n  margin-inline-start: var(--margin-start);\n  -webkit-margin-end: var(--margin-end);\n  margin-inline-end: var(--margin-end);\n  margin-top: var(--margin-top);\n  margin-bottom: var(--margin-bottom);\n  -webkit-padding-start: var(--padding-start);\n  padding-inline-start: var(--padding-start);\n  -webkit-padding-end: var(--padding-end);\n  padding-inline-end: var(--padding-end);\n  padding-top: var(--padding-top);\n  padding-bottom: var(--padding-bottom);\n  font-family: inherit;\n  font-size: inherit;\n  font-style: inherit;\n  font-weight: inherit;\n  letter-spacing: inherit;\n  text-decoration: inherit;\n  text-indent: inherit;\n  text-overflow: inherit;\n  text-transform: inherit;\n  text-align: inherit;\n  white-space: inherit;\n  color: inherit;\n  display: block;\n  position: relative;\n  width: 100%;\n  height: 100%;\n  min-height: inherit;\n  transition: var(--transition);\n  border: 0;\n  outline: none;\n  background: var(--background);\n  line-height: 1;\n  cursor: pointer;\n  opacity: var(--opacity);\n  overflow: hidden;\n  user-select: none;\n  z-index: 0;\n  appearance: none;\n}\n\n.button-inner {\n  display: flex;\n  position: relative;\n  flex-flow: row nowrap;\n  flex-shrink: 0;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  height: 100%;\n  z-index: 1;\n}\n\nion-icon {\n  -webkit-padding-start: var(--icon-padding-start);\n  padding-inline-start: var(--icon-padding-start);\n  -webkit-padding-end: var(--icon-padding-end);\n  padding-inline-end: var(--icon-padding-end);\n  padding-top: var(--icon-padding-top);\n  padding-bottom: var(--icon-padding-bottom);\n  -webkit-margin-start: var(--icon-margin-start);\n  margin-inline-start: var(--icon-margin-start);\n  -webkit-margin-end: var(--icon-margin-end);\n  margin-inline-end: var(--icon-margin-end);\n  margin-top: var(--icon-margin-top);\n  margin-bottom: var(--icon-margin-bottom);\n  display: inherit;\n  font-size: var(--icon-font-size);\n  font-weight: var(--icon-font-weight);\n  pointer-events: none;\n}\n\n:host(.ion-focused) .button-native {\n  color: var(--color-focused);\n}\n:host(.ion-focused) .button-native::after {\n  background: var(--background-focused);\n  opacity: var(--background-focused-opacity);\n}\n\n.button-native::after {\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  position: absolute;\n  content: \"\";\n  opacity: 0;\n}\n\n@media (any-hover: hover) {\n  :host(:hover) .button-native {\n    color: var(--color-hover);\n  }\n  :host(:hover) .button-native::after {\n    background: var(--background-hover);\n    opacity: var(--background-hover-opacity);\n  }\n}\n:host(.ion-color.ion-focused) .button-native {\n  color: var(--ion-color-base);\n}\n\n@media (any-hover: hover) {\n  :host(.ion-color:hover) .button-native {\n    color: var(--ion-color-base);\n  }\n}\n:host(.in-toolbar:not(.in-toolbar-color)) {\n  color: var(--ion-toolbar-color, var(--color));\n}\n\n:host {\n  --background-hover: transparent;\n  --background-hover-opacity: 1;\n  --background-focused: currentColor;\n  --background-focused-opacity: .1;\n  --border-radius: 4px;\n  --color: var(--ion-color-primary, #3880ff);\n  --icon-margin-end: 1px;\n  --icon-margin-start: -4px;\n  --icon-font-size: 1.6em;\n  --min-height: 32px;\n  font-size: 17px;\n}\n\n.button-native {\n  transform: translateZ(0);\n  overflow: visible;\n  z-index: 99;\n}\n\n:host(.ion-activated) .button-native {\n  opacity: 0.4;\n}\n\n@media (any-hover: hover) {\n  :host(:hover) {\n    opacity: 0.6;\n  }\n}\n:host(.ion-color.ion-focused) .button-native::after {\n  background: var(--ion-color-base);\n}",":host {\n  /**\n    * @prop --background: Background of the button\n    * @prop --background-focused: Background of the button when focused with the tab key\n    * @prop --background-focused-opacity: Opacity of the button background when focused with the tab key\n    * @prop --background-hover: Background of the button on hover\n    * @prop --background-hover-opacity: Opacity of the background on hover\n    *\n    * @prop --color: Text color of the button\n    * @prop --color-focused: Text color of the button when focused with the tab key\n    * @prop --color-hover: Text color of the button on hover\n    *\n    * @prop --min-width: Minimum width of the button\n    * @prop --min-height: Minimum height of the button\n    *\n    * @prop --transition: Transition of the button\n    *\n    * @prop --border-radius: Border radius of the button\n    *\n    * @prop --ripple-color: Color of the button ripple effect\n    *\n    * @prop --opacity: Opacity of the button\n    *\n    * @prop --margin-top: Top margin of the button\n    * @prop --margin-end: Right margin if direction is left-to-right, and left margin if direction is right-to-left of the button\n    * @prop --margin-bottom: Bottom margin of the button\n    * @prop --margin-start: Left margin if direction is left-to-right, and right margin if direction is right-to-left of the button\n    *\n    * @prop --padding-top: Top padding of the button\n    * @prop --padding-end: Right padding if direction is left-to-right, and left padding if direction is right-to-left of the button\n    * @prop --padding-bottom: Bottom padding of the button\n    * @prop --padding-start: Left padding if direction is left-to-right, and right padding if direction is right-to-left of the button\n    *\n    * @prop --icon-margin-top: Top margin of the button icon\n    * @prop --icon-margin-end: Right margin if direction is left-to-right, and left margin if direction is right-to-left of the button icon\n    * @prop --icon-margin-bottom: Bottom margin of the button icon\n    * @prop --icon-margin-start: Left margin if direction is left-to-right, and right margin if direction is right-to-left of the button icon\n    *\n    * @prop --icon-padding-top: Top padding of the button icon\n    * @prop --icon-padding-end: Right padding if direction is left-to-right, and left padding if direction is right-to-left of the button icon\n    * @prop --icon-padding-bottom: Bottom padding of the button icon\n    * @prop --icon-padding-start: Left padding if direction is left-to-right, and right padding if direction is right-to-left of the button icon\n    *\n    * @prop --icon-font-size: Font size of the button icon\n    * @prop --icon-font-weight: Font weight of the button icon\n    */\n  --background: transparent;\n  --color-focused: currentColor;\n  --color-hover: currentColor;\n  --icon-margin-top: 0;\n  --icon-margin-bottom: 0;\n  --icon-padding-top: 0;\n  --icon-padding-end: 0;\n  --icon-padding-bottom: 0;\n  --icon-padding-start: 0;\n  --margin-top: 0;\n  --margin-end: 0;\n  --margin-bottom: 0;\n  --margin-start: 0;\n  --min-width: auto;\n  --min-height: auto;\n  --padding-top: 0;\n  --padding-end: 0;\n  --padding-bottom: 0;\n  --padding-start: 0;\n  --opacity: 1;\n  --ripple-color: currentColor;\n  --transition: background-color, opacity 100ms linear;\n  display: none;\n  min-width: var(--min-width);\n  min-height: var(--min-height);\n  color: var(--color);\n  font-family: var(--ion-font-family, inherit);\n  text-align: center;\n  text-decoration: none;\n  text-overflow: ellipsis;\n  text-transform: none;\n  white-space: nowrap;\n  user-select: none;\n  font-kerning: none;\n}\n\nion-ripple-effect {\n  color: var(--ripple-color);\n}\n\n:host(.ion-color) .button-native {\n  color: var(--ion-color-base);\n}\n\n:host(.show-back-button) {\n  display: block;\n}\n\n:host(.back-button-disabled) {\n  cursor: default;\n  opacity: 0.5;\n  pointer-events: none;\n}\n\n.button-native {\n  border-radius: var(--border-radius);\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  -webkit-margin-start: var(--margin-start);\n  margin-inline-start: var(--margin-start);\n  -webkit-margin-end: var(--margin-end);\n  margin-inline-end: var(--margin-end);\n  margin-top: var(--margin-top);\n  margin-bottom: var(--margin-bottom);\n  -webkit-padding-start: var(--padding-start);\n  padding-inline-start: var(--padding-start);\n  -webkit-padding-end: var(--padding-end);\n  padding-inline-end: var(--padding-end);\n  padding-top: var(--padding-top);\n  padding-bottom: var(--padding-bottom);\n  font-family: inherit;\n  font-size: inherit;\n  font-style: inherit;\n  font-weight: inherit;\n  letter-spacing: inherit;\n  text-decoration: inherit;\n  text-indent: inherit;\n  text-overflow: inherit;\n  text-transform: inherit;\n  text-align: inherit;\n  white-space: inherit;\n  color: inherit;\n  display: block;\n  position: relative;\n  width: 100%;\n  height: 100%;\n  min-height: inherit;\n  transition: var(--transition);\n  border: 0;\n  outline: none;\n  background: var(--background);\n  line-height: 1;\n  cursor: pointer;\n  opacity: var(--opacity);\n  overflow: hidden;\n  user-select: none;\n  z-index: 0;\n  appearance: none;\n}\n\n.button-inner {\n  display: flex;\n  position: relative;\n  flex-flow: row nowrap;\n  flex-shrink: 0;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  height: 100%;\n  z-index: 1;\n}\n\nion-icon {\n  -webkit-padding-start: var(--icon-padding-start);\n  padding-inline-start: var(--icon-padding-start);\n  -webkit-padding-end: var(--icon-padding-end);\n  padding-inline-end: var(--icon-padding-end);\n  padding-top: var(--icon-padding-top);\n  padding-bottom: var(--icon-padding-bottom);\n  -webkit-margin-start: var(--icon-margin-start);\n  margin-inline-start: var(--icon-margin-start);\n  -webkit-margin-end: var(--icon-margin-end);\n  margin-inline-end: var(--icon-margin-end);\n  margin-top: var(--icon-margin-top);\n  margin-bottom: var(--icon-margin-bottom);\n  display: inherit;\n  font-size: var(--icon-font-size);\n  font-weight: var(--icon-font-weight);\n  pointer-events: none;\n}\n\n:host(.ion-focused) .button-native {\n  color: var(--color-focused);\n}\n:host(.ion-focused) .button-native::after {\n  background: var(--background-focused);\n  opacity: var(--background-focused-opacity);\n}\n\n.button-native::after {\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  position: absolute;\n  content: \"\";\n  opacity: 0;\n}\n\n@media (any-hover: hover) {\n  :host(:hover) .button-native {\n    color: var(--color-hover);\n  }\n  :host(:hover) .button-native::after {\n    background: var(--background-hover);\n    opacity: var(--background-hover-opacity);\n  }\n}\n:host(.ion-color.ion-focused) .button-native {\n  color: var(--ion-color-base);\n}\n\n@media (any-hover: hover) {\n  :host(.ion-color:hover) .button-native {\n    color: var(--ion-color-base);\n  }\n}\n:host(.in-toolbar:not(.in-toolbar-color)) {\n  color: var(--ion-toolbar-color, var(--color));\n}\n\n:host {\n  --border-radius: 4px;\n  --background-focused: currentColor;\n  --background-focused-opacity: .12;\n  --background-hover: currentColor;\n  --background-hover-opacity: 0.04;\n  --color: currentColor;\n  --icon-margin-end: 0;\n  --icon-margin-start: 0;\n  --icon-font-size: 24px;\n  --icon-font-weight: normal;\n  --min-height: 32px;\n  --min-width: 44px;\n  --padding-start: 12px;\n  --padding-end: 12px;\n  font-size: 14px;\n  font-weight: 500;\n  text-transform: uppercase;\n}\n\n:host(.back-button-has-icon-only) {\n  --border-radius: 50%;\n  min-width: 48px;\n  height: 48px;\n}\n\n.button-native {\n  box-shadow: none;\n}\n\n.button-text {\n  -webkit-padding-start: 4px;\n  padding-inline-start: 4px;\n  -webkit-padding-end: 4px;\n  padding-inline-end: 4px;\n  padding-top: 0;\n  padding-bottom: 0;\n}\n\nion-icon {\n  line-height: 0.67;\n  text-align: start;\n}\n\n@media (any-hover: hover) {\n  :host(.ion-color:hover) .button-native::after {\n    background: var(--ion-color-base);\n  }\n}\n:host(.ion-color.ion-focused) .button-native::after {\n  background: var(--ion-color-base);\n}","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { Host, h } from '@stencil/core';\nimport { arrowBackSharp, chevronBack } from 'ionicons/icons';\nimport { config } from '../../global/config';\nimport { getIonMode } from '../../global/ionic-global';\nimport { inheritAriaAttributes } from '../../utils/helpers';\nimport { createColorClasses, hostContext, openURL } from '../../utils/theme';\n/**\n * @virtualProp {\"ios\" | \"md\"} mode - The mode determines which platform styles to use.\n *\n * @part native - The native HTML button element that wraps all child elements.\n * @part icon - The back button icon (uses ion-icon).\n * @part text - The back button text.\n */\nexport class BackButton {\n  constructor() {\n    this.inheritedAttributes = {};\n    this.onClick = async (ev) => {\n      const nav = this.el.closest('ion-nav');\n      ev.preventDefault();\n      if (nav && (await nav.canGoBack())) {\n        return nav.pop({ animationBuilder: this.routerAnimation, skipIfBusy: true });\n      }\n      return openURL(this.defaultHref, ev, 'back', this.routerAnimation);\n    };\n    this.color = undefined;\n    this.defaultHref = undefined;\n    this.disabled = false;\n    this.icon = undefined;\n    this.text = undefined;\n    this.type = 'button';\n    this.routerAnimation = undefined;\n  }\n  componentWillLoad() {\n    this.inheritedAttributes = inheritAriaAttributes(this.el);\n    if (this.defaultHref === undefined) {\n      this.defaultHref = config.get('backButtonDefaultHref');\n    }\n  }\n  get backButtonIcon() {\n    const icon = this.icon;\n    if (icon != null) {\n      // icon is set on the component or by the config\n      return icon;\n    }\n    if (getIonMode(this) === 'ios') {\n      // default ios back button icon\n      return config.get('backButtonIcon', chevronBack);\n    }\n    // default md back button icon\n    return config.get('backButtonIcon', arrowBackSharp);\n  }\n  get backButtonText() {\n    const defaultBackButtonText = getIonMode(this) === 'ios' ? 'Back' : null;\n    return this.text != null ? this.text : config.get('backButtonText', defaultBackButtonText);\n  }\n  get hasIconOnly() {\n    return this.backButtonIcon && !this.backButtonText;\n  }\n  get rippleType() {\n    // If the button only has an icon we use the unbounded\n    // \"circular\" ripple effect\n    if (this.hasIconOnly) {\n      return 'unbounded';\n    }\n    return 'bounded';\n  }\n  render() {\n    const { color, defaultHref, disabled, type, hasIconOnly, backButtonIcon, backButtonText, icon, inheritedAttributes, } = this;\n    const showBackButton = defaultHref !== undefined;\n    const mode = getIonMode(this);\n    const ariaLabel = inheritedAttributes['aria-label'] || backButtonText || 'back';\n    return (h(Host, { onClick: this.onClick, class: createColorClasses(color, {\n        [mode]: true,\n        button: true,\n        'back-button-disabled': disabled,\n        'back-button-has-icon-only': hasIconOnly,\n        'in-toolbar': hostContext('ion-toolbar', this.el),\n        'in-toolbar-color': hostContext('ion-toolbar[color]', this.el),\n        'ion-activatable': true,\n        'ion-focusable': true,\n        'show-back-button': showBackButton,\n      }) }, h(\"button\", { type: type, disabled: disabled, class: \"button-native\", part: \"native\", \"aria-label\": ariaLabel }, h(\"span\", { class: \"button-inner\" }, backButtonIcon && (h(\"ion-icon\", { part: \"icon\", icon: backButtonIcon, \"aria-hidden\": \"true\", lazy: false, \"flip-rtl\": icon === undefined })), backButtonText && (h(\"span\", { part: \"text\", \"aria-hidden\": \"true\", class: \"button-text\" }, backButtonText))), mode === 'md' && h(\"ion-ripple-effect\", { type: this.rippleType }))));\n  }\n  static get is() { return \"ion-back-button\"; }\n  static get encapsulation() { return \"shadow\"; }\n  static get originalStyleUrls() {\n    return {\n      \"ios\": [\"back-button.ios.scss\"],\n      \"md\": [\"back-button.md.scss\"]\n    };\n  }\n  static get styleUrls() {\n    return {\n      \"ios\": [\"back-button.ios.css\"],\n      \"md\": [\"back-button.md.css\"]\n    };\n  }\n  static get properties() {\n    return {\n      \"color\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"Color\",\n          \"resolved\": \"\\\"danger\\\" | \\\"dark\\\" | \\\"light\\\" | \\\"medium\\\" | \\\"primary\\\" | \\\"secondary\\\" | \\\"success\\\" | \\\"tertiary\\\" | \\\"warning\\\" | string & Record<never, never> | undefined\",\n          \"references\": {\n            \"Color\": {\n              \"location\": \"import\",\n              \"path\": \"../../interface\"\n            }\n          }\n        },\n        \"required\": false,\n        \"optional\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"The color to use from your application's color palette.\\nDefault options are: `\\\"primary\\\"`, `\\\"secondary\\\"`, `\\\"tertiary\\\"`, `\\\"success\\\"`, `\\\"warning\\\"`, `\\\"danger\\\"`, `\\\"light\\\"`, `\\\"medium\\\"`, and `\\\"dark\\\"`.\\nFor more information on colors, see [theming](/docs/theming/basics).\"\n        },\n        \"attribute\": \"color\",\n        \"reflect\": true\n      },\n      \"defaultHref\": {\n        \"type\": \"string\",\n        \"mutable\": true,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string | undefined\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"The url to navigate back to by default when there is no history.\"\n        },\n        \"attribute\": \"default-href\",\n        \"reflect\": false\n      },\n      \"disabled\": {\n        \"type\": \"boolean\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"boolean\",\n          \"resolved\": \"boolean\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"If `true`, the user cannot interact with the button.\"\n        },\n        \"attribute\": \"disabled\",\n        \"reflect\": true,\n        \"defaultValue\": \"false\"\n      },\n      \"icon\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string | null\",\n          \"resolved\": \"null | string | undefined\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"The built-in named SVG icon name or the exact `src` of an SVG file\\nto use for the back button.\"\n        },\n        \"attribute\": \"icon\",\n        \"reflect\": false\n      },\n      \"text\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string | null\",\n          \"resolved\": \"null | string | undefined\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"The text to display in the back button.\"\n        },\n        \"attribute\": \"text\",\n        \"reflect\": false\n      },\n      \"type\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"'submit' | 'reset' | 'button'\",\n          \"resolved\": \"\\\"button\\\" | \\\"reset\\\" | \\\"submit\\\"\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"The type of the button.\"\n        },\n        \"attribute\": \"type\",\n        \"reflect\": false,\n        \"defaultValue\": \"'button'\"\n      },\n      \"routerAnimation\": {\n        \"type\": \"unknown\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"AnimationBuilder | undefined\",\n          \"resolved\": \"((baseEl: any, opts?: any) => Animation) | undefined\",\n          \"references\": {\n            \"AnimationBuilder\": {\n              \"location\": \"import\",\n              \"path\": \"../../interface\"\n            }\n          }\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"When using a router, it specifies the transition animation when navigating to\\nanother page.\"\n        }\n      }\n    };\n  }\n  static get elementRef() { return \"el\"; }\n}\n"],"names":[],"sourceRoot":""}