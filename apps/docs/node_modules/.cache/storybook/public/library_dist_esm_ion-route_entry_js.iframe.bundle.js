"use strict";
(self["webpackChunkatomium_storybook"] = self["webpackChunkatomium_storybook"] || []).push([["library_dist_esm_ion-route_entry_js"],{

/***/ "../library/dist/esm/ion-route.entry.js":
/*!**********************************************!*\
  !*** ../library/dist/esm/ion-route.entry.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ion_route": () => (/* binding */ Route)
/* harmony export */ });
/* harmony import */ var _index_5797d131_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index-5797d131.js */ "../library/dist/esm/index-5797d131.js");

const Route = class {
  constructor(hostRef) {
    (0,_index_5797d131_js__WEBPACK_IMPORTED_MODULE_0__.r)(this, hostRef);
    this.ionRouteDataChanged = (0,_index_5797d131_js__WEBPACK_IMPORTED_MODULE_0__.d)(this, "ionRouteDataChanged", 7);
    this.url = '';
  }
  onUpdate(newValue) {
    this.ionRouteDataChanged.emit(newValue);
  }
  onComponentProps(newValue, oldValue) {
    if (newValue === oldValue) {
      return;
    }
    const keys1 = newValue ? Object.keys(newValue) : [];
    const keys2 = oldValue ? Object.keys(oldValue) : [];
    if (keys1.length !== keys2.length) {
      this.onUpdate(newValue);
      return;
    }
    for (const key of keys1) {
      if (newValue[key] !== oldValue[key]) {
        this.onUpdate(newValue);
        return;
      }
    }
  }
  connectedCallback() {
    this.ionRouteDataChanged.emit();
  }
  static get watchers() {
    return {
      "url": ["onUpdate"],
      "component": ["onUpdate"],
      "componentProps": ["onComponentProps"]
    };
  }
};


/***/ })

}]);
//# sourceMappingURL=library_dist_esm_ion-route_entry_js.iframe.bundle.js.map