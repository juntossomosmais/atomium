{"version":3,"file":"packages_library_dist_esm_md_transition-0ab7f4a6_js.iframe.bundle.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA","sources":["webpack://atomium-docs/../../node_modules/@ionic/core/dist/collection/utils/transition/md.transition.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { createAnimation } from '../animation/animation';\nimport { getIonPageElement } from '../transition';\nexport const mdTransitionAnimation = (_, opts) => {\n  var _a, _b, _c;\n  const OFF_BOTTOM = '40px';\n  const CENTER = '0px';\n  const backDirection = opts.direction === 'back';\n  const enteringEl = opts.enteringEl;\n  const leavingEl = opts.leavingEl;\n  const ionPageElement = getIonPageElement(enteringEl);\n  const enteringToolbarEle = ionPageElement.querySelector('ion-toolbar');\n  const rootTransition = createAnimation();\n  rootTransition.addElement(ionPageElement).fill('both').beforeRemoveClass('ion-page-invisible');\n  // animate the component itself\n  if (backDirection) {\n    rootTransition.duration(((_a = opts.duration) !== null && _a !== void 0 ? _a : 0) || 200).easing('cubic-bezier(0.47,0,0.745,0.715)');\n  }\n  else {\n    rootTransition\n      .duration(((_b = opts.duration) !== null && _b !== void 0 ? _b : 0) || 280)\n      .easing('cubic-bezier(0.36,0.66,0.04,1)')\n      .fromTo('transform', `translateY(${OFF_BOTTOM})`, `translateY(${CENTER})`)\n      .fromTo('opacity', 0.01, 1);\n  }\n  // Animate toolbar if it's there\n  if (enteringToolbarEle) {\n    const enteringToolBar = createAnimation();\n    enteringToolBar.addElement(enteringToolbarEle);\n    rootTransition.addAnimation(enteringToolBar);\n  }\n  // setup leaving view\n  if (leavingEl && backDirection) {\n    // leaving content\n    rootTransition.duration(((_c = opts.duration) !== null && _c !== void 0 ? _c : 0) || 200).easing('cubic-bezier(0.47,0,0.745,0.715)');\n    const leavingPage = createAnimation();\n    leavingPage\n      .addElement(getIonPageElement(leavingEl))\n      .onFinish((currentStep) => {\n      if (currentStep === 1 && leavingPage.elements.length > 0) {\n        leavingPage.elements[0].style.setProperty('display', 'none');\n      }\n    })\n      .fromTo('transform', `translateY(${CENTER})`, `translateY(${OFF_BOTTOM})`)\n      .fromTo('opacity', 1, 0);\n    rootTransition.addAnimation(leavingPage);\n  }\n  return rootTransition;\n};\n"],"names":[],"sourceRoot":""}