"use strict";
globalThis["webpackHotUpdate_atomium_docs_react"]("components-button-stories-button-react-stories",{

/***/ "../../packages/core/src/components/button/stories/button.react.stories.tsx":
/*!**********************************************************************************!*\
  !*** ../../packages/core/src/components/button/stories/button.react.stories.tsx ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Default": () => (/* binding */ Default),
/* harmony export */   "__namedExportsOrder": () => (/* binding */ __namedExportsOrder),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _juntossomosmais_atomium_react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @juntossomosmais/atomium/react */ "../../packages/core/react/index.js");
/* harmony import */ var _button_args__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./button.args */ "../../packages/core/src/components/button/stories/button.args.ts");
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react/jsx-runtime */ "../../node_modules/react/jsx-runtime.js");



/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  title: 'Components/Button',
  component: _juntossomosmais_atomium_react__WEBPACK_IMPORTED_MODULE_0__.AtomButton,
  ..._button_args__WEBPACK_IMPORTED_MODULE_1__.ButtonStoryArgs
});
const createButton = args => {
  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_juntossomosmais_atomium_react__WEBPACK_IMPORTED_MODULE_0__.AtomButton, {
    color: args.color,
    fill: args.fill,
    shape: args.shape,
    expand: args.expand,
    size: args.size,
    disabled: args.disabled,
    type: args.type,
    mode: args.mode,
    children: args.label
  });
};
createButton.displayName = "createButton";
const Default = {
  render: args => createButton(args),
  args: {
    ..._button_args__WEBPACK_IMPORTED_MODULE_1__.ButtonComponentArgs
  }
};
Default.parameters = {
  ...Default.parameters,
  docs: {
    ...Default.parameters?.docs,
    source: {
      originalSource: "{\n  render: args => createButton(args),\n  args: {\n    ...ButtonComponentArgs\n  }\n}",
      ...Default.parameters?.docs?.source
    }
  }
};
const __namedExportsOrder = ["Default"];

/***/ }),

/***/ "../../packages/core/src/components/button/stories/button.args.ts":
/*!************************************************************************!*\
  !*** ../../packages/core/src/components/button/stories/button.args.ts ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ButtonComponentArgs": () => (/* binding */ ButtonComponentArgs),
/* harmony export */   "ButtonStoryArgs": () => (/* binding */ ButtonStoryArgs)
/* harmony export */ });
/* harmony import */ var _storybook_addon_actions_decorator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @storybook/addon-actions/decorator */ "../../node_modules/@storybook/addon-actions/dist/decorator.mjs");

const ButtonStoryArgs = {
  parameters: {
    actions: {
      handles: ['atomClick']
    }
  },
  decorators: [_storybook_addon_actions_decorator__WEBPACK_IMPORTED_MODULE_0__.withActions],
  argTypes: {
    label: {
      control: 'text',
      description: 'The label of the button'
    },
    color: {
      control: 'select',
      options: ['primary', 'secondary'],
      description: "The color to use from your application's color palette."
    },
    fill: {
      control: 'select',
      options: ['solid', 'clear', 'outline'],
      description: 'The fill style to use.'
    },
    shape: {
      control: 'select',
      options: ['none', 'round'],
      description: 'The shape of the button.'
    },
    expand: {
      control: 'select',
      options: ['none', 'block', 'full'],
      description: 'Expands the button to fill its parent container.'
    },
    size: {
      control: 'select',
      options: ['small', 'default', 'large'],
      description: 'The size of the button.'
    },
    disabled: {
      control: 'boolean',
      description: 'If `true`, the user cannot interact with the button.'
    },
    type: {
      control: 'select',
      options: ['submit', 'reset', 'button'],
      description: 'The type of the button.'
    },
    mode: {
      control: 'select',
      options: ['md', 'ios'],
      description: 'The mode determines which platform styles to use.'
    },
    atoClick: {
      action: 'atoClick',
      description: 'Emitted when the button is clicked.'
    }
  }
};
const ButtonComponentArgs = {
  color: 'primary',
  fill: 'solid',
  shape: 'round',
  size: undefined,
  expand: undefined,
  disabled: false,
  type: 'button',
  mode: 'md',
  label: 'Button'
};

/***/ })

});
//# sourceMappingURL=components-button-stories-button-react-stories.4ba6a507337403be20d1.hot-update.js.map