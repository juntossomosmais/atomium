"use strict";
(globalThis["webpackChunk_atomium_docs_react"] = globalThis["webpackChunk_atomium_docs_react"] || []).push([["packages_core_dist_esm_ion-nav-link_entry_js"],{

/***/ "../../packages/core/dist/esm/ion-nav-link.entry.js":
/*!**********************************************************!*\
  !*** ../../packages/core/dist/esm/ion-nav-link.entry.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ion_nav_link": () => (/* binding */ NavLink)
/* harmony export */ });
/* harmony import */ var _index_a869d52d_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index-a869d52d.js */ "../../packages/core/dist/esm/index-a869d52d.js");


/*!
 * (C) Ionic http://ionicframework.com - MIT License
 */
const navLink = (el, routerDirection, component, componentProps, routerAnimation) => {
  const nav = el.closest('ion-nav');
  if (nav) {
    if (routerDirection === 'forward') {
      if (component !== undefined) {
        return nav.push(component, componentProps, {
          skipIfBusy: true,
          animationBuilder: routerAnimation
        });
      }
    } else if (routerDirection === 'root') {
      if (component !== undefined) {
        return nav.setRoot(component, componentProps, {
          skipIfBusy: true,
          animationBuilder: routerAnimation
        });
      }
    } else if (routerDirection === 'back') {
      return nav.pop({
        skipIfBusy: true,
        animationBuilder: routerAnimation
      });
    }
  }
  return Promise.resolve(false);
};
const NavLink = class {
  constructor(hostRef) {
    (0,_index_a869d52d_js__WEBPACK_IMPORTED_MODULE_0__.r)(this, hostRef);
    this.onClick = () => {
      return navLink(this.el, this.routerDirection, this.component, this.componentProps, this.routerAnimation);
    };
    this.component = undefined;
    this.componentProps = undefined;
    this.routerDirection = 'forward';
    this.routerAnimation = undefined;
  }
  render() {
    return (0,_index_a869d52d_js__WEBPACK_IMPORTED_MODULE_0__.h)(_index_a869d52d_js__WEBPACK_IMPORTED_MODULE_0__.H, {
      onClick: this.onClick
    });
  }
  get el() {
    return (0,_index_a869d52d_js__WEBPACK_IMPORTED_MODULE_0__.e)(this);
  }
};


/***/ })

}]);
//# sourceMappingURL=packages_core_dist_esm_ion-nav-link_entry_js.iframe.bundle.js.map