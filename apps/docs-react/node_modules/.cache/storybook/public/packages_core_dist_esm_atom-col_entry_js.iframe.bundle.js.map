{"version":3,"file":"packages_core_dist_esm_atom-col_entry_js.iframe.bundle.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMA;;;;;;;;;;;;;;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA","sources":["webpack://@atomium/docs-react/./src/components/grid/col/col.tsx"],"sourcesContent":["import { Component, Element, h, Host, Prop } from '@stencil/core'\n\n@Component({\n  tag: 'atom-col',\n  shadow: false,\n})\nexport class AtomCol {\n  @Prop() size?: 'auto' | string\n  @Prop() sizeSm?: string\n  @Prop() sizeMd?: string\n  @Prop() sizeLg?: string\n  @Prop() offset?: string\n  @Prop() offsetSm?: string\n  @Prop() offsetMd?: string\n  @Prop() offsetLg?: string\n  @Prop() push?: string\n  @Prop() pull?: string\n\n  @Element() private element!: HTMLElement\n\n  componentDidLoad() {\n    const ionCol = document.createElement('ion-col')\n    Array.from(this.element.attributes).forEach((attr) => {\n      ionCol.setAttribute(attr.name.replace('ato', 'ion'), attr.value)\n    })\n    for (let i = this.element.childNodes.length - 1; i >= 0; i--) {\n      const child = this.element.removeChild(this.element.childNodes[i])\n      ionCol.appendChild(child)\n    }\n    this.element.parentNode.replaceChild(ionCol, this.element)\n  }\n\n  render() {\n    return (\n      <Host\n        size={this.size}\n        sizeSm={this.sizeSm}\n        sizeMd={this.sizeMd}\n        sizeLg={this.sizeLg}\n        offset={this.offset}\n        offsetSm={this.offsetSm}\n        offsetMd={this.offsetMd}\n        offsetLg={this.offsetLg}\n        push={this.push}\n        pull={this.pull}\n      >\n        <slot />\n      </Host>\n    )\n  }\n}\n"],"names":[],"sourceRoot":""}