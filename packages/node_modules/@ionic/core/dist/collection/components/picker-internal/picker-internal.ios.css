:host {
  display: flex;
  position: relative;
  align-items: center;
  justify-content: center;
  width: 100%;
  height: 200px;
  /**
   * Picker columns should display
   * in the order in which developers
   * added them and should ignore
   * LTR vs RTL directions.
   */
  direction: ltr;
  /**
   * This is required otherwise the
   * highlight will appear behind
   * the picker when used inline.
   */
  z-index: 0;
}

:host .picker-before,
:host .picker-after {
  position: absolute;
  width: 100%;
  /**
   * The transform and z-index
   * are needed for WebKit otherwise
   * the fade will appear underneath the picker.
   */
  transform: translateZ(0);
  z-index: 1;
  pointer-events: none;
}

:host .picker-before {
  top: 0;
  height: 83px;
}
@supports (inset-inline-start: 0) {
  :host .picker-before {
    inset-inline-start: 0;
  }
}
@supports not (inset-inline-start: 0) {
  :host .picker-before {
    left: 0;
  }
  :host-context([dir=rtl]) {
    left: unset;
    right: unset;
    right: 0;
  }
}

:host .picker-after {
  top: 116px;
  height: 84px;
}
@supports (inset-inline-start: 0) {
  :host .picker-after {
    inset-inline-start: 0;
  }
}
@supports not (inset-inline-start: 0) {
  :host .picker-after {
    left: 0;
  }
  :host-context([dir=rtl]) {
    left: unset;
    right: unset;
    right: 0;
  }
}

:host .picker-highlight {
  border-radius: 8px;
  left: 0;
  right: 0;
  top: 50%;
  bottom: 0;
  -webkit-margin-start: auto;
  margin-inline-start: auto;
  -webkit-margin-end: auto;
  margin-inline-end: auto;
  margin-top: 0;
  margin-bottom: 0;
  position: absolute;
  width: calc(100% - 16px);
  height: 34px;
  transform: translateY(-50%);
  z-index: -1;
}

:host input {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  width: 100%;
  height: 100%;
  margin: 0;
  padding: 0;
  border: 0;
  outline: 0;
  clip: rect(0 0 0 0);
  opacity: 0;
  overflow: hidden;
  -webkit-appearance: none;
  -moz-appearance: none;
}

:host ::slotted(ion-picker-column-internal:first-of-type) {
  text-align: start;
}

:host ::slotted(ion-picker-column-internal:last-of-type) {
  text-align: end;
}

:host ::slotted(ion-picker-column-internal:only-child) {
  text-align: center;
}

:host .picker-before {
  background: linear-gradient(to bottom, var(--background, var(--ion-background-color, #fff)) 20%, rgba(var(--background-rgb, var(--ion-background-color-rgb, 255, 255, 255)), 0.8) 100%);
}

:host .picker-after {
  background: linear-gradient(to top, var(--background, var(--ion-background-color, #fff)) 20%, rgba(var(--background-rgb, var(--ion-background-color-rgb, 255, 255, 255)), 0.8) 100%);
}

:host .picker-highlight {
  background: var(--ion-color-step-150, #eeeeef);
}