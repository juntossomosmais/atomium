{"file":"status-tap-e83dd448.js","mappings":";;;;;AAAA;AACA;AACA;AAIY,MAAC,cAAc,GAAG,MAAM;AACpC,EAAE,MAAM,GAAG,GAAG,MAAM,CAAC;AACrB,EAAE,GAAG,CAAC,gBAAgB,CAAC,WAAW,EAAE,MAAM;AAC1C,IAAI,QAAQ,CAAC,MAAM;AACnB,MAAM,MAAM,KAAK,GAAG,GAAG,CAAC,UAAU,CAAC;AACnC,MAAM,MAAM,MAAM,GAAG,GAAG,CAAC,WAAW,CAAC;AACrC,MAAM,MAAM,EAAE,GAAG,QAAQ,CAAC,gBAAgB,CAAC,KAAK,GAAG,CAAC,EAAE,MAAM,GAAG,CAAC,CAAC,CAAC;AAClE,MAAM,IAAI,CAAC,EAAE,EAAE;AACf,QAAQ,OAAO;AACf,OAAO;AACP,MAAM,MAAM,SAAS,GAAG,qBAAqB,CAAC,EAAE,CAAC,CAAC;AAClD,MAAM,IAAI,SAAS,EAAE;AACrB,QAAQ,IAAI,OAAO,CAAC,CAAC,OAAO,KAAK,gBAAgB,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM;AAClF,UAAU,SAAS,CAAC,YAAY;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,SAAS,CAAC,KAAK,CAAC,WAAW,CAAC,YAAY,EAAE,QAAQ,CAAC,CAAC;AAChE,YAAY,MAAM,WAAW,CAAC,SAAS,EAAE,GAAG,CAAC,CAAC;AAC9C,YAAY,SAAS,CAAC,KAAK,CAAC,cAAc,CAAC,YAAY,CAAC,CAAC;AACzD,WAAW,CAAC,CAAC;AACb,SAAS,CAAC,CAAC;AACX,OAAO;AACP,KAAK,CAAC,CAAC;AACP,GAAG,CAAC,CAAC;AACL;;;;","names":[],"sources":["../../node_modules/@ionic/core/dist/collection/utils/status-tap.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { readTask, writeTask } from '@stencil/core';\nimport { findClosestIonContent, scrollToTop } from './content';\nimport { componentOnReady } from './helpers';\nexport const startStatusTap = () => {\n  const win = window;\n  win.addEventListener('statusTap', () => {\n    readTask(() => {\n      const width = win.innerWidth;\n      const height = win.innerHeight;\n      const el = document.elementFromPoint(width / 2, height / 2);\n      if (!el) {\n        return;\n      }\n      const contentEl = findClosestIonContent(el);\n      if (contentEl) {\n        new Promise((resolve) => componentOnReady(contentEl, resolve)).then(() => {\n          writeTask(async () => {\n            /**\n             * If scrolling and user taps status bar,\n             * only calling scrollToTop is not enough\n             * as engines like WebKit will jump the\n             * scroll position back down and complete\n             * any in-progress momentum scrolling.\n             */\n            contentEl.style.setProperty('--overflow', 'hidden');\n            await scrollToTop(contentEl, 300);\n            contentEl.style.removeProperty('--overflow');\n          });\n        });\n      }\n    });\n  });\n};\n"],"version":3}