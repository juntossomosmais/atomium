{"version":3,"names":["createSwipeBackGesture","el","canStartHandler","onStartHandler","onMoveHandler","onEndHandler","win","ownerDocument","defaultView","rtl","isRTL","isAtEdge","detail","threshold","startX","innerWidth","getDeltaX","deltaX","getVelocityX","velocityX","canStart","onMove","delta","stepValue","onEnd","width","velocity","z","shouldComplete","missing","missingDistance","realDur","dur","Math","abs","min","clamp","createGesture","gestureName","gesturePriority","onStart"],"sources":["../../node_modules/@ionic/core/dist/collection/utils/gesture/swipe-back.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { clamp } from '../helpers';\nimport { isRTL } from '../rtl';\nimport { createGesture } from './index';\nexport const createSwipeBackGesture = (el, canStartHandler, onStartHandler, onMoveHandler, onEndHandler) => {\n  const win = el.ownerDocument.defaultView;\n  let rtl = isRTL(el);\n  /**\n   * Determine if a gesture is near the edge\n   * of the screen. If true, then the swipe\n   * to go back gesture should proceed.\n   */\n  const isAtEdge = (detail) => {\n    const threshold = 50;\n    const { startX } = detail;\n    if (rtl) {\n      return startX >= win.innerWidth - threshold;\n    }\n    return startX <= threshold;\n  };\n  const getDeltaX = (detail) => {\n    return rtl ? -detail.deltaX : detail.deltaX;\n  };\n  const getVelocityX = (detail) => {\n    return rtl ? -detail.velocityX : detail.velocityX;\n  };\n  const canStart = (detail) => {\n    /**\n     * The user's locale can change mid-session,\n     * so we need to check text direction at\n     * the beginning of every gesture.\n     */\n    rtl = isRTL(el);\n    return isAtEdge(detail) && canStartHandler();\n  };\n  const onMove = (detail) => {\n    // set the transition animation's progress\n    const delta = getDeltaX(detail);\n    const stepValue = delta / win.innerWidth;\n    onMoveHandler(stepValue);\n  };\n  const onEnd = (detail) => {\n    // the swipe back gesture has ended\n    const delta = getDeltaX(detail);\n    const width = win.innerWidth;\n    const stepValue = delta / width;\n    const velocity = getVelocityX(detail);\n    const z = width / 2.0;\n    const shouldComplete = velocity >= 0 && (velocity > 0.2 || delta > z);\n    const missing = shouldComplete ? 1 - stepValue : stepValue;\n    const missingDistance = missing * width;\n    let realDur = 0;\n    if (missingDistance > 5) {\n      const dur = missingDistance / Math.abs(velocity);\n      realDur = Math.min(dur, 540);\n    }\n    onEndHandler(shouldComplete, stepValue <= 0 ? 0.01 : clamp(0, stepValue, 0.9999), realDur);\n  };\n  return createGesture({\n    el,\n    gestureName: 'goback-swipe',\n    gesturePriority: 40,\n    threshold: 10,\n    canStart,\n    onStart: onStartHandler,\n    onMove,\n    onEnd,\n  });\n};\n"],"mappings":";;;GAMY,MAACA,EAAyB,CAACC,EAAIC,EAAiBC,EAAgBC,EAAeC,KACzF,MAAMC,EAAML,EAAGM,cAAcC,YAC7B,IAAIC,EAAMC,EAAMT,GAMhB,MAAMU,EAAYC,IAChB,MAAMC,EAAY,GAClB,MAAMC,OAAEA,GAAWF,EACnB,GAAIH,EAAK,CACP,OAAOK,GAAUR,EAAIS,WAAaF,CACxC,CACI,OAAOC,GAAUD,CAAS,EAE5B,MAAMG,EAAaJ,GACVH,GAAOG,EAAOK,OAASL,EAAOK,OAEvC,MAAMC,EAAgBN,GACbH,GAAOG,EAAOO,UAAYP,EAAOO,UAE1C,MAAMC,EAAYR,IAMhBH,EAAMC,EAAMT,GACZ,OAAOU,EAASC,IAAWV,GAAiB,EAE9C,MAAMmB,EAAUT,IAEd,MAAMU,EAAQN,EAAUJ,GACxB,MAAMW,EAAYD,EAAQhB,EAAIS,WAC9BX,EAAcmB,EAAU,EAE1B,MAAMC,EAASZ,IAEb,MAAMU,EAAQN,EAAUJ,GACxB,MAAMa,EAAQnB,EAAIS,WAClB,MAAMQ,EAAYD,EAAQG,EAC1B,MAAMC,EAAWR,EAAaN,GAC9B,MAAMe,EAAIF,EAAQ,EAClB,MAAMG,EAAiBF,GAAY,IAAMA,EAAW,IAAOJ,EAAQK,GACnE,MAAME,EAAUD,EAAiB,EAAIL,EAAYA,EACjD,MAAMO,EAAkBD,EAAUJ,EAClC,IAAIM,EAAU,EACd,GAAID,EAAkB,EAAG,CACvB,MAAME,EAAMF,EAAkBG,KAAKC,IAAIR,GACvCK,EAAUE,KAAKE,IAAIH,EAAK,IAC9B,CACI3B,EAAauB,EAAgBL,GAAa,EAAI,IAAOa,EAAM,EAAGb,EAAW,OAASQ,EAAQ,EAE5F,OAAOM,EAAc,CACnBpC,KACAqC,YAAa,eACbC,gBAAiB,GACjB1B,UAAW,GACXO,WACAoB,QAASrC,EACTkB,SACAG,SACA,S"}