{"version":3,"file":"button.args.js","sourceRoot":"","sources":["../../../../../../../src/components/button/stories/button.args.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,WAAW,EAAE,MAAM,oCAAoC,CAAA;AAEhE,MAAM,CAAC,MAAM,eAAe,GAAG;EAC7B,UAAU,EAAE;IACV,OAAO,EAAE;MACP,OAAO,EAAE,CAAC,WAAW,CAAC;KACvB;GACF;EACD,UAAU,EAAE,CAAC,WAAW,CAAC;EACzB,QAAQ,EAAE;IACR,KAAK,EAAE;MACL,OAAO,EAAE,MAAM;MACf,WAAW,EAAE,yBAAyB;KACvC;IACD,KAAK,EAAE;MACL,OAAO,EAAE,QAAQ;MACjB,OAAO,EAAE,CAAC,SAAS,EAAE,WAAW,CAAC;MACjC,WAAW,EAAE,yDAAyD;KACvE;IACD,IAAI,EAAE;MACJ,OAAO,EAAE,QAAQ;MACjB,OAAO,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,SAAS,CAAC;MACtC,WAAW,EAAE,wBAAwB;KACtC;IACD,KAAK,EAAE;MACL,OAAO,EAAE,QAAQ;MACjB,OAAO,EAAE,CAAC,MAAM,EAAE,OAAO,CAAC;MAC1B,WAAW,EAAE,0BAA0B;KACxC;IACD,MAAM,EAAE;MACN,OAAO,EAAE,QAAQ;MACjB,OAAO,EAAE,CAAC,MAAM,EAAE,OAAO,EAAE,MAAM,CAAC;MAClC,WAAW,EAAE,kDAAkD;KAChE;IACD,IAAI,EAAE;MACJ,OAAO,EAAE,QAAQ;MACjB,OAAO,EAAE,CAAC,OAAO,EAAE,SAAS,EAAE,OAAO,CAAC;MACtC,WAAW,EAAE,yBAAyB;KACvC;IACD,QAAQ,EAAE;MACR,OAAO,EAAE,SAAS;MAClB,WAAW,EAAE,sDAAsD;KACpE;IACD,IAAI,EAAE;MACJ,OAAO,EAAE,QAAQ;MACjB,OAAO,EAAE,CAAC,QAAQ,EAAE,OAAO,EAAE,QAAQ,CAAC;MACtC,WAAW,EAAE,yBAAyB;KACvC;IACD,IAAI,EAAE;MACJ,OAAO,EAAE,QAAQ;MACjB,OAAO,EAAE,CAAC,IAAI,EAAE,KAAK,CAAC;MACtB,WAAW,EAAE,mDAAmD;KACjE;IACD,QAAQ,EAAE;MACR,MAAM,EAAE,UAAU;MAClB,WAAW,EAAE,qCAAqC;KACnD;GACF;CACF,CAAA;AAED,MAAM,CAAC,MAAM,mBAAmB,GAAG;EACjC,KAAK,EAAE,SAAS;EAChB,IAAI,EAAE,OAAO;EACb,KAAK,EAAE,OAAO;EACd,IAAI,EAAE,SAAS;EACf,MAAM,EAAE,SAAS;EACjB,QAAQ,EAAE,KAAK;EACf,IAAI,EAAE,QAAQ;EACd,IAAI,EAAE,IAAI;EACV,KAAK,EAAE,QAAQ;CAChB,CAAA","sourcesContent":["import { withActions } from '@storybook/addon-actions/decorator'\n\nexport const ButtonStoryArgs = {\n  parameters: {\n    actions: {\n      handles: ['atomClick'],\n    },\n  },\n  decorators: [withActions],\n  argTypes: {\n    label: {\n      control: 'text',\n      description: 'The label of the button',\n    },\n    color: {\n      control: 'select',\n      options: ['primary', 'secondary'],\n      description: \"The color to use from your application's color palette.\",\n    },\n    fill: {\n      control: 'select',\n      options: ['solid', 'clear', 'outline'],\n      description: 'The fill style to use.',\n    },\n    shape: {\n      control: 'select',\n      options: ['none', 'round'],\n      description: 'The shape of the button.',\n    },\n    expand: {\n      control: 'select',\n      options: ['none', 'block', 'full'],\n      description: 'Expands the button to fill its parent container.',\n    },\n    size: {\n      control: 'select',\n      options: ['small', 'default', 'large'],\n      description: 'The size of the button.',\n    },\n    disabled: {\n      control: 'boolean',\n      description: 'If `true`, the user cannot interact with the button.',\n    },\n    type: {\n      control: 'select',\n      options: ['submit', 'reset', 'button'],\n      description: 'The type of the button.',\n    },\n    mode: {\n      control: 'select',\n      options: ['md', 'ios'],\n      description: 'The mode determines which platform styles to use.',\n    },\n    atoClick: {\n      action: 'atoClick',\n      description: 'Emitted when the button is clicked.',\n    },\n  },\n}\n\nexport const ButtonComponentArgs = {\n  color: 'primary',\n  fill: 'solid',\n  shape: 'round',\n  size: undefined,\n  expand: undefined,\n  disabled: false,\n  type: 'button',\n  mode: 'md',\n  label: 'Button',\n}\n"]}