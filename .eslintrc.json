{
  "env": {
    "node": true
  },
  "root": true,
  "ignorePatterns": ["**/*"],
  "extends": [
    "plugin:import/errors",
    "plugin:import/warnings",
    "plugin:import/typescript",
    "plugin:@typescript-eslint/recommended",
    "eslint:recommended",
    "prettier"
  ],
  "plugins": [
    "@nrwl/nx",
    "prettier",
    "jest",
    "import",
    "@typescript-eslint",
    "sonarjs"
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaFeatures": {
      "jsx": true
    }
  },
  "rules": {
    "prettier/prettier": "error",
    "prefer-const": "error",
    "semi": ["error", "never"],
    "@typescript-eslint/no-unused-vars": "error",
    "@typescript-eslint/no-explicit-any": "error",
    "import/order": [
      "error",
      {
        "groups": [
          "builtin",
          "external",
          "internal",
          "parent",
          "sibling",
          "index"
        ],
        "newlines-between": "always",
        "alphabetize": { "order": "asc", "caseInsensitive": true },
        "pathGroups": [
          {
            "group": "external",
            "pattern": "react",
            "position": "before"
          },
          {
            "group": "internal",
            "pattern": "~/**"
          }
        ],
        "pathGroupsExcludedImportTypes": ["react"]
      }
    ]
  },
  "settings": {
    "import/parsers": {
      "@typescript-eslint/parser": [".ts", ".tsx"]
    },
    "import/resolver": {
      "typescript": {
        "babel-plugin-root-import": [
          {
            "rootPathSuffix": "./src",
            "rootPathPrefix": "~/"
          }
        ]
      }
    }
  },
  "overrides": [
    {
      "files": ["*.ts", "*.tsx"],
      "extends": ["plugin:@nrwl/nx/typescript"],
      "rules": {}
    },
    {
      "files": ["*.js", "*.jsx"],
      "extends": ["plugin:@nrwl/nx/javascript"],
      "rules": {}
    },
    {
      "files": "*.json",
      "parser": "jsonc-eslint-parser",
      "rules": {}
    },
    {
      "files": ["*.ts", "*.tsx", "*.js", "*.jsx"],
      "rules": {
        "@nrwl/nx/enforce-module-boundaries": [
          "error",
          {
            "allowCircularSelfDependency": true,
            "allow": ["@components/**"]
          }
        ]
      }
    }
  ]
}
