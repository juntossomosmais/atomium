name: Release, Publish, and Deploy Packages

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: write
  packages: write
  pull-requests: write
  id-token: write
  actions: read

jobs:
  release-and-publish:
    runs-on: ubuntu-latest
    steps:
      - uses: google-github-actions/release-please-action@v3
        with:
          release-type: node
          command: manifest
          monorepo-tags: true
          token: ${{ secrets.GITHUB_TOKEN }}
        id: release

      - name: Checkout Repository
        if: ${{ steps.release.outputs.releases_created }}
        uses: actions/checkout@v3
        with:
          ref: main

      - name: Setup Node
        if: ${{ steps.release.outputs.releases_created }}
        uses: actions/setup-node@v3
        with:
          node-version: 18
          registry-url: 'https://npm.pkg.github.com'
          scope: '@juntossomosmais'

      - name: Cache node modules
        if: ${{ steps.release.outputs.releases_created }}
        id: cache-npm
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Authenticate and Install Dependencies
        if: ${{ steps.release.outputs.releases_created }}
        run: |
          echo "@juntossomosmais:registry=https://npm.pkg.github.com" >> .npmrc
          echo "//npm.pkg.github.com/:_authToken=${{ secrets.GH_ACTIONS }}" >> .npmrc
          npm ci --legacy-peer-deps

      - name: Extract SEMVER for Core and Tokens
        if: ${{ steps.release.outputs.releases_created }}
        run: |
          echo "CORE_VERSION=$(jq -r .version packages/core/package.json)" >> $GITHUB_ENV
          echo "TOKENS_VERSION=$(jq -r .version packages/tokens/package.json)" >> $GITHUB_ENV

      - name: Build and Publish Core
        if: ${{ steps.release.outputs['packages/core--release_created'] }}
        run: npx nx run @juntossomosmais/atomium:publish-library
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Publish Tokens
        if: ${{ steps.release.outputs['packages/tokens--release_created'] }}
        run: npx nx run @juntossomosmais/atomium-tokens:publish-library
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Configure AWS credentials
        if: ${{ steps.release.outputs.releases_created }}
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: us-east-1

      - name: Deploy Core Package to S3
        if: ${{ steps.release.outputs['packages/core--release_created'] }}
        run: |
          aws s3 sync packages/core/dist ${{ secrets.AWS_S3_BUCKET }}/core/$CORE_VERSION
          aws s3 sync packages/core/loader ${{ secrets.AWS_S3_BUCKET }}/core/$CORE_VERSION

      - name: Deploy Tokens Package to S3
        if: ${{ steps.release.outputs['packages/tokens--release_created'] }}
        run: |
          aws s3 cp packages/tokens/dist/tokens.css s3://atomium/token/$TOKENS_VERSION/tokens.css
