name: Publish on GitHub Pages

on:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  ghpages:
    concurrency: ghpages-${{ github.ref }}
    runs-on: ubuntu-latest
    if: ${{ !contains(github.event.head_commit.message, 'chore:') }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18
          registry-url: 'https://npm.pkg.github.com'
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Create .npmrc
        run: |
          echo "@juntossomosmais:registry=https://npm.pkg.github.com" >> .npmrc
          echo "//npm.pkg.github.com/:_authToken=${{ secrets.GITHUB_TOKEN }}" >> .npmrc

      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: List the state of node modules
        if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
        continue-on-error: true
        run: npm list

      - name: Install dependencies
        run: npm ci --legacy-peer-deps

      - name: Build Libs ðŸ“¦
        run: npm run build
        continue-on-error: false
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Docs ðŸ“š
        run: npm run docs:build
        continue-on-error: false
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish Storybook ðŸš€
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: apps/docs/storybook-static
          clean-exclude: pr-preview/
          force: false
