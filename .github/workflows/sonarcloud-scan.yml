name: SonarCloud Scan

on:
  push:
    branches:
      - main
    paths:
      - '**.ts'
      - '**.tsx'
      - '**.js'
      - '**.scss'
      - '**.mdx'
      - '**.scss'
      - '**.properties'
      - '**.json'

  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    concurrency: ghpages-${{ github.ref }}
    runs-on: ubuntu-latest
    if: ${{ !contains(github.event.head_commit.message, 'chore:') }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18
          registry-url: 'https://npm.pkg.github.com'
          token: ${{ secrets.GH_ACTIONS }}

      - name: Create .npmrc
        run: |
          echo "@juntossomosmais:registry=https://npm.pkg.github.com" >> .npmrc
          echo "//npm.pkg.github.com/:_authToken=${{ secrets.GH_ACTIONS }}" >> .npmrc

      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: List the state of node modules
        if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
        continue-on-error: true
        run: npm list

      - name: Install dependencies and build libs ðŸ”§
        run: npm ci --legacy-peer-deps
        continue-on-error: false

      - name: Define test script to run
        id: define-script
        run: |
          if [[ "${{ github.event_name }}" == 'push' ]]; then
            echo "testScriptToRun=test:ci-merge" >> $GITHUB_OUTPUT
            echo "We gonna run test:ci-merge to you"
          elif [[ "${{ github.event_name }}" == 'pull_request' ]]; then
            echo "testScriptToRun=test:ci" >> $GITHUB_OUTPUT
            echo "We gonna run test:ci to you"
          fi

      - name: Run Tests ðŸ§ª
        run: npm run ${{ steps.define-script.outputs.testScriptToRun }}
        continue-on-error: false

      - name: Check coverage directory - Core
        run: |
          chmod +x ./.github/workflows/check-coverage.sh
          ./.github/workflows/check-coverage.sh core

      - name: Check coverage directory - Tokens
        run: |
          chmod +x ./.github/workflows/check-coverage.sh
          ./.github/workflows/check-coverage.sh tokens

      - name: SonarCloud Scan - Core ðŸš¨
        if: env.COVERAGE_CORE == 'true'
        uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.DEPLOY_GHPAGES }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          projectBaseDir: packages/core/

      - name: SonarCloud Scan - Tokens ðŸš¨
        if: env.COVERAGE_TOKENS == 'true'
        uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.DEPLOY_GHPAGES }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          projectBaseDir: packages/tokens/
