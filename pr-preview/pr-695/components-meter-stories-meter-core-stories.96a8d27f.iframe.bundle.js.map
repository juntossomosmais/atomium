{"version":3,"file":"components-meter-stories-meter-core-stories.96a8d27f.iframe.bundle.js","mappings":";AAYA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAIA","sources":["webpack://@atomium/docs/../../packages/core/src/components/meter/stories/meter.core.stories.tsx"],"sourcesContent":["import { Meta, StoryObj } from '@storybook/web-components'\nimport { html } from 'lit'\n\nimport { MeterStoryArgs } from './meter.args'\n\nexport default {\n  title: 'Components/Meter',\n  ...MeterStoryArgs,\n} as Meta\n\nconst createMeter = (args) => {\n  return html`<atom-meter\n    .type=${args.type}\n    .size=${args.size}\n    .title=${args.title}\n    .centerTitle=${args.centerTitle}\n    .min=${args.min}\n    .max=${args.max}\n    .actual=${args.actual}\n  >\n    <div>${args.content || `${args.actual} of ${args.max}`}</div>\n  </atom-meter>`\n}\n\nexport const Neutral: StoryObj = {\n  render: (args) => createMeter(args),\n  args: {\n    title: 'Meter',\n    type: 'neutral',\n    centerTitle: false,\n    size: 'large',\n    min: 1,\n    max: 6,\n    actual: 4,\n    content: '',\n  },\n}\n\nexport const Success: StoryObj = {\n  render: (args) => createMeter(args),\n  args: {\n    ...Neutral.args,\n    type: 'success',\n  },\n}\n\nexport const Warning: StoryObj = {\n  render: (args) => createMeter(args),\n  args: {\n    ...Neutral.args,\n    type: 'warning',\n  },\n}\n\nexport const Danger: StoryObj = {\n  render: (args) => createMeter(args),\n  args: {\n    ...Neutral.args,\n    type: 'danger',\n  },\n}\n\nexport const Small: StoryObj = {\n  render: (args) => createMeter(args),\n  args: {\n    ...Neutral.args,\n    title: 'Small Meter',\n    size: 'small',\n  },\n}\n"],"names":[],"sourceRoot":""}