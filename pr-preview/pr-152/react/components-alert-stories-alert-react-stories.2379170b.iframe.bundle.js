"use strict";(globalThis.webpackChunk_atomium_docs_react=globalThis.webpackChunk_atomium_docs_react||[]).push([[3687],{"../../packages/core/src/components/alert/stories/alert.react.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Danger:()=>Danger,Default:()=>Default,Info:()=>Info,Success:()=>Success,Warning:()=>Warning,__namedExportsOrder:()=>__namedExportsOrder,default:()=>alert_react_stories});__webpack_require__("../../node_modules/react/index.js");var dist=__webpack_require__("../../packages/core/react/dist/index.js"),decorator=__webpack_require__("../../node_modules/@storybook/addon-actions/dist/decorator.mjs"),table=__webpack_require__("../../utils/storybook/enums/table.ts");const AlertStoryArgs={decorators:[decorator.R],parameters:{actions:{handles:["atomClose","atomAction"]},docs:{description:{component:"Alerts are used to provide feedback to the user about the status of a task or process. Alerts can be used to notify the user about information or errors, success or warnings, or to confirm an action."}}},argTypes:{messageTitle:{control:"text",description:"The title of the alert.",table:{category:table.W.PROPERTIES}},messageText:{control:"text",description:"The text message of the alert.",table:{category:table.W.PROPERTIES}},actionText:{control:"text",description:"The text of the action button.",table:{category:table.W.PROPERTIES}},color:{control:"select",description:"The color to use from your application palette.",options:["info","success","warning","danger","neutral"],defaultValue:{summary:"neutral"},table:{category:table.W.PROPERTIES}},icon:{control:"text",description:"The name of the icon to use.",table:{category:table.W.PROPERTIES}},close:{control:"boolean",description:"If `true`, the alert can be closed.",defaultValue:{summary:!1},table:{category:table.W.PROPERTIES}},atomAction:{description:"Event emitted when the action button is clicked.",table:{category:table.W.EVENTS}},atomClose:{description:"Event emitted when the alert is closed.",table:{category:table.W.EVENTS}}}},AlertComponentArgs={color:"neutral",close:!0,messageTitle:"Title example of alert",messageText:"Nice message example",actionText:"Action example"};var jsx_runtime=__webpack_require__("../../node_modules/react/jsx-runtime.js");const alert_react_stories={title:"Components/Alert",...AlertStoryArgs},createAlert=args=>(0,jsx_runtime.jsx)("div",{children:(0,jsx_runtime.jsx)(dist.eI,{"message-title":args.messageTitle,"message-text":args.messageText,"action-text":args.actionText,icon:args.icon,color:args.color,close:args.close})});createAlert.displayName="createAlert";const Default={render:args=>createAlert(args),args:{...AlertComponentArgs}},Info={render:args=>createAlert(args),args:{...AlertComponentArgs,color:"info",icon:"people"}},Success={render:args=>createAlert(args),args:{...AlertComponentArgs,color:"success",icon:"heart"}},Warning={render:args=>createAlert(args),args:{...AlertComponentArgs,color:"warning",icon:"warning"}},Danger={render:args=>createAlert(args),args:{...AlertComponentArgs,color:"danger",icon:"people"}};Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{\n  render: args => createAlert(args),\n  args: {\n    ...AlertComponentArgs\n  }\n}",...Default.parameters?.docs?.source}}},Info.parameters={...Info.parameters,docs:{...Info.parameters?.docs,source:{originalSource:"{\n  render: args => createAlert(args),\n  args: {\n    ...AlertComponentArgs,\n    color: 'info',\n    icon: 'people'\n  }\n}",...Info.parameters?.docs?.source}}},Success.parameters={...Success.parameters,docs:{...Success.parameters?.docs,source:{originalSource:"{\n  render: args => createAlert(args),\n  args: {\n    ...AlertComponentArgs,\n    color: 'success',\n    icon: 'heart'\n  }\n}",...Success.parameters?.docs?.source}}},Warning.parameters={...Warning.parameters,docs:{...Warning.parameters?.docs,source:{originalSource:"{\n  render: args => createAlert(args),\n  args: {\n    ...AlertComponentArgs,\n    color: 'warning',\n    icon: 'warning'\n  }\n}",...Warning.parameters?.docs?.source}}},Danger.parameters={...Danger.parameters,docs:{...Danger.parameters?.docs,source:{originalSource:"{\n  render: args => createAlert(args),\n  args: {\n    ...AlertComponentArgs,\n    color: 'danger',\n    icon: 'people'\n  }\n}",...Danger.parameters?.docs?.source}}};const __namedExportsOrder=["Default","Info","Success","Warning","Danger"]}}]);