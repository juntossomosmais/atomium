"use strict";(globalThis.webpackChunk_atomium_docs=globalThis.webpackChunk_atomium_docs||[]).push([[6938],{"../../node_modules/@storybook/addon-actions/dist/decorator.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{R:()=>withActions});var chunk_OPEUWD42=__webpack_require__("../../node_modules/@storybook/addon-actions/dist/chunk-OPEUWD42.mjs"),actions=(...args)=>{let options=chunk_OPEUWD42.vc,names=args;1===names.length&&Array.isArray(names[0])&&([names]=names),1!==names.length&&"string"!=typeof names[names.length-1]&&(options={...chunk_OPEUWD42.vc,...names.pop()});let namesObject=names[0];(1!==names.length||"string"==typeof namesObject)&&(namesObject={},names.forEach((name=>{namesObject[name]=name})));let actionsObject={};return Object.keys(namesObject).forEach((name=>{actionsObject[name]=(0,chunk_OPEUWD42.aD)(namesObject[name],options)})),actionsObject},chunk_VWCVBQ22=__webpack_require__("../../node_modules/@storybook/addon-actions/dist/chunk-VWCVBQ22.mjs"),dist=__webpack_require__("../../node_modules/@storybook/global/dist/index.mjs"),external_STORYBOOK_MODULE_PREVIEW_API_=__webpack_require__("@storybook/preview-api"),{document:decorator_document,Element}=dist.global,delegateEventSplitter=/^(\S+)\s*(.*)$/,matchesMethod=null!=Element&&!Element.prototype.matches?"msMatchesSelector":"matches",hasMatchInAncestry=(element,selector)=>{if(element[matchesMethod](selector))return!0;let parent=element.parentElement;return!!parent&&hasMatchInAncestry(parent,selector)},applyEventHandlers=(actionsFn,...handles)=>{let root=decorator_document&&decorator_document.getElementById("storybook-root");(0,external_STORYBOOK_MODULE_PREVIEW_API_.useEffect)((()=>{if(null!=root){let handlers=((actionsFn,...handles)=>{let actionsObject=actionsFn(...handles);return Object.entries(actionsObject).map((([key,action])=>{let[_,eventName,selector]=key.match(delegateEventSplitter)||[];return{eventName,handler:e=>{(!selector||hasMatchInAncestry(e.target,selector))&&action(e)}}}))})(actionsFn,...handles);return handlers.forEach((({eventName,handler})=>root.addEventListener(eventName,handler))),()=>handlers.forEach((({eventName,handler})=>root.removeEventListener(eventName,handler)))}}),[root,actionsFn,handles])},withActions=(0,external_STORYBOOK_MODULE_PREVIEW_API_.makeDecorator)({name:"withActions",parameterName:chunk_VWCVBQ22.Sz,skipIfNoParametersOrOptions:!0,wrapper:(getStory,context,{parameters})=>(parameters?.handles&&applyEventHandlers(actions,...parameters.handles),getStory(context))})},"../../packages/core/src/components/alert/stories/alert.core.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Danger:()=>Danger,Default:()=>Default,Info:()=>Info,Success:()=>Success,Warning:()=>Warning,__namedExportsOrder:()=>__namedExportsOrder,default:()=>alert_core_stories});var lit=__webpack_require__("../../node_modules/lit/index.js"),decorator=__webpack_require__("../../node_modules/@storybook/addon-actions/dist/decorator.mjs"),table=__webpack_require__("../../utils/storybook/enums/table.ts");const AlertStoryArgs={decorators:[decorator.R],parameters:{actions:{handles:["atomClose"]},docs:{description:{component:"Alerts are used to provide feedback to the user about the status of a task or process. Alerts can be used to notify the user about information or errors, success or warnings, or to confirm an action. <br> <br> You could pass a slot named `actions` to add buttons to the alert."}}},argTypes:{messageTitle:{control:"text",description:"The title of the alert.",table:{category:table.W.PROPERTIES}},messageText:{control:"text",description:"The text message of the alert.",table:{category:table.W.PROPERTIES}},color:{control:"select",description:"The color to use from your application palette.",options:["info","success","warning","danger","neutral"],defaultValue:{summary:"neutral"},table:{category:table.W.PROPERTIES}},icon:{control:"text",description:"The name of the icon to use.",table:{category:table.W.PROPERTIES}},close:{control:"boolean",description:"If `true`, the alert can be closed.",defaultValue:{summary:!1},table:{category:table.W.PROPERTIES}},actions:{description:"Slot name to pass in action buttons.",table:{category:table.W.SLOTS}},onClose:{description:"Event emitted when the alert is closed.",table:{category:table.W.EVENTS}}}},AlertComponentArgs={color:"neutral",close:!0,messageTitle:"Title example of alert",messageText:"Nice message example"},alert_core_stories={title:"Components/Alert",...AlertStoryArgs},createAlert=args=>lit.dy`
    <atom-alert
      message-title=${args.messageTitle}
      message-text=${args.messageText}
      icon=${args.icon}
      color=${args.color}
      close=${args.close}
    >
      <div slot="actions">
        <a class="action-link" href="#" title="Action link">Action link</a>
      </div>
    </atom-alert>

    <style>
      ${"\n  .action-link {\n    color: var(--color-brand-secondary-dark-1);\n  }\n"}
    </style>
  `,Default={render:args=>createAlert(args),args:{...AlertComponentArgs}},Info={render:args=>createAlert(args),args:{...AlertComponentArgs,color:"info",icon:"people"}},Success={render:args=>createAlert(args),args:{...AlertComponentArgs,color:"success",icon:"heart"}},Warning={render:args=>createAlert(args),args:{...AlertComponentArgs,color:"warning",icon:"warning"}},Danger={render:args=>createAlert(args),args:{...AlertComponentArgs,color:"danger",icon:"people"}};Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{\n  render: args => createAlert(args),\n  args: {\n    ...AlertComponentArgs\n  }\n}",...Default.parameters?.docs?.source}}},Info.parameters={...Info.parameters,docs:{...Info.parameters?.docs,source:{originalSource:"{\n  render: args => createAlert(args),\n  args: {\n    ...AlertComponentArgs,\n    color: 'info',\n    icon: 'people'\n  }\n}",...Info.parameters?.docs?.source}}},Success.parameters={...Success.parameters,docs:{...Success.parameters?.docs,source:{originalSource:"{\n  render: args => createAlert(args),\n  args: {\n    ...AlertComponentArgs,\n    color: 'success',\n    icon: 'heart'\n  }\n}",...Success.parameters?.docs?.source}}},Warning.parameters={...Warning.parameters,docs:{...Warning.parameters?.docs,source:{originalSource:"{\n  render: args => createAlert(args),\n  args: {\n    ...AlertComponentArgs,\n    color: 'warning',\n    icon: 'warning'\n  }\n}",...Warning.parameters?.docs?.source}}},Danger.parameters={...Danger.parameters,docs:{...Danger.parameters?.docs,source:{originalSource:"{\n  render: args => createAlert(args),\n  args: {\n    ...AlertComponentArgs,\n    color: 'danger',\n    icon: 'people'\n  }\n}",...Danger.parameters?.docs?.source}}};const __namedExportsOrder=["Default","Info","Success","Warning","Danger"]},"../../utils/storybook/enums/table.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{W:()=>Category});let Category=function(Category){return Category.CSS_CUSTOM_PROPERTIES="CSS Custom Properties",Category.EVENTS="Events",Category.METHODS="Methods",Category.PROPERTIES="Properties",Category.SLOTS="Slots",Category}({})}}]);
//# sourceMappingURL=components-alert-stories-alert-core-stories.90ee1280.iframe.bundle.js.map