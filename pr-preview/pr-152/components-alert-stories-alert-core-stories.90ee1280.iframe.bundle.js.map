{"version":3,"file":"components-alert-stories-alert-core-stories.90ee1280.iframe.bundle.js","mappings":";;;;;;;;;;;;;;AA8EA","sources":["webpack://@atomium/docs/../../packages/core/src/components/alert/stories/alert.args.ts"],"sourcesContent":["import { withActions } from '@storybook/addon-actions/decorator'\n\nimport { Category } from '@atomium/storybook-utils/enums/table'\n\nexport const AlertStoryArgs = {\n  decorators: [withActions],\n  parameters: {\n    actions: {\n      handles: ['atomClose'],\n    },\n    docs: {\n      description: {\n        component:\n          'Alerts are used to provide feedback to the user about the status of a task or process. Alerts can be used to notify the user about information or errors, success or warnings, or to confirm an action. <br> <br> You could pass a slot named `actions` to add buttons to the alert.',\n      },\n    },\n  },\n  argTypes: {\n    messageTitle: {\n      control: 'text',\n      description: 'The title of the alert.',\n      table: {\n        category: Category.PROPERTIES,\n      },\n    },\n    messageText: {\n      control: 'text',\n      description: 'The text message of the alert.',\n      table: {\n        category: Category.PROPERTIES,\n      },\n    },\n    color: {\n      control: 'select',\n      description: 'The color to use from your application palette.',\n      options: ['info', 'success', 'warning', 'danger', 'neutral'],\n      defaultValue: { summary: 'neutral' },\n      table: {\n        category: Category.PROPERTIES,\n      },\n    },\n    icon: {\n      control: 'text',\n      description: 'The name of the icon to use.',\n      table: {\n        category: Category.PROPERTIES,\n      },\n    },\n    close: {\n      control: 'boolean',\n      description: 'If `true`, the alert can be closed.',\n      defaultValue: { summary: false },\n      table: {\n        category: Category.PROPERTIES,\n      },\n    },\n    actions: {\n      description: 'Slot name to pass in action buttons.',\n      table: {\n        category: Category.SLOTS,\n      },\n    },\n    onClose: {\n      description: 'Event emitted when the alert is closed.',\n      table: {\n        category: Category.EVENTS,\n      },\n    },\n  },\n}\n\nexport const AlertComponentArgs = {\n  color: 'neutral',\n  close: true,\n  messageTitle: 'Title example of alert',\n  messageText: 'Nice message example',\n}\n\nexport const AlertCSS = `\n  .action-link {\n    color: var(--color-brand-secondary-dark-1);\n  }\n`\n"],"names":[],"sourceRoot":""}