"use strict";(globalThis.webpackChunk_atomium_docs=globalThis.webpackChunk_atomium_docs||[]).push([[535],{"../../packages/core/src/components/link/stories/link.core.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Button:()=>Button,Primary:()=>Primary,Secondary:()=>Secondary,__namedExportsOrder:()=>__namedExportsOrder,default:()=>link_core_stories});var lit=__webpack_require__("../../node_modules/lit/index.js");const link_core_stories={title:"Components/Link",decorators:[],parameters:{actions:{handles:[]},docs:{description:{component:"Link components are link children styled components. They are used to navigate to different pages (when used inside router components, such as router-link(Vue) and Link(Next)) or used to trigger user actions."}}},argTypes:{color:{control:"select",options:["primary","secondary"],defaultValue:{summary:"primary"},description:"The link color."},type:{control:"select",options:["anchor","button"],defaultValue:{summary:"anchor"},description:"The link type. Use anchor for navigation (combined with router-link or Link) and button for user actions."}}},createLink=(args,textExample="It should be used inside router components")=>lit.qy`
    <atom-link type="${args.type}" color="${args.color}">
      ${textExample}
    </atom-link>
  `,Primary={render:args=>createLink(args),args:{type:"anchor",color:"primary"}},Secondary={render:args=>createLink(args),args:{...Primary.args,color:"secondary"}},Button={render:args=>createLink(args,"It should be used to trigger user actions"),args:{...Primary.args,type:"button"}};Primary.parameters={...Primary.parameters,docs:{...Primary.parameters?.docs,source:{originalSource:"{\n  render: args => createLink(args),\n  args: {\n    type: 'anchor',\n    color: 'primary'\n  }\n}",...Primary.parameters?.docs?.source}}},Secondary.parameters={...Secondary.parameters,docs:{...Secondary.parameters?.docs,source:{originalSource:"{\n  render: args => createLink(args),\n  args: {\n    ...Primary.args,\n    color: 'secondary'\n  }\n}",...Secondary.parameters?.docs?.source}}},Button.parameters={...Button.parameters,docs:{...Button.parameters?.docs,source:{originalSource:"{\n  render: args => createLink(args, 'It should be used to trigger user actions'),\n  args: {\n    ...Primary.args,\n    type: 'button'\n  }\n}",...Button.parameters?.docs?.source}}};const __namedExportsOrder=["Primary","Secondary","Button"]}}]);
//# sourceMappingURL=components-link-stories-link-core-stories.5eb8c47f.iframe.bundle.js.map