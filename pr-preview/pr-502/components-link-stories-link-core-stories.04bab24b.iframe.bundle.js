"use strict";(globalThis.webpackChunk_atomium_docs=globalThis.webpackChunk_atomium_docs||[]).push([[535],{"../../packages/core/src/components/link/stories/link.core.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Button:()=>Button,Primary:()=>Primary,Secondary:()=>Secondary,__namedExportsOrder:()=>__namedExportsOrder,default:()=>link_core_stories});var lit=__webpack_require__("../../node_modules/lit/index.js");const LinkStoryArgs={decorators:[],parameters:{actions:{handles:[]},docs:{description:{component:"atom-link components are link children styled components. They are used to navigate to different pages (when used inside router components, such as router-link(Vue) and Link(Next)) or used to trigger user actions."}}},argTypes:{color:{control:"select",options:["primary","secondary"],defaultValue:{summary:"primary"},description:"The link color."},type:{control:"select",options:["anchor","button"],defaultValue:{summary:"anchor"},description:"The atom-link type. Use anchor for navigation (combined with router-link or Link) and button for user actions."}}},LinkReactStoryArgs=JSON.parse(JSON.stringify(LinkStoryArgs));LinkReactStoryArgs.parameters.docs.description.component="atom-link components are link children styled components. They are used to navigate to different pages (when used inside Link(Next)) or used to trigger user actions.<br/><br/> OBS: Link (Next) component does not render a anchor tag by default, so you need to wrap it with a tag for semantic reasons. You can create a wrapper component on your project to do this.",LinkReactStoryArgs.argTypes.type.description="The atom-link type. Use anchor for navigation (combined with Link) and button for user actions.";const LinkVueStoryArgs=JSON.parse(JSON.stringify(LinkStoryArgs));LinkVueStoryArgs.parameters.docs.description.component="atom-link components are link children styled components. They are used to navigate to different pages (when used inside router-link or NuxtLink or used to trigger user actions.",LinkVueStoryArgs.argTypes.type.description="The atom-link type. Use anchor for navigation (combined with router-link or NuxtLink) and button for user actions.";const link_core_stories={title:"Components/Link",...LinkStoryArgs},createLink=(args,textExample="It should be used inside router components")=>lit.qy`
    <a href="/nice-example">
      <atom-link type="${args.type}" color="${args.color}">
        ${textExample}
      </atom-link>
    </a>
  `,Primary={render:args=>createLink(args),args:{type:"anchor",color:"primary"}},Secondary={render:args=>createLink(args),args:{...Primary.args,color:"secondary"}},Button={render:args=>lit.qy`
    <atom-link type="${args.type}" color="${args.color}">
      It is a button! and can be used to trigger user actions
    </atom-link>
  `,args:{...Primary.args,type:"button"}};Primary.parameters={...Primary.parameters,docs:{...Primary.parameters?.docs,source:{originalSource:"{\n  render: args => createLink(args),\n  args: {\n    type: 'anchor',\n    color: 'primary'\n  }\n}",...Primary.parameters?.docs?.source}}},Secondary.parameters={...Secondary.parameters,docs:{...Secondary.parameters?.docs,source:{originalSource:"{\n  render: args => createLink(args),\n  args: {\n    ...Primary.args,\n    color: 'secondary'\n  }\n}",...Secondary.parameters?.docs?.source}}},Button.parameters={...Button.parameters,docs:{...Button.parameters?.docs,source:{originalSource:'{\n  render: args => html`\n    <atom-link type="${args.type}" color="${args.color}">\n      It is a button! and can be used to trigger user actions\n    </atom-link>\n  `,\n  args: {\n    ...Primary.args,\n    type: \'button\'\n  }\n}',...Button.parameters?.docs?.source}}};const __namedExportsOrder=["Primary","Secondary","Button"]}}]);
//# sourceMappingURL=components-link-stories-link-core-stories.04bab24b.iframe.bundle.js.map