{"version":3,"file":"components-textarea-stories-textarea-core-stories.883f01dc.iframe.bundle.js","mappings":";;;;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAKA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+DA;;;;;;;;;;;;;;;;;;;;;AAiCA","sources":["webpack://@atomium/docs/../../packages/core/src/components/textarea/stories/textarea.core.stories.tsx"],"sourcesContent":["import { Meta, StoryObj } from '@storybook/web-components'\nimport { html } from 'lit'\n\nimport { TextareaComponentArgs, TextareaStoryArgs } from './textarea.args'\n\nexport default {\n  title: 'Components/Textarea',\n  ...TextareaStoryArgs,\n} as Meta\n\nconst createTextarea = (args) => {\n  return html`\n    <atom-textarea\n      label=\"Label example\"\n      placeholder=\"Placeholder example\"\n      color=${args.color}\n      disabled=${args.disabled}\n      fill=${args.fill}\n      label-placement=${args.labelPlacement}\n      mode=${args.mode}\n      readonly=${args.readonly}\n      auto-grow=${args.autoGrow}\n      shape=${args.shape}\n      rows=${args.rows}\n      cols=${args.cols}\n      wrap=${args.wrap}\n      value=${args.value}\n      icon=${args.icon}\n      helper-text=${args.helperText}\n    ></atom-textarea>\n  `\n}\n\nexport const Default: StoryObj = {\n  render: (args) => createTextarea(args),\n  args: {\n    ...TextareaComponentArgs,\n  },\n}\n\nexport const Disabled: StoryObj = {\n  render: (args) => createTextarea(args),\n  args: {\n    ...TextareaComponentArgs,\n    disabled: true,\n  },\n}\n\nexport const TextareaIcon: StoryObj = {\n  render: (args) => createTextarea(args),\n  args: {\n    ...TextareaComponentArgs,\n    icon: 'account-multiple',\n  },\n}\n\nexport const HelperText: StoryObj = {\n  render: (args) => createTextarea(args),\n  args: {\n    ...TextareaComponentArgs,\n    helperText: 'This is a helper text example',\n  },\n}\n\nexport const ErrorState: StoryObj = {\n  render: () => html`\n    <atom-textarea\n      class=\"atom-textarea--error-example\"\n      label=\"Email\"\n      placeholder=\"Enter a valid email\"\n      helper-text=\"Example: atomium@juntossomosmais.com.br\"\n      error-text=\"Invalid email\"\n      value=\"invalid-email\"\n      has-error=\"true\"\n    ></atom-textarea>\n\n    <script>\n      ;(function () {\n        const textareaEl = document.querySelector(\n          '.atom-textarea--error-example'\n        )\n        textareaEl.addEventListener('atomChange', function (ev) {\n          validate(ev.target.value)\n        })\n\n        function validateEmail(email) {\n          return email.match(/[a-z0-9._%+-]+@[a-z0-9.-]+.[a-z]{2,4}$/)\n        }\n\n        function validate(value) {\n          const hasError = value !== '' && !validateEmail(value)\n          textareaEl.setAttribute('has-error', hasError)\n        }\n      })()\n    </script>\n  `,\n  parameters: {\n    docs: {\n      description: {\n        story:\n          'To check this behavior working you need to look the [canvas of component](/story/components-input--error-text)',\n      },\n    },\n  },\n}\n\nexport const WithCounter: StoryObj = {\n  render: () => html`\n    <atom-textarea\n      class=\"atom-textarea--counter-example\"\n      label=\"Counter example\"\n      placeholder=\"Start typing...\"\n      counter=\"true\"\n      maxlength=\"300\"\n    ></atom-textarea>\n\n    <script>\n      ;(function () {\n        const formatter =  () => {\n          const customTextarea = document.querySelector(\n            '.atom-textarea--counter-example'\n          )\n          customTextarea.counterFormatter = (inputLength, maxLength) =>\n            inputLength + '/300'\n        })\n        formatter()\n      })()\n    </script>\n  `,\n}\n"],"names":[],"sourceRoot":""}