import{R as g,r as U}from"./index-qD9s0IOr.js";import"./index-B5Z3Dd3z.js";import{d as V}from"./loader-gcri7qCM.js";import{C as i}from"./table-D060eKuu.js";import{w as B}from"./decorator-CCfbKlgz.js";import"./_commonjsHelpers-CqkleIqs.js";import"./iframe-DTshtJ0Q.js";import"./v4-CtRu48qb.js";const F=e=>e.toLowerCase().split("-").map(t=>t.charAt(0).toUpperCase()+t.slice(1)).join(""),y=e=>e.replace(/([A-Z])/g,t=>`-${t[0].toLowerCase()}`),M=(e,t,r={})=>{if(e instanceof Element){const n=q(e.classList,t,r);n!==""&&(e.className=n),Object.keys(t).forEach(o=>{if(!(o==="children"||o==="style"||o==="ref"||o==="class"||o==="className"||o==="forwardedRef"))if(o.indexOf("on")===0&&o[2]===o[2].toUpperCase()){const s=o.substring(2),c=s[0].toLowerCase()+s.substring(1);D(c)||Z(e,c,t[o])}else{e[o]=t[o];const s=typeof t[o];s==="boolean"?t[o]===!0?e.setAttribute(y(o),""):e.removeAttribute(y(o)):s==="string"&&e.setAttribute(y(o),t[o])}})}},q=(e,t,r)=>{const n=t.className||t.class,o=r.className||r.class,s=O(e),c=O(n?n.split(" "):[]),m=O(o?o.split(" "):[]),p=[];return s.forEach(a=>{c.has(a)?(p.push(a),c.delete(a)):m.has(a)||p.push(a)}),c.forEach(a=>p.push(a)),p.join(" ")},z=e=>{switch(e){case"doubleclick":return"dblclick"}return e};/**
 * Checks if an event is supported in the current execution environment.
 * @license Modernizr 3.0.0pre (Custom Build) | MIT
 */const D=e=>{if(typeof document>"u")return!0;{const t="on"+z(e);let r=t in document;if(!r){const n=document.createElement("div");n.setAttribute(t,"return;"),r=typeof n[t]=="function"}return r}},Z=(e,t,r)=>{const n=e.__events||(e.__events={}),o=n[t];o&&e.removeEventListener(t,o),e.addEventListener(t,n[t]=function(c){r&&r.call(this,c)})},O=e=>{const t=new Map;return e.forEach(r=>t.set(r,r)),t},$=(e,t)=>{typeof e=="function"?e(t):e!=null&&(e.current=t)},G=(...e)=>t=>{e.forEach(r=>{$(r,t)})},J=(e,t)=>{const r=(n,o)=>g.createElement(e,Object.assign({},n,{forwardedRef:o}));return r.displayName=t,g.forwardRef(r)};var K=function(e,t){var r={};for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&t.indexOf(n)<0&&(r[n]=e[n]);if(e!=null&&typeof Object.getOwnPropertySymbols=="function")for(var o=0,n=Object.getOwnPropertySymbols(e);o<n.length;o++)t.indexOf(n[o])<0&&Object.prototype.propertyIsEnumerable.call(e,n[o])&&(r[n[o]]=e[n[o]]);return r};const I=(e,t,r,n)=>{const o=F(e),s=class extends g.Component{constructor(c){super(c),this.setComponentElRef=m=>{this.componentEl=m}}componentDidMount(){this.componentDidUpdate(this.props)}componentDidUpdate(c){M(this.componentEl,this.props,c)}render(){const c=this.props,{children:m,forwardedRef:p,style:a,className:Y,ref:ee}=c,T=K(c,["children","forwardedRef","style","className","ref"]);let L=Object.keys(T).reduce((E,l)=>{const R=T[l];if(l.indexOf("on")===0&&l[2]===l[2].toUpperCase()){const f=l.substring(2).toLowerCase();typeof document<"u"&&D(f)&&(E[l]=R)}else{const f=typeof R;(f==="string"||f==="boolean"||f==="number")&&(E[y(l)]=R)}return E},{});const H=Object.assign(Object.assign({},L),{ref:G(p,this.setComponentElRef),style:a});return U.createElement(e,H,m)}static get displayName(){return o}};return J(s,o)};V();const Q=I("atom-button"),W=I("atom-rich-tooltip"),X={parameters:{actions:{handles:["atomOpen","atomClose"]},decorators:[B],docs:{description:{component:"Rich Tooltip is a component that provides more information to the user and allows them to perform quick actions within the context of the problem."}},layout:"centered"},argTypes:{placement:{control:"select",defaultValue:{summary:"top"},options:["top","top-start","top-end","bottom","bottom-start","bottom-end","right","left"],description:"Determines placement for tooltip",table:{category:i.PROPERTIES}},action:{control:"select",defaultValue:{summary:"hover"},options:["hover","click"],description:"Determines the trigger action for the tooltip: `hover` or `click`.",table:{category:i.PROPERTIES}},element:{control:"text",description:"Specifies the element responsible for opening/closing the tooltip.",table:{category:i.PROPERTIES}},open:{control:"boolean",description:"Controls whether the tooltip is open or closed.",table:{category:i.PROPERTIES}},label:{control:"text",description:"Determines a title for tooltip.",table:{category:i.PROPERTIES}},text:{control:"text",description:"Determines a text for tooltip.",table:{category:i.PROPERTIES}},actionText:{control:"text",description:"Determines a text for action button.",table:{category:i.PROPERTIES}},buttonAction:{description:"Event emitted when the action button is clicked. Action needs to be click to show the button.",table:{category:i.EVENTS}},atomOpen:{description:"Event emitted when hover element, but for mobile when click in element.",table:{category:i.EVENTS}},atomClose:{description:"Event emitted when the tooltip is closed.",table:{category:i.EVENTS}}}},C={element:"atomium-element",placement:"top",text:"Supporting line text lorem ipsum dolor sit amet, consectetur",action:"hover",label:"Title",actionText:"Action Button",open:!1},le={title:"Components/Rich Tooltip",...X},v=(e,t="Hover")=>h(g.Fragment,null,h(Q,{fill:"solid",size:"large",id:t,"aria-describedby":"atom-rich-tooltip"},t),h(W,{id:"atom-rich-tooltip",placement:e.placement,element:t,label:e.label,action:e.action,actionText:e.actionText,open:e.open},e.text)),d={render:e=>v(e,"Hover"),args:{...C,element:"hover",placement:"top",open:!1}},u={render:e=>v(e,"Click"),args:{...C,element:"click",placement:"top",action:"click",open:!1}},b={render:e=>v(e,"Opened"),args:{...C,element:"opened",placement:"left",action:"click",open:!0}};var w,x,S;d.parameters={...d.parameters,docs:{...(w=d.parameters)==null?void 0:w.docs,source:{originalSource:`{
  render: args => createRichTooltip(args, 'Hover'),
  args: {
    ...RichTooltipComponentArgs,
    element: 'hover',
    placement: 'top',
    open: false
  }
}`,...(S=(x=d.parameters)==null?void 0:x.docs)==null?void 0:S.source}}};var k,P,A;u.parameters={...u.parameters,docs:{...(k=u.parameters)==null?void 0:k.docs,source:{originalSource:`{
  render: args => createRichTooltip(args, 'Click'),
  args: {
    ...RichTooltipComponentArgs,
    element: 'click',
    placement: 'top',
    action: 'click',
    open: false
  }
}`,...(A=(P=u.parameters)==null?void 0:P.docs)==null?void 0:A.source}}};var _,j,N;b.parameters={...b.parameters,docs:{...(_=b.parameters)==null?void 0:_.docs,source:{originalSource:`{
  render: args => createRichTooltip(args, 'Opened'),
  args: {
    ...RichTooltipComponentArgs,
    element: 'opened',
    placement: 'left',
    action: 'click',
    open: true
  }
}`,...(N=(j=b.parameters)==null?void 0:j.docs)==null?void 0:N.source}}};const pe=["Hover","Click","Opened"];export{u as Click,d as Hover,b as Opened,pe as __namedExportsOrder,le as default};
