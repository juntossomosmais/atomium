{"version":3,"file":"components-link-stories-link-core-stories.fb553c74.iframe.bundle.js","mappings":";;;AAiBA;AACA;AACA;AACA;;AAEA;;;AAMA;;AA+BA;;;;AAKA;;AAQA;;;;;AAMA;AAQA;;;AAIA;AAQA;;;AAIA","sources":["webpack://@atomium/docs/../../packages/core/src/components/link/stories/link.core.stories.tsx"],"sourcesContent":["import { Meta, StoryObj } from '@storybook/web-components'\nimport { html } from 'lit'\n\nimport { LinkStoryArgs } from './link.args'\n\nexport default {\n  title: 'Components/Link',\n  ...LinkStoryArgs,\n} as Meta\n\nconst createLink = (\n  args,\n  textExample = 'It should be used inside router components'\n) => {\n  return html`\n    <a href=\"/nice-example\">\n      <atom-link\n        type=\"${args.type}\"\n        color=\"${args.color}\"\n        loading=\"${args.loading}\"\n        size=\"${args.size}\"\n      >\n        ${textExample}\n      </atom-link>\n    </a>\n  `\n}\n\nexport const Default: StoryObj = {\n  render: (args) => createLink(args),\n  args: {\n    type: 'anchor',\n    color: 'secondary',\n    size: 'medium',\n    loading: false,\n  },\n}\n\nexport const Primary: StoryObj = {\n  render: (args) => createLink(args),\n  args: {\n    type: 'anchor',\n    color: 'primary',\n    size: 'medium',\n    loading: false,\n  },\n}\n\nexport const Secondary: StoryObj = {\n  render: (args) => createLink(args),\n  args: {\n    ...Primary.args,\n    color: 'secondary',\n  },\n}\n\nexport const Loading: StoryObj = {\n  render: (args) => html`\n    <a href=\"/nice-example\">\n      <atom-link type=\"${args.type}\" color=\"${args.color}\" loading>\n        Loading...\n      </atom-link>\n    </a>\n  `,\n  args: {\n    ...Default.args,\n  },\n}\n\nexport const WithIcon: StoryObj = {\n  render: (args) => html`\n    <a href=\"/nice-example\">\n      <atom-link type=\"${args.type}\" color=\"${args.color}\">\n        <span> Nice example with icon </span>\n        <atom-icon icon=\"heart\" />\n      </atom-link>\n    </a>\n  `,\n  args: {\n    ...Default.args,\n    color: 'secondary',\n  },\n}\n\nexport const Button: StoryObj = {\n  render: (args) => html`\n    <atom-link type=\"${args.type}\" color=\"${args.color}\">\n      It is a button! and can be used to trigger user actions\n    </atom-link>\n  `,\n  args: {\n    ...Default.args,\n    type: 'button',\n  },\n}\n\nexport const Size: StoryObj = {\n  render: (args) => html`\n    <atom-link size=\"${args.size}\" color=\"${args.color}\">\n      It is a large link, using large font size\n    </atom-link>\n  `,\n  args: {\n    ...Default.args,\n    size: 'large',\n  },\n}\n"],"names":[],"sourceRoot":""}