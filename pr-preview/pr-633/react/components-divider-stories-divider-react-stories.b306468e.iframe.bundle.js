"use strict";(globalThis.webpackChunk_atomium_docs_react=globalThis.webpackChunk_atomium_docs_react||[]).push([[937],{"../../packages/core/src/components/divider/stories/divider.react.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Horizontal:()=>Horizontal,Vertical:()=>Vertical,__namedExportsOrder:()=>__namedExportsOrder,default:()=>divider_react_stories});var dist=__webpack_require__("../../packages/core/react/dist/index.js"),react=__webpack_require__("../../node_modules/react/index.js");const divider_react_stories={title:"Components/Divider",component:dist.RG,decorators:[],parameters:{actions:{handles:[]},docs:{description:{component:"The Divider is a thin line that helps separate and group content in the interface. This component can also be used to define rhythm and order."}}},argTypes:{type:{control:"select",options:["horizontal","vertical"],defaultValue:{summary:"horizontal"},description:"The type of the divider, will change your anatomy. The component can be used to separate content in two directions, vertical or horizontal."}}},createDivider=args=>"vertical"===args.type?react.createElement("div",{style:{height:"100px"}},react.createElement(dist.RG,{type:args.type})):react.createElement(dist.RG,{type:args.type}),Horizontal={render:args=>createDivider(args),args:{type:"horizontal"}},Vertical={render:args=>createDivider(args),args:{type:"vertical"}},__namedExportsOrder=["Horizontal","Vertical"];Horizontal.parameters={...Horizontal.parameters,docs:{...Horizontal.parameters?.docs,source:{originalSource:"{\n  render: args => createDivider(args),\n  args: {\n    type: 'horizontal'\n  }\n}",...Horizontal.parameters?.docs?.source}}},Vertical.parameters={...Vertical.parameters,docs:{...Vertical.parameters?.docs,source:{originalSource:"{\n  render: args => createDivider(args),\n  args: {\n    type: 'vertical'\n  }\n}",...Vertical.parameters?.docs?.source}}}}}]);