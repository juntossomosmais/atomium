/*! For license information please see 7582.c45a8d4e.iframe.bundle.js.LICENSE.txt */
"use strict";(globalThis.webpackChunk_atomium_docs=globalThis.webpackChunk_atomium_docs||[]).push([[7582],{"../../packages/core/dist/esm/keyboard-7c59b832.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{KEYBOARD_DID_CLOSE:()=>KEYBOARD_DID_CLOSE,KEYBOARD_DID_OPEN:()=>KEYBOARD_DID_OPEN,copyVisualViewport:()=>copyVisualViewport,keyboardDidClose:()=>keyboardDidClose,keyboardDidOpen:()=>keyboardDidOpen,keyboardDidResize:()=>keyboardDidResize,resetKeyboardAssist:()=>resetKeyboardAssist,setKeyboardClose:()=>setKeyboardClose,setKeyboardOpen:()=>setKeyboardOpen,startKeyboardAssist:()=>startKeyboardAssist,trackViewportChanges:()=>trackViewportChanges});const KEYBOARD_DID_OPEN="ionKeyboardDidShow",KEYBOARD_DID_CLOSE="ionKeyboardDidHide";let previousVisualViewport={},currentVisualViewport={},keyboardOpen=!1;const resetKeyboardAssist=()=>{previousVisualViewport={},currentVisualViewport={},keyboardOpen=!1},startKeyboardAssist=win=>{startNativeListeners(win),win.visualViewport&&(currentVisualViewport=copyVisualViewport(win.visualViewport),win.visualViewport.onresize=()=>{trackViewportChanges(win),keyboardDidOpen()||keyboardDidResize(win)?setKeyboardOpen(win):keyboardDidClose(win)&&setKeyboardClose(win)})},startNativeListeners=win=>{win.addEventListener("keyboardDidShow",(ev=>setKeyboardOpen(win,ev))),win.addEventListener("keyboardDidHide",(()=>setKeyboardClose(win)))},setKeyboardOpen=(win,ev)=>{fireKeyboardOpenEvent(win,ev),keyboardOpen=!0},setKeyboardClose=win=>{fireKeyboardCloseEvent(win),keyboardOpen=!1},keyboardDidOpen=()=>{const scaledHeightDifference=(previousVisualViewport.height-currentVisualViewport.height)*currentVisualViewport.scale;return!keyboardOpen&&previousVisualViewport.width===currentVisualViewport.width&&scaledHeightDifference>150},keyboardDidResize=win=>keyboardOpen&&!keyboardDidClose(win),keyboardDidClose=win=>keyboardOpen&&currentVisualViewport.height===win.innerHeight,fireKeyboardOpenEvent=(win,nativeEv)=>{const keyboardHeight=nativeEv?nativeEv.keyboardHeight:win.innerHeight-currentVisualViewport.height,ev=new CustomEvent(KEYBOARD_DID_OPEN,{detail:{keyboardHeight}});win.dispatchEvent(ev)},fireKeyboardCloseEvent=win=>{const ev=new CustomEvent(KEYBOARD_DID_CLOSE);win.dispatchEvent(ev)},trackViewportChanges=win=>{previousVisualViewport=Object.assign({},currentVisualViewport),currentVisualViewport=copyVisualViewport(win.visualViewport)},copyVisualViewport=visualViewport=>({width:Math.round(visualViewport.width),height:Math.round(visualViewport.height),offsetTop:visualViewport.offsetTop,offsetLeft:visualViewport.offsetLeft,pageTop:visualViewport.pageTop,pageLeft:visualViewport.pageLeft,scale:visualViewport.scale})}}]);